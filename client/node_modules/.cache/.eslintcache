[{"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/index.js":"1","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/App.js":"2","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/lang/i18n.js":"3","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/contexts/LanguageContext.js":"4","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/store.js":"5","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/style/GlobalStyle.js":"6","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/rootReducer.js":"7","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/router/Router.jsx":"8","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/hotelSlice.js":"9","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/authSlice.js":"10","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/commentSlice.js":"11","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/likeSlice.js":"12","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/MainPage.jsx":"13","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/LoginPage.jsx":"14","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/Mypage.jsx":"15","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/JoinPage.jsx":"16","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelDetailPage.jsx":"17","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelListPage.jsx":"18","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/UploadHotelPage.jsx":"19","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/CheckHotelAdminProfile.jsx":"20","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/EditHotel.jsx":"21","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/hotelActions.js":"22","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/IntroductionPage.jsx":"23","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/ChangePasswordForm.jsx":"24","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/HotelReservation.jsx":"25","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/HotelPayment.jsx":"26","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/HotelCard.jsx":"27","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/HotelDetailStyle.js":"28","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/UploadHotelPageStyle.js":"29","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/services/notifications.jsx":"30","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/main/MainCategory.jsx":"31","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/main/MainNews.jsx":"32","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/map/Map.jsx":"33","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/chat/Chat.jsx":"34","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentCard.jsx":"35","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentContainer.jsx":"36","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/search/Searchbar.jsx":"37","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comparison/HotelComparison.jsx":"38","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/footer/Footer.jsx":"39","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/Header.jsx":"40","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/like/Like.jsx":"41","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/banner/Banner.jsx":"42","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/HotelPaymentStyle.js":"43","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/banner/BannerStyle.jsx":"44","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/ChatStyle.js":"45","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/payment/Payment.jsx":"46","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/main/MainCategoryStyle.jsx":"47","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/main/MainNewsStyle.jsx":"48","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/authAction.js":"49","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/map/MapStyle.jsx":"50","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/datepicker/DayPicker.jsx":"51","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/search/SearchbarStyle.js":"52","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentStyle.jsx":"53","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentForm.jsx":"54","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/footer/FooterStyle.jsx":"55","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/like/LikeStyle.jsx":"56","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/HeaderStyle.jsx":"57","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/star/Star.jsx":"58","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/search/SearchBarStyle.js":"59","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/layout/Layout.jsx":"60","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/MyPageStyle.js":"61","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/HotelListStyle.js":"62","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/search/SearchBar.jsx":"63","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/LoginPageStyle.js":"64","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/MainPageStyle.js":"65","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/users/WithdrawalPart.jsx":"66","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/ChangePasswordFormStyle.js":"67","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/MainHeader.jsx":"68","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/paymentSlice.js":"69","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/HotelReservationStyle.js":"70","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/Sidebar.jsx":"71","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/SidebarStyle.jsx":"72","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/CommentPage.jsx":"73","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/CheckHotelAdminStyle.js":"74","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/IntroductionInputPageStyle.js":"75","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/mypage/ActivitySelect.jsx":"76","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/mypage/MyPageInfo.jsx":"77"},{"size":1090,"mtime":1694334387751,"results":"78","hashOfConfig":"79"},{"size":150,"mtime":1694332151956,"results":"80","hashOfConfig":"79"},{"size":447,"mtime":1703943569567,"results":"81","hashOfConfig":"79"},{"size":671,"mtime":1690722720591,"results":"82","hashOfConfig":"79"},{"size":645,"mtime":1696320264283,"results":"83","hashOfConfig":"79"},{"size":2399,"mtime":1706420589815,"results":"84","hashOfConfig":"79"},{"size":471,"mtime":1706427474102,"results":"85","hashOfConfig":"79"},{"size":1500,"mtime":1708441479953,"results":"86","hashOfConfig":"79"},{"size":1076,"mtime":1708234336285,"results":"87","hashOfConfig":"79"},{"size":909,"mtime":1704182636463,"results":"88","hashOfConfig":"79"},{"size":3993,"mtime":1698577627162,"results":"89","hashOfConfig":"79"},{"size":1751,"mtime":1694079076577,"results":"90","hashOfConfig":"79"},{"size":2572,"mtime":1706420832733,"results":"91","hashOfConfig":"79"},{"size":3207,"mtime":1706430817079,"results":"92","hashOfConfig":"79"},{"size":4912,"mtime":1708349113945,"results":"93","hashOfConfig":"79"},{"size":3541,"mtime":1705907548766,"results":"94","hashOfConfig":"79"},{"size":6613,"mtime":1708414550039,"results":"95","hashOfConfig":"79"},{"size":5797,"mtime":1708244545957,"results":"96","hashOfConfig":"79"},{"size":7145,"mtime":1706508996206,"results":"97","hashOfConfig":"79"},{"size":1624,"mtime":1708245826742,"results":"98","hashOfConfig":"79"},{"size":15469,"mtime":1708443884715,"results":"99","hashOfConfig":"79"},{"size":875,"mtime":1706427503201,"results":"100","hashOfConfig":"79"},{"size":4883,"mtime":1708244323914,"results":"101","hashOfConfig":"79"},{"size":3436,"mtime":1705840951302,"results":"102","hashOfConfig":"79"},{"size":7706,"mtime":1705241848383,"results":"103","hashOfConfig":"79"},{"size":4499,"mtime":1705493631561,"results":"104","hashOfConfig":"79"},{"size":7166,"mtime":1708482011877,"results":"105","hashOfConfig":"79"},{"size":2938,"mtime":1708244296151,"results":"106","hashOfConfig":"79"},{"size":2423,"mtime":1696763921345,"results":"107","hashOfConfig":"79"},{"size":1755,"mtime":1696326738113,"results":"108","hashOfConfig":"79"},{"size":1419,"mtime":1705768226344,"results":"109","hashOfConfig":"79"},{"size":1321,"mtime":1703949280442,"results":"110","hashOfConfig":"79"},{"size":1700,"mtime":1700392073729,"results":"111","hashOfConfig":"79"},{"size":6129,"mtime":1707033342004,"results":"112","hashOfConfig":"79"},{"size":3443,"mtime":1704376364863,"results":"113","hashOfConfig":"79"},{"size":3271,"mtime":1707033216867,"results":"114","hashOfConfig":"79"},{"size":1620,"mtime":1703958876367,"results":"115","hashOfConfig":"79"},{"size":1305,"mtime":1704082119481,"results":"116","hashOfConfig":"79"},{"size":1461,"mtime":1690203093745,"results":"117","hashOfConfig":"79"},{"size":2062,"mtime":1704187726158,"results":"118","hashOfConfig":"79"},{"size":1316,"mtime":1696826459921,"results":"119","hashOfConfig":"79"},{"size":1604,"mtime":1705768182031,"results":"120","hashOfConfig":"79"},{"size":1497,"mtime":1706671683595,"results":"121","hashOfConfig":"79"},{"size":3144,"mtime":1705242998971,"results":"122","hashOfConfig":"79"},{"size":6615,"mtime":1705841747997,"results":"123","hashOfConfig":"79"},{"size":1763,"mtime":1700392558289,"results":"124","hashOfConfig":"79"},{"size":669,"mtime":1706420925503,"results":"125","hashOfConfig":"79"},{"size":1354,"mtime":1690203068796,"results":"126","hashOfConfig":"79"},{"size":2015,"mtime":1706430408795,"results":"127","hashOfConfig":"79"},{"size":992,"mtime":1700392102482,"results":"128","hashOfConfig":"79"},{"size":2256,"mtime":1700387513474,"results":"129","hashOfConfig":"79"},{"size":280,"mtime":1700321363595,"results":"130","hashOfConfig":"79"},{"size":2622,"mtime":1700387425820,"results":"131","hashOfConfig":"79"},{"size":1774,"mtime":1703943569565,"results":"132","hashOfConfig":"79"},{"size":601,"mtime":1690203101887,"results":"133","hashOfConfig":"79"},{"size":340,"mtime":1691305107957,"results":"134","hashOfConfig":"79"},{"size":2895,"mtime":1706672633331,"results":"135","hashOfConfig":"79"},{"size":1874,"mtime":1702799468329,"results":"136","hashOfConfig":"79"},{"size":485,"mtime":1703959665107,"results":"137","hashOfConfig":"79"},{"size":174,"mtime":1703960166561,"results":"138","hashOfConfig":"79"},{"size":4029,"mtime":1708245503807,"results":"139","hashOfConfig":"79"},{"size":4700,"mtime":1705904688805,"results":"140","hashOfConfig":"79"},{"size":745,"mtime":1704082248320,"results":"141","hashOfConfig":"79"},{"size":1820,"mtime":1705907674215,"results":"142","hashOfConfig":"79"},{"size":903,"mtime":1706420939122,"results":"143","hashOfConfig":"79"},{"size":958,"mtime":1705491245947,"results":"144","hashOfConfig":"79"},{"size":1516,"mtime":1705840999461,"results":"145","hashOfConfig":"79"},{"size":2556,"mtime":1706714527668,"results":"146","hashOfConfig":"79"},{"size":3408,"mtime":1705242576608,"results":"147","hashOfConfig":"79"},{"size":951,"mtime":1704081258029,"results":"148","hashOfConfig":"79"},{"size":2823,"mtime":1705242471388,"results":"149","hashOfConfig":"79"},{"size":781,"mtime":1705242463967,"results":"150","hashOfConfig":"79"},{"size":856,"mtime":1698129469077,"results":"151","hashOfConfig":"79"},{"size":723,"mtime":1708246276084,"results":"152","hashOfConfig":"79"},{"size":1271,"mtime":1708246129346,"results":"153","hashOfConfig":"79"},{"size":1756,"mtime":1708244517968,"results":"154","hashOfConfig":"79"},{"size":1093,"mtime":1708244510071,"results":"155","hashOfConfig":"79"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"160"},"h4o4je",{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"160"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211"},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","suppressedMessages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"231","messages":"232","suppressedMessages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234"},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238"},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"252","messages":"253","suppressedMessages":"254","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","suppressedMessages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"160"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268"},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275"},{"filePath":"276","messages":"277","suppressedMessages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","suppressedMessages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"285","messages":"286","suppressedMessages":"287","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"289"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"160"},{"filePath":"294","messages":"295","suppressedMessages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297"},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","suppressedMessages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"322","messages":"323","suppressedMessages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"160"},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"160"},{"filePath":"348","messages":"349","suppressedMessages":"350","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357"},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389"},{"filePath":"390","messages":"391","suppressedMessages":"392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","suppressedMessages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396"},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/index.js",["409","410","411"],[],"import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./lang/i18n\";\nimport { LanguageProvider } from \"./contexts/LanguageContext\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport GlobalStyle from \"./style/GlobalStyle\";\nimport io from \"socket.io-client\";\nimport i18n from \"./lang/i18n\";\n// import 'setimmediate';\n\n\nconst socket = io.connect(\"http://localhost:3000\");\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\n\nif (typeof setImmediate === 'undefined') {\n  const setImmed = require('setimmediate');\n  global.setImmediate = setImmed.setImmediate;\n  global.clearImmediate = setImmed.clearImmediate;\n}\n\nroot.render(\n  \n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        {/* <LanguageProvider> */}\n          <App />\n          <GlobalStyle />\n        {/* </LanguageProvider> */}\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>\n\n);\n",[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/App.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/lang/i18n.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/contexts/LanguageContext.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/store.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/style/GlobalStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/rootReducer.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/router/Router.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/hotelSlice.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/authSlice.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/commentSlice.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/likeSlice.js",["412"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// const axios = require('axios');\n\nimport axios from 'axios';\n\n\n//좋아요 초기 상태\nconst initialState = {\n  likes: {},\n};\n\n//해당 아이디 좋아요 가져오기\nexport const fetchUserLikes = createAsyncThunk(\n  \"likes/fetchUserLikes\",\n  async (user_id) => {\n    try {\n      const response = await axios.get(`/api/like/${user_id}`);\n      console.log(response.data);\n      return response.data;\n    } catch (error) {\n      console.error(`fetchLikeHotels`, error);\n    }\n  }\n);\n\n//좋아요 누르기\nexport const updateLike = createAsyncThunk(\n  \"likes/updateLike\",\n  async ({ hotel_id, user_id, addLike }) => {\n    try {\n      const response = await axios.post(\"/api/like\", {\n        hotel_id,\n        user_id,\n        addLike,\n      });\n      return { hotel_id, liked: addLike };\n    } catch (error) {\n      console.error(\"updateLike\", error);\n    }\n  }\n);\n\nconst likeSlice = createSlice({\n  name: \"likes\",\n  initialState,\n  reducers: {\n    resetLikes: (state) => {\n      state.likes = {};\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchUserLikes.fulfilled, (state, action) => {\n      if (action.payload) {\n        action.payload.forEach((hotel) => {\n          state.likes[hotel.hotel_id] = hotel;\n        });\n      }\n    });\n    builder.addCase(updateLike.fulfilled, (state, action) => {\n      const { hotel_id, liked } = action.payload;\n      if (liked) {\n        //true\n        //ture로 likes객체에 hotel_id 저장\n        state.likes[hotel_id] = true;\n      } else {\n        //아니면 삭제\n        delete state.likes[hotel_id];\n      }\n    });\n  },\n});\n\nexport const { resetLikes } = likeSlice.actions;\n\nexport default likeSlice.reducer;\n","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/MainPage.jsx",["413"],[],"import React, { useEffect, useState } from 'react';\nimport Footer from '../components/shared/footer/Footer';\nimport styled from \"styled-components\";\nimport axios from 'axios';\nimport { MainContainer, MainLayout, CardContainer, MainWapper, ChatButtonContainer, MainP } from '../components/pagestyles/MainPageStyle';\nimport MainCategory from '../components/main/MainCategory';\nimport Chat from '../components/chat/Chat';\nimport HotelCard from '../components/hotel/HotelCard';\nimport Banner from '../components/shared/banner/Banner';\nimport MainHeader from '../components/shared/header/MainHeader';\n\nexport default function MainPage() {\n\n    const [hotelList, setHotelList] = useState([]);\n    const [isChatOpen, setIsChatOpen] = useState(false);\n    useEffect(() => {\n        axios.get('/api/hotelList')\n            .then(response => {\n                console.log(response.data,\"반응값보자\");\n                setHotelList(response.data);\n            })\n            .catch(error => {\n                console.error('There was an error', error);\n                alert('데이터를 불러오는 데 실패하였습니다. 잠시 후 다시 시도해주세요.');\n            });\n    },[])\n    \n    return (\n        <MainLayout>\n            <MainWapper>\n                <MainHeader/>\n                <MainContainer>\n                    <div>\n                    <Banner/>\n                    </div>\n                    <MainCategory />\n                </MainContainer>\n            </MainWapper>\n            <MainP>빠르고 간편하게 세우는 여행 계획<br/>\n테마를 선택하고 대한민국 최고의 여행지로 떠나보세요</MainP>\n            <CardContainer>\n            <div style={{ display: 'flex', flexWrap: 'wrap', width: '100%',margin: '50px 0' }}>\n                    {hotelList.map((hotel, index) => (\n                    <HotelCard style={{width:'calc(20% - 40px)', marginTop: '50px', marginRight: '20px', marginBottom: '50px', marginLeft: '20px'  }} key={index} hotel={hotel} />\n                    ))}\n                    \n                </div>\n                \n            </CardContainer>\n            <ChatButtonContainer>\n                {!isChatOpen && \n                    <button onClick={() => setIsChatOpen(true)}>\n                        <img src={require(\"../assets/b.png\")}  alt=\"open chat\" />\n                    </button>\n                }\n                <Chat isChatOpen={isChatOpen} handleChatClose={() => setIsChatOpen(false)}/>\n            </ChatButtonContainer>\n            <Footer/>\n        \n        </MainLayout>\n    );\n}\n","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/LoginPage.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/Mypage.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/JoinPage.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelDetailPage.jsx",["414","415"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport Like from '../components/shared/like/Like';\nimport HotelPayment from '../components/hotel/HotelPayment';\nimport {HotelLayout,\n        HotelContiner,\n        HotelHeader,\n        HotelPrice,\n        HotelSubInfo,\n        HotelInfo,\n        HotelCommentInfo,\n        Line, \n        CancelButton,\n        HeaderLeft,\n        HeaderRight,\n        MainImg,\n        } from '../components/pagestyles/HotelDetailStyle'        \nimport CommentContainer from '../components/hotel/comment/CommentContainer';\nimport { FaStar } from 'react-icons/fa';\nimport Map from '../components/map/Map';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteHotel } from '../redux/hotelActions';\nimport MainHeader from '../components/shared/header/MainHeader';\nimport AWS from 'aws-sdk';\nimport Modal from 'react-modal';\nimport CheckHotelAdminProfile from './CheckHotelAdminProfile';\n\nModal.setAppElement(\"#root\");\n\nexport default function HotelDetailPage() {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector((state) => state.auth?.isLoggedIn);\n  const [loggedInUser, setLoggedInUser] = useState(null);\n\n  const {hotelId} = useParams();\n  const [hotel,setHotel] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [mainImageIndex, setMainImageIndex] = useState(0);\n  const [isShowMore, setIsShowMore] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  AWS.config.update({\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n  })\n  const s3 = new AWS.S3();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const storedUser = localStorage.getItem('loggedInUser');\n      setLoggedInUser(JSON.parse(storedUser));\n      \n    } else {\n      setLoggedInUser(null);\n    }\n  }, [isLoggedIn]);\n\n\n  useEffect(() =>{\n    fetchHotelDetail();\n  },[]);\n\n  const fetchHotelDetail = async() =>{\n    try{\n      const response = await axios.get(`/api/hotel/${hotelId}`);\n      console.log(\"API response:\", response); \n      setHotel(response.data);\n    }catch(error){\n      console.error(`Error fetching hotel detail : ${error}`);\n      console.error(`Error response: ${error.response}`); \n      setError('Faild to load hotel details');\n    }\n  };\n\nconst processImages = (imagePath) => {\n  if (imagePath) {\n    if (typeof imagePath === 'string' && imagePath.trim().charAt(0) === '[') {\n      const parsedImages = JSON.parse(imagePath);\n      if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n        return parsedImages;\n      }\n    } else {\n      console.log(\"imagePath!!!\",imagePath);\n      return [imagePath];\n    }\n  }\n  return [];\n};\n\n// 대표 이미지 변경 함수\n  const changeMainImage = (index) => {\n    setMainImageIndex(index);\n  };\n\n  const deleteMyHotel = () => {\n    if(window.confirm(\"삭제하시겠습니까?\")) {\n      dispatch(deleteHotel({hotel_id:hotelId}))\n      .then(response => {\n        if(response.error) {\n          setErrorMessage(\"권한이 없어서 삭제가 안됩니다!\",response.error.message);\n        } else {\n          navigate(\"/\");\n        }\n      });\n    }\n  }\n\nif(!hotel){\n    return <h3>Loading</h3>\n  }\n  const imagePaths = processImages(hotel.hotelImages);\n  const openModal =() =>{\n    setIsModalOpen(true);\n  }\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <HotelLayout>\n      <MainHeader bgColor=\"fff\"/>\n      <MainImg\n        src={imagePaths[mainImageIndex]}\n        alt={hotel.hotelName}\n        style={{ width: \"100%\", height: \"auto\" }} \n      />\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n      {imagePaths.map((imagePath, index) => (\n          <img\n            key={index}\n            src={imagePath}\n            alt={`${hotel.hotelName}-${index}`}\n            onClick={() => changeMainImage(index)}\n            style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n          />\n        ))}\n      </div>\n\n      <HotelContiner>\n        <HotelHeader>\n          <h1>{hotel.hotelName}</h1>\n          <div>\n            <HeaderLeft>\n              <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n                {\n                  (hotel.average_score === null ? 0 : hotel.average_score)\n                }\n                            <button onClick={openModal}>\n                <CheckHotelAdminProfile userId={hotel.user_id} page={'hotelDetailPage'} />\n            </button>     \n              <span>{hotel.user_id}</span>\n              <HotelPrice>₩{hotel.price} /박</HotelPrice>\n              <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n            </HeaderLeft>\n            <HeaderRight>\n  {isLoggedIn && loggedInUser && (\n    <>\n    <CancelButton onClick={deleteMyHotel}> 삭제하기 </CancelButton>\n    {errorMessage && <p>{errorMessage}</p>}\n    </>\n  )}\n</HeaderRight>\n            <Modal\n  isOpen={isModalOpen}\n  onRequestClose={closeModal}\n  style={{\n    overlay: {\n      backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n      zIndex: 1000,\n    },\n    content: {\n      position: \"absolute\",\n      top: \"50%\",\n      left: \"50%\",\n      transform: \"translate(-50%, -50%)\",\n      width: \"100%\",\n      height:\"110%\",\n      maxWidth: \"600px\",\n      maxHeight: \"80%\",\n      overflow: \"auto\",\n      border: \"none\",\n      borderRadius: \"8px\",\n      outline: \"none\",\n      padding: \"20px\",\n    },\n  }}\n  contentLabel=\"Hotel Admin Profile Modal\"\n>\n  <button onClick={closeModal}>닫기</button>\n            <CheckHotelAdminProfile userId={hotel.user_id} />\n\n</Modal>\n\n          </div>\n        </HotelHeader>\n        <HotelSubInfo>\n          <span>최대인원 {hotel.maxGuests}명</span>\n          <span>{hotel.hotelSubInfo}</span>\n        </HotelSubInfo>\n        <HotelInfo>\n          <h2>호텔 소개</h2>\n          {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n          {hotel.hotelInfo.length > 300 && (\n          <button onClick={() => setIsShowMore(!isShowMore)}>\n            {isShowMore ? \"접기\" : \"...더보기>\"}\n          </button>\n        )}\n        </HotelInfo>\n\n        {error && <p>{error}</p>}\n        \n        <HotelCommentInfo>\n          <CommentContainer hotel_id={hotelId}/>\n        </HotelCommentInfo>\n        <Line />\n        <HotelPayment hotel={hotel}/>\n        <Map address={hotel.hotelAddress}/>\n\n      </HotelContiner>\n\n    </HotelLayout>\n  );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelListPage.jsx",["416","417","418"],[],"// import axios from \"axios\";\n// import { useEffect, useState } from \"react\";\n// import { useParams } from \"react-router-dom\";\n// import { HotelListContainer, HotelListWrapper, HotelSortButton, HotelSortContainer, Line } from \"../components/pagestyles/HotelListStyle\";\n// import MainHeader from \"../components/shared/header/MainHeader\";\n// import HotelCard from '../components/hotel/HotelCard';\n// import SearchBar from \"../components/hotel/search/SearchBar\";\n// import HotelComparison from \"../components/hotel/comparison/HotelComparison\";\n// import MainCategory from \"../components/main/MainCategory\";\n\n// export default function HotelListPage() {\n//   const { accommodationType } = useParams();\n//   const [hotels, setHotels] = useState([]);\n//   const [error, setError] = useState(null);\n//   const [searchTerm, setSearchTerm] = useState('');\n//   const [selectedHotelIds, setSelectedHotelIds] = useState([]);\n\n//   const fetchHotels = async (type) => {\n    \n//     try {\n//       const response = await axios.get(`/api/hotelList?hotelType=${type}&searchTerm=${searchTerm}`);\n//       setHotels(response.data);\n//     } catch (error) {\n//       console.error(`Error fetching hotels: ${error}`);\n//       setError(\"호텔목록 불러오는데 실패\");\n//     }\n//   };\n\n//   const handleHotelSelect = (hotelId, isSelected) => {\n//     setSelectedHotelIds((prevSelectedHotelIds) =>\n//       isSelected\n//         ? [...prevSelectedHotelIds, hotelId]\n//         : prevSelectedHotelIds.filter((id) => id !== hotelId)\n//     );\n//   };\n\n//   useEffect(() => {\n//     fetchHotels(accommodationType);\n//   }, [accommodationType, searchTerm]);\n\n//   useEffect(() => {\n//     fetchHotels(\"all\");\n//   }, [searchTerm]);\n\n  \n//   const sortHotels =(property)=> {\n//     let copy = [...hotels]\n//     copy.sort((a,b)=> {\n//       if(a[property] > b[property]) return -1\n//       if(a[property] < b[property]) return 1\n//       setHotels(copy)\n//     })\n//   }\n\n//   return (\n//     <HotelListContainer>\n//       <MainHeader bgColor=\"#f9f9f9\"/>\n//       <SearchBar onSearch={setSearchTerm} />\n//       <MainCategory bgColor=\"#f9f9f9\" />\n\n//       <Line />\n\n//       <HotelSortContainer>\n//         <HotelSortButton onClick={() => sortHotels('comments')}>댓글순</HotelSortButton>\n//         <HotelSortButton onClick={() => sortHotels('average_score')}>별점순</HotelSortButton>\n//         <HotelSortButton onClick={() => sortHotels('price')}>가격순</HotelSortButton>\n//       </HotelSortContainer>\n\n//       <HotelListWrapper>\n//       {hotels.map((hotel) => (\n//         <HotelCard\n//           key={hotel.hotel_id}\n//           hotel={hotel}\n//           showEditButton={true}\n//           onHotelSelect={handleHotelSelect}\n//           // average_score={true}\n//         />\n//       ))}\n//       {error && <p>{error}</p>}\n//       </HotelListWrapper>\n      \n//         <HotelComparison selectedHotelIds={selectedHotelIds} />\n//     </HotelListContainer>\n//   );\n// }\n\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { HotelListContainer, HotelListWrapper, HotelSortButton, HotelSortContainer, Line } from \"../components/pagestyles/HotelListStyle\";\nimport MainHeader from \"../components/shared/header/MainHeader\";\nimport HotelCard from '../components/hotel/HotelCard';\nimport SearchBar from \"../components/hotel/search/SearchBar\";\nimport HotelComparison from \"../components/hotel/comparison/HotelComparison\";\nimport MainCategory from \"../components/main/MainCategory\";\nimport { IoMdCopy } from 'react-icons/io';\n\nexport default function HotelListPage() {\n  const { accommodationType } = useParams();\n  const [hotels, setHotels] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedHotelIds, setSelectedHotelIds] = useState([]);\n\n  const fetchHotels = async (type) => {\n    \n    try {\n      const response = await axios.get(`/api/hotelList?hotelType=${type}&searchTerm=${searchTerm}`);\n      setHotels(response.data);\n    } catch (error) {\n      console.error(`Error fetching hotels: ${error}`);\n      setError(\"호텔목록 불러오는데 실패\");\n    }\n  };\n\n  const handleHotelSelect = (hotelId, isSelected) => {\n    setSelectedHotelIds((prevSelectedHotelIds) =>\n      isSelected\n        ? [...prevSelectedHotelIds, hotelId]\n        : prevSelectedHotelIds.filter((id) => id !== hotelId)\n    );\n  };\n\n  useEffect(() => {\n    fetchHotels(accommodationType);\n  }, [accommodationType, searchTerm]);\n\n  useEffect(() => {\n    fetchHotels(\"all\");\n  }, [searchTerm]);\n\n  \n  const sortHotels =(property)=> {\n    let copy = [...hotels]\n    console.log('ll', IoMdCopy)\n    copy.sort((a,b)=> {\n      if(a[property] > b[property]) return -1\n      if(a[property] < b[property]) return 1\n    })\n    setHotels(copy)\n  }\n\n  return (\n    <HotelListContainer>\n      <MainHeader bgColor=\"#f9f9f9\"/>\n      <SearchBar onSearch={setSearchTerm} />\n      <MainCategory bgColor=\"#f9f9f9\" />\n\n      <Line />\n\n      <HotelSortContainer>\n        <HotelSortButton onClick={() => sortHotels('comments')}>댓글순</HotelSortButton>\n        <HotelSortButton onClick={() => sortHotels('average_score')}>별점순</HotelSortButton>\n        <HotelSortButton onClick={() => sortHotels('price')}>가격순</HotelSortButton>\n      </HotelSortContainer>\n\n      <HotelListWrapper>\n      {hotels.map((hotel) => (\n        <HotelCard\n          key={hotel.hotel_id}\n          hotel={hotel}\n          showEditButton={true}\n          onHotelSelect={handleHotelSelect}\n          // average_score={true}\n        />\n      ))}\n      {error && <p>{error}</p>}\n      </HotelListWrapper>\n      \n        <HotelComparison selectedHotelIds={selectedHotelIds} />\n    </HotelListContainer>\n  );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/UploadHotelPage.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/CheckHotelAdminProfile.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/EditHotel.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/hotelActions.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/IntroductionPage.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/ChangePasswordForm.jsx",["419"],[],"import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { ChangePWBtn, ConfirmPWBtn, DivisionLine, ErrorMsg, FormStyle, InputStyle, LabelStyle, ModalDiv, PStyled, StyledModal } from '../components/pagestyles/ChangePasswordFormStyle';\n\nModal.setAppElement(\"#root\");\n\nexport default function ChangePasswordForm () {\n\n  const [oldPassword, setOldPassord] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [inputError, setInputError] = useState({});\n\n  useEffect(() => {\n    let error = {};\n    if(!oldPassword) error.oldPassword = \"현재 패스워드를 입력해주세요\"\n    if(!newPassword) error.newPassword = '변경할 패스워드를 입력해주세요!';\n    if(!confirmNewPassword) error.confirmNewPassword = '패스워드 확인을 위해 다시 입력해주세요!';\n    setInputError(error);\n  },[oldPassword,newPassword,confirmNewPassword ]);\n\n  const handleSubmit = async(e)=>{\n    e.preventDefault();\n\n    if(newPassword !== confirmNewPassword){\n      alert('새로운 비밀번호 일치하지 않습니다.');\n      return;\n    }\n    try{\n      const token = sessionStorage.getItem('accessToken');\n\n      const response = await axios.post(\"http://localhost:4000/api/change-password\", {\n        oldPassword,\n        newPassword\n      },\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      if(response.status===200){\n        alert(response.data.message);\n      }\n    }catch(error){\n      if(error.response.status ===401){\n        alert(error.response.data.message);\n      }else{\n        alert('서버오류입니다!!!!!')\n      }\n    }\n    setModalIsOpen(false);\n  }\n\nreturn (\n  <div>\n    <ChangePWBtn onClick={() => setModalIsOpen(true)}>비밀번호 변경</ChangePWBtn> {/* 이 버튼을 클릭하면 모달 팝업이 열립니다. */}\n    <StyledModal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)} > {/* 모달 팝업의 열림 상태와 닫기 요청을 처리합니다. */}\n      <FormStyle onSubmit={handleSubmit}>\n        <PStyled>패스워드 변경</PStyled>\n        \n        <LabelStyle htmlFor=\"oldPassword\">현재 패스워드</LabelStyle><br />\n        <InputStyle type=\"password\" id='oldPassword' value={oldPassword}  placeholder='현재 패스워드' onChange={(e) =>setOldPassord(e.target.value)} />\n        {inputError.oldPassword && <ErrorMsg>{inputError.oldPassword}</ErrorMsg>}\n        \n        <DivisionLine></DivisionLine>\n\n        <LabelStyle htmlFor=\"newPassword\">변경 패스워드</LabelStyle><br />\n        <InputStyle type=\"password\" id='newPassword' value={newPassword} placeholder='변경 패스워드' onChange={(e)=> setNewPassword(e.target.value)} />\n        {inputError.newPassword && <ErrorMsg>{inputError.newPassword}</ErrorMsg>}\n\n        <LabelStyle htmlFor=\"confirmNewPassword\">패스워드 확인</LabelStyle><br />\n        <InputStyle type=\"password\" id=\"confirmNewPassword\" value={confirmNewPassword} placeholder='패스워드 확인' onChange={(e) => setConfirmNewPassword(e.target.value)} />\n        {inputError.confirmNewPassword && <ErrorMsg>{inputError.confirmNewPassword}</ErrorMsg>}\n\n        <ConfirmPWBtn type=\"submit\">비밀번호 변경</ConfirmPWBtn>\n      </FormStyle>\n    </StyledModal>\n  </div>\n);\n};","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/HotelReservation.jsx",["420"],[],"// import React, {useState, useEffect} from 'react';\n// import axios from \"axios\";\n// import { ReservationLayout, ReservationTable, TableData, TableHead } from '../pagestyles/HotelReservationStyle';\n// import { HotelDesc } from '../pagestyles/MyPageStyle';\n\n\n// export default function HotelReservation() {\n//     const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n//     const userId = loggedInUser.id;\n//     const userRole = loggedInUser.userRole;\n//     const token = sessionStorage.getItem(\"accessToken\")  \n\n//     const [reservationData, setReservationData] = useState([]);\n\n//     useEffect(() => {\n//         async function fetchReservation() {\n//             try{\n//                 let res;\n//                 if (userRole === 'hotel_admin') {\n//                     res = await axios.get(`/api/adminPayment/${userId}`, {\n//                         headers: { Authorization: `Bearer ${token}` },\n//                     });\n//                 } else {\n//                     res = await axios.get(`/api/userPayment/${userId}`, {\n//                         headers: { Authorization: `Bearer ${token}` },\n//                     });\n//                 }\n//                 console.log('fetchReservation', res);\n//                 setReservationData(res.data.result)\n//             } catch(error){\n//                 console.log(error);\n//             }\n//         }\n//         fetchReservation();\n//     }, [userId])\n\n//     const handleConfirm = async(payment_id) => {\n//         try {\n//             await axios.patch(`/api/hotelPayments/${payment_id}`,\n//             {\n//                 status:'예약 확정',\n//             }, {\n//                 headers:{Authorization:`Barer ${token}`},\n//             })\n//             const updatedReservation = reservationData.find(data => data.payment_id === payment_id);\n\n//             await axios.post(\"/api/notification\", \n//             {\n//                title: \"예약 확정 되었습니다\",\n//                body: `호텔:${updatedReservation.hotel_name},체크인: ${updatedReservation.check_in}`,\n//                       user_id: updatedReservation.payment_user_id\n//             },{\n//                headers:{Authorization:`Bearer ${token}`}\n//             });\n        \n//             setReservationData(prev => \n//                 prev.map(data =>\n//                     data.payment_id === payment_id ? {...data, status:'예약 확정'} : data)\n//                 )\n//         } catch (error) {\n//             console.log(error);\n//         }\n//     };\n\n//     function formatDate(dateString) {\n//         const options = {year: 'numeric', month: '2-digit', day: '2-digit',};\n//         return new Date(dateString).toLocaleString('ko-KR', options);\n//     }\n\n//     return (\n//       <ReservationLayout>\n//         {reservationData && reservationData.length > 0 ? (\n//           <ReservationTable>\n//             <thead>\n//               <tr>\n//                 <TableHead>호텔 이름</TableHead>\n//                 <TableHead>예약인</TableHead>\n//                 <TableHead>결제금액</TableHead>\n//                 <TableHead>날짜</TableHead>\n//                 <TableHead>예약 상태</TableHead>\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {reservationData.map((data) => (\n//                 <tr key={data.payment_id}>\n//                   <TableData>{data.hotel_name}</TableData>\n//                   <TableData>{data.payment_user_id}</TableData>\n//                   <TableData>{data.price}원</TableData>\n//                   <TableData>\n//                     {formatDate(data.check_in)} ~ {formatDate(data.check_out)}\n//                   </TableData>\n//                   <TableData>{data.status}</TableData>\n//                   {userRole === 'hotel_admin' && data.status !== \"예약 확정\" &&\n//                     <button onClick={() => handleConfirm(data.payment_id)}>예약 수락하기</button>}\n//                 </tr>\n//               ))}\n//             </tbody>\n//           </ReservationTable>\n//         ) : (\n//           <HotelDesc>예약이 없습니다.</HotelDesc>\n//         )}\n//       </ReservationLayout>\n//     );\n// }\n\nimport React, {useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    fetchAdminPayment,\n    fetchUserPayment,\n    hotelPayments,\n} from '../../redux/slice/paymentSlice'; \nimport {ReservationLayout,\n  ReservationTable,\n  TableHead,\n  TableData,\n  HotelDesc,\n  } from './HotelReservationStyle';\n\nexport default function HotelReservation() {\n    const dispatch = useDispatch();\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    const userId = loggedInUser.id;\n    const userRole = loggedInUser.userRole;\n    const token = sessionStorage.getItem(\"accessToken\")  \n\n    // const [reservationData, setReservationData] = useState([]);\n    const reservationData = useSelector(state => userRole === 'hotel_admin' ? state.payment.adminPayment : state.payment.userPayment);\n\n\n    useEffect(() => {\n        if (userRole === 'hotel_admin') {\n            dispatch(fetchAdminPayment(userId));\n        } else {\n            dispatch(fetchUserPayment(userId));\n        }\n    }, [dispatch, userId, userRole]);\n\n\n    const handleConfirm = async(payment_id) => {\n        try {\n            dispatch(hotelPayments(payment_id));\n\n            const updatedReservation = reservationData.find(data => data.payment_id === payment_id);\n\n            await axios.post(\"/api/notification\", \n            {\n               title: \"예약 확정 되었습니다\",\n               body: `호텔:${updatedReservation.hotel_name},체크인: ${updatedReservation.check_in}`,\n                      user_id: updatedReservation.payment_user_id\n            },{\n               headers:{Authorization:`Bearer ${token}`}\n            });\n        \n            // setReservationData(prev => \n            //     prev.map(data =>\n            //         data.payment_id === payment_id ? {...data, status:'예약 확정'} : data)\n            //     )\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    function formatDate(dateString) {\n      const options = {year: 'numeric', month: '2-digit', day: '2-digit',};\n      return new Date(dateString).toLocaleString('ko-KR', options);\n  }\n\n    return (\n      <ReservationLayout>\n        {reservationData && reservationData.length > 0 ? (\n          <ReservationTable>\n            <thead>\n              <tr>\n                <TableHead>호텔 이름</TableHead>\n                <TableHead>예약인</TableHead>\n                <TableHead>결제금액</TableHead>\n                <TableHead>날짜</TableHead>\n                <TableHead>예약 상태</TableHead>\n              </tr>\n            </thead>\n            <tbody>\n              {reservationData.map((data) => (\n                <tr key={data.payment_id}>\n                  <TableData>{data.hotel_name}</TableData>\n                  <TableData>{data.payment_user_id}</TableData>\n                  <TableData>{data.price}원</TableData>\n                  <TableData>\n                    {formatDate(data.check_in)} ~ {formatDate(data.check_out)}\n                  </TableData>\n                  <TableData>{data.status}</TableData>\n                  {userRole === 'hotel_admin' && data.status !== \"예약 확정\" &&\n                    <button onClick={() => handleConfirm(data.payment_id)}>예약 수락하기</button>}\n                </tr>\n              ))}\n            </tbody>\n          </ReservationTable>\n        ) : (\n          <HotelDesc>예약이 없습니다.</HotelDesc>\n        )}\n      </ReservationLayout>\n    );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/HotelPayment.jsx",["421"],[],"import React, { useState } from \"react\";\nimport PaymentButton from \"../shared/payment/Payment\";\nimport axios from \"axios\";\nimport DatePicker from \"./datepicker/DayPicker\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postPayment } from '../../redux/slice/paymentSlice'; \nimport {AiOutlineMinusSquare , AiOutlinePlusSquare, AiOutlineCalendar} from 'react-icons/ai'\nimport {PaymentLabel,\n        PaymentContainer,\n        PaymentInfo\n        } from '../pagestyles/HotelPaymentStyle'\n\nexport default function HotelPayment({ hotel }) {\n  const Token = sessionStorage.getItem(\"accessToken\");\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n  const dispatch = useDispatch();\n  const paymentStatus = useSelector(state => state.payment.status);\n\n  const MaxGuests = hotel.maxGuests;\n  const [paymentType, setPaymentType] = useState(\"카드\");\n  const [guests, setGuests] = useState(1);\n  const [dateInput, setDateInput] = useState({\n    startDate: new Date(),\n    endDate: new Date(),\n  });\n  const [dateText, setDateText] = useState(\"\"); \n\n  // console.log('HotelPayment',hotel);\n  console.log(dateInput.startDate ,dateInput.endDate );\n\n  //guests\n  const handleMinus = ()=> {\n    if (guests < 2) return;\n    setGuests(guests-1);\n  }\n\n  const handlePlus = ()=> {\n    if (guests >= MaxGuests) return;\n    setGuests(guests+1);\n  }\n\n  //date\n  const adjustDate = (dates) => {\n    const [start, end] = dates;\n    setDateInput(prevDates => ({ ...prevDates, startDate: start, endDate: end }));\n  \n    if (start && end) {\n      setDateText(`${start.toLocaleDateString('ko-KR').split('/').join('. ')} - ${end.toLocaleDateString('ko-KR').split('/').join('. ')}`);\n    }\n  };    \n\nconst calculatePrice = () => {\n  if (!dateInput.endDate) {\n    return null;\n  }\n  \n  const timeDifference = Math.abs(dateInput.endDate - dateInput.startDate);\n  const daysDifference = Math.ceil(timeDifference / (1000 * 3600 * 24));\n  const totalPrice = hotel.price * daysDifference;\n  return totalPrice;\n};\n\nconst SubmitPayment = async(isConfirmed) => {  \n   if (!isConfirmed) {\n    // 체크인과 체크아웃 날짜가 같은지 확인\n    if (dateInput.startDate.getTime() === dateInput.endDate.getTime()){\n      alert(\"체크인과 체크아웃 날짜를 확인해 주세요.\");\n      return false;\n    }\n    return true;\n  }\n\n  const totalPrice = calculatePrice();\n  \n  // checkin , checkout 날짜 형식 변환\n  const formattedCheckIn = dateInput.startDate.toISOString();\n  const formattedCheckOut = dateInput.endDate.toISOString();\n\n    const paymentData = {\n      hotel_id: hotel.hotel_id,\n      user_id: loggedInUser.id,\n      price: totalPrice,\n      payment_type: paymentType,\n      check_in: formattedCheckIn,\n      check_out: formattedCheckOut,\n      guests: guests\n    };\n\n    try {\n      await dispatch(postPayment(paymentData));\n        console.log(paymentData)\n      await axios.post(\"/api/notification\", \n      {\n        title: \"결제가 되었습니다.\", body: `결제 정보: ${hotel.hotelName}, 금액: ${totalPrice}`, user_id: hotel.user_id\n      },{\n        headers:{Authorization:`Bearer ${Token}`}\n        });\n  \n    } catch (error) {\n      console.error(error);\n      }\n  };\n\n  console.log({dateText})\n  \n  \n  return (\n    <form onSubmit={(e)=>{e.preventDefault();}}>\n      <PaymentContainer>\n        <PaymentLabel htmlFor=\"checkin\">{hotel.hotelName}의 예약 날짜</PaymentLabel>\n        <PaymentInfo>\n          <div>\n            <AiOutlineCalendar/>\n            { dateText === ''\n              ? <p> 체크인 - 체크아웃</p>\n              : dateText\n            }\n          </div>\n          <div>\n            <span>인원(2세 ~)</span> \n            <AiOutlineMinusSquare  onClick={handleMinus}/>\n              <span>{guests}명</span>\n            <AiOutlinePlusSquare  onClick={handlePlus}/>\n          </div>\n        </PaymentInfo>\n        \n        <DatePicker \n          dateInput={dateInput}\n          adjustDate={adjustDate}\n        />\n\n      </PaymentContainer>\n\n\n      <label htmlFor=\"Payment_type\" style={{display: 'none'}}>결제방법</label>\n      <select\n        id=\"payment_type\"\n        value={paymentType}\n        onChange={(e) => setPaymentType(e.target.value)}\n        style={{display: 'none'}}\n      >\n        <option value=\"카드\">카드</option>\n      </select>\n      \n      <PaymentButton\n        hotelName={hotel.hotelName}\n        hotelPrice={calculatePrice()}\n        paymentCallback={SubmitPayment}\n      />\n    </form>\n  );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/HotelCard.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/HotelDetailStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/UploadHotelPageStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/services/notifications.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/main/MainCategory.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/main/MainNews.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/map/Map.jsx",["422"],[],"import React, { useEffect } from 'react';\nimport {MapLayout, MapContainer} from './MapStyle'\n\nexport default function Map({address}) {\n\n    useEffect(()=> {\n        const {kakao} = window;\n        console.log('address',address)\n\n        // const mapElement = useRef(null);\n        if (kakao && kakao.maps) {\n            kakao.maps.load(() => {\n                try {\n                    const container = document.getElementById('map'); \n                    const options = {\n                        center: new kakao.maps.LatLng(37.5704, 126.9923), \n                        level: 3\n                    };\n                \n                    const map = new kakao.maps.Map(container, options);\n                    const geocoder = new kakao.maps.services.Geocoder();\n                \n                    geocoder.addressSearch(address, function(result, status){\n                        if(status === kakao.maps.services.Status.OK) {\n                            let coords = new kakao.maps.LatLng(result[0].y, result[0].x);\n                            let marker = new kakao.maps.Marker({\n                                map: map,\n                                position: coords\n                            });\n                            map.setCenter(coords);\n                        }\n                    });\n                } catch (error) {\n                    console.error('Kakao Maps API Error:', error);\n                }\n        })\n    }else {\n        console.log('api 로드 실패')\n    }\n}, [address]);\n    return (\n        <MapLayout>\n            <h1>호스팅 위치</h1>\n            <p>{address}</p>   \n            <MapContainer id=\"map\"></MapContainer>\n        </MapLayout>\n    );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/chat/Chat.jsx",["423","424","425","426","427","428"],[],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport socketIOClient from \"socket.io-client\"; \nimport { ChatContainer,\n        ChatRoomContainer,\n        MessagesContainer,\n        MessagesBody,\n        ItemContainer,\n        MessageContent,\n        MessageInput,\n        MessageInputContainer, \n        MessageForm,\n        SendMessageButton,\n        SendIcon,\n        CloseIcon, } from '../pagestyles/ChatStyle';\n\nconst ENDPOINT = \"http://localhost:4000\"; \n\nexport default function Chat({ isChatOpen, handleChatClose }) {\n  const [message, setMessage] = useState('');\n  const [socket, setSocket] = useState(null);\n  const [response, setResponse] = useState({});\n  const userRole = useSelector((state) => state.auth.userRole);\n  const userId = useSelector((state) => state.auth.userId);\n  const [connectedUsers, setConnectedUsers] = useState([]);\n  const [activeChatRoomId, setActiveChatRoomId] = useState(null);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [chatRooms, setChatRooms] = useState({}); \n\n  const [chatOpen, setChatOpen] = useState(true);\n\n  useEffect(() => {\n    const socket = socketIOClient(ENDPOINT); \n    setSocket(socket);\n\n    socket.emit('register', { role: userRole, userId });\n    \n    socket.on('chat message', (message) => {\n      console.log('Received chat message:', message);\n      if (activeChatRoomId === null) {\n        setActiveChatRoomId(message.chatRoomId);\n      }\n\n      setChatRooms((prevChatRooms) => ({\n        ...prevChatRooms,\n        [message.chatRoomId]: [...(prevChatRooms[message.chatRoomId] || []), { userId: message.userId, role: userRole === 'user' ? 'user' : 'hotel_admin', message: message.message }],\n\n      }));\n    });\n\n    socket.on('connected users', (userIds) => {\n      console.log('Connected users:', userIds);\n      setConnectedUsers(userIds);\n    });\n\n    socket.on('all chat rooms', (allChatRooms) => {\n      setChatRooms(allChatRooms.reduce((rooms, roomId) => ({ ...rooms, [roomId]: [] }), {}));\n      console.log('Received all chat rooms:', allChatRooms);\n    });\n\n    socket.on('chat history', (history) => {\n      setChatRooms((prevChatRooms) => ({\n        ...prevChatRooms,\n        [activeChatRoomId]: history,\n      }));\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n\n  const startSiteAdminChat = (userId) => {\n    const chatRoomId = `${userId}_site_admin`;\n    setActiveChatRoomId(chatRoomId);\n    socket.emit('join chat room', {chatRoomId});  //add\n  };\n\n  const renderSiteAdminChatButtons = () => {\n    return (\n      <div>\n        {connectedUsers.map((user) => (\n          <button key={user} onClick={() => startSiteAdminChat(user)}>\n            Chat with {user}\n          </button>\n        ))}\n      </div>\n    );\n  };\n\n  const startChatWithUser = (userId) => {\n  \n    setSelectedUser(userId);\n    const chatRoomId = `${userId}_site_admin`;\n    setActiveChatRoomId(chatRoomId);\n\n    socket.emit('fetch messages', { chatRoomId });\n};\n\n\nconst sendMessage = () => {\n  if (!socket) return;\n\n  let chatRoomId;\n  let receiverUserId;\n\n  // If the sender is a site admin, set the receiver and chat room based on the selected user.\n  // Otherwise, set them as the site admin by default.\n  if (userRole === 'site_admin' && selectedUser) {\n    chatRoomId = `${selectedUser}_site_admin`;\n    receiverUserId = selectedUser;\n    setActiveChatRoomId(chatRoomId); // Update the active chat room ID\n  } else {\n    chatRoomId = `${userId}_site_admin`;\n    receiverUserId = 'site_admin';\n    setActiveChatRoomId(chatRoomId); // Update the active chat room ID\n  }\n\n  \n  socket.emit('chat message', {\n    userId,\n    role: userRole,\n    receiverUserId,\n    message,\n    chatRoomId: activeChatRoomId,\n  });\n\n  setMessage('');\n\n};\n\nconst isAdmin = userRole === \"site_admin\";\n\nreturn (\n  <ChatContainer isSiteAdmin={isAdmin} isChatOpen={isChatOpen}>\n      {isChatOpen && ( \n        <>\n\n    <ChatRoomContainer isSiteAdmin={isAdmin}>\n      {isAdmin && (\n        <>\n          Select a chat room:\n          {Object.keys(chatRooms).map((chatRoomId) =>\n            activeChatRoomId !== chatRoomId ? (\n              <>\n                {\" \"}\n                |{\" \"}\n                <span style={{ cursor: \"pointer\"}} onClick={() => {\n                  const userId = chatRoomId.split('_')[0]; // Extract the user ID from the chat room ID\n                  setSelectedUser(userId)\n                  startChatWithUser(userId);\n                }}>{chatRoomId}\n                </span>{\" \"}\n                |\n              </>\n            ) : null\n          )}\n        </>\n      )}\n      <button onClick={handleChatClose}>\n        <CloseIcon/>\n      </button>\n    </ChatRoomContainer>\n\n    {/* Messages */}\n    <MessagesContainer>\n      <MessagesBody>\n        {chatRooms[activeChatRoomId]?.map((msg, index) => (\n\n        <ItemContainer \n          key={index}\n          CurrentUser={msg.userId === userId}\n        >\n          <div>\n            {msg.userId === userId ? ( \n              <MessageContent\n                CurrentUser={msg.userId === userId}\n              >\n                  {msg.message}\n              </MessageContent> \n            ) : (\n              <>\n              <span>{msg.userId}</span>\n              <MessageContent\n                CurrentUser={msg.userId === userId}\n              >   \n              {msg.message}\n              </MessageContent> \n              </>\n            )}\n          </div>\n        </ItemContainer>\n      ))}\n    </MessagesBody>\n\n\n    <MessageInputContainer>\n      <MessageForm>  \n        <MessageInput\n          type=\"text\"\n          value={message}\n          placeholder='메세지를 입력해주세요'\n          onKeyDown={e=> (e.key === 'Enter' ? sendMessage(e.target.value) : null)}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n\n        {message.length > 0 && (\n          <SendMessageButton  onClick={sendMessage}>\n              <SendIcon/>\n          </SendMessageButton>  \n        )}     \n\n      </MessageForm>  \n    </MessageInputContainer>\n        \n    </MessagesContainer>\n    </>\n          )}\n  </ChatContainer>\n  );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentCard.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentContainer.jsx",["429","430"],[],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchComments } from '../../../redux/slice/commentSlice';\nimport CommentCard from './CommentCard';\nimport CommentForm from './CommentForm';\nimport {\n    CommentLayout,\n    CommentHeader,\n    CommentTitle,\n    FormAndLinkContainer,\n    LinkButton,\n}from './CommentStyle';\nimport Star from '../../shared/star/Star';\nimport {fetchUserPayment} from '../../../redux/slice/paymentSlice';\n\n\nexport default function CommentContainer({hotel_id}) {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector((state) => state.auth?.isLoggedIn);\n    const [loggedInUser, setLoggedInUser] = useState(null); // loggedInUser 상태 추가\n    const allComments = useSelector((state) => state.comment.comments || {});\n    const comments = allComments[hotel_id] || [];\n    const userPayment = useSelector((state) => state.payment.userPayment || []);\n    \n    let paymentHotel, checkOutTime, userId;\n\n    if (paymentHotel) {\n        checkOutTime = new Date(paymentHotel.check_out);\n    }\n    if (loggedInUser) { // loggedInUser가 존재할 때만 userId와 paymentHotel, checkOutTime을 설정..\n        userId = loggedInUser.id;\n        paymentHotel = userPayment.find(pay => {\n            return pay.hotel_id === Number(hotel_id);\n        });\n        if (paymentHotel) {\n            checkOutTime = new Date(paymentHotel.check_out);\n        }\n    }\n    const currentTime = new Date();\n\n    useEffect(() =>{\n        dispatch(fetchComments(hotel_id));\n        if (userId) { // userId가 존재할 때만 fetchUserPayment를 호출...\n            dispatch(fetchUserPayment(userId));\n        }\n    },[hotel_id]);\n\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            const storedUser = localStorage.getItem('loggedInUser');\n            setLoggedInUser(JSON.parse(storedUser));\n        } else {\n            setLoggedInUser(null);\n        }\n    }, [isLoggedIn]);\n    const handleNewComment = () => {\n        dispatch(fetchComments(hotel_id));\n    };\n    \n    return (\n        <CommentLayout>\n            {comments.length === 0 ?\n                <>\n                <h1>후기가 아직 없습니다</h1>\n                {paymentHotel && checkOutTime < currentTime ? <CommentForm hotel_id={hotel_id} onSubmitSuccess={handleNewComment} /> : null}\n                </>\n                \n            :\n            <>\n                <CommentHeader>\n                    <CommentTitle>후기 {comments.length}개</CommentTitle>\n                    {comments.length > 5 &&\n                        <LinkButton to={{pathname: `/comments/${hotel_id}`,state: { hotel_id }}}>후기 전체보기</LinkButton>\n                    }\n                </CommentHeader>\n                <ul>\n                    {comments.slice(0, 5).map((comment) => (\n                        <CommentCard key={comment.id} comment={comment}/>\n                    ))\n                    }\n                </ul>\n            </>\n            }\n            <FormAndLinkContainer>\n                {paymentHotel && checkOutTime < currentTime ? <CommentForm hotel_id={hotel_id} onSubmitSuccess={handleNewComment} /> : null}\n            </FormAndLinkContainer>\n\n        </CommentLayout>\n        \n    );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/search/Searchbar.jsx",["431","432","433","434","435"],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comparison/HotelComparison.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/footer/Footer.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/Header.jsx",["436","437"],[],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as authActions from '../../../redux/authAction';\nimport {\n  HeaderLayout,\n  LeftContainer,\n  LinkTitle,\n  RightContainer,\n  CenteredLink,\n  Logo,\n  HeaderMain,\n  AccommdationStyle,\n} from \"./HeaderStyle\";\nimport { resetLikes } from \"../../../redux/slice/likeSlice\";\nimport Withdrawal from '../../hotel/users/WithdrawalPart';\n\nexport default function Header() {\n  const isLoggedIn = useSelector((state) => state.auth?.isLoggedIn);\n  const userRole = useSelector((state) => state.auth?.userRole);\n  const [loggedInUser, setLoggedInUser] = useState(null); // loggedInUser 상태 추가\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const storedUser = localStorage.getItem('loggedInUser');\n      setLoggedInUser(JSON.parse(storedUser));\n      \n    } else {\n      setLoggedInUser(null);\n    }\n  }, [isLoggedIn]);\n\n\n\n  const handleLogout = () => {\n    dispatch(authActions.logout());\n    dispatch(resetLikes()); \n  };\n\n\n  return (\n    <HeaderLayout>\n      <LinkTitle to=\"/\">\n        <HeaderMain>누구업소</HeaderMain>\n        <AccommdationStyle>ACCOMMODATION</AccommdationStyle>\n      </LinkTitle>\n\n      <RightContainer>\n      {isLoggedIn && loggedInUser && ( \n        \n          <CenteredLink>\n            {loggedInUser.id} \n          </CenteredLink>\n        )}\n        {!isLoggedIn && (\n          <>\n            <CenteredLink to=\"/login\">로그인</CenteredLink>\n            <CenteredLink to=\"/join\">회원가입</CenteredLink>\n          </>\n        )}\n        {isLoggedIn && (\n          <>\n              <Withdrawal />\n              <CenteredLink onClick={handleLogout} style={{cursor: 'pointer'}}>로그아웃</CenteredLink>\n              <CenteredLink to=\"/mypage\">마이페이지</CenteredLink>\n            {userRole === \"hotel_admin\" && (\n              <CenteredLink to=\"/uploadHotel\">호텔등록</CenteredLink>\n            )}\n          </>\n        )}\n      </RightContainer>\n    </HeaderLayout>\n  );\n}",[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/like/Like.jsx",["438"],[],"import React from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateLike } from \"../../../redux/slice/likeSlice\";\nimport {LikeWrapper, HeartFill, HeartOutline} from './LikeStyle';\n\nexport default function Like({ hotel_id, hotel_owner_id }) {\n  const dispatch = useDispatch();\n\n  // true\n  const liked = useSelector((state) => {\n    return state.like.likes[hotel_id] })\n\n  const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n\n  const isHotelOwner = loggedInUser && loggedInUser.id === hotel_owner_id;\n\n  const handleButtonClick = async (e) => {\n    e.preventDefault();\n\n    if (loggedInUser) {\n      try {\n        //undefined => true => false\n        const newValue = !liked;\n          dispatch(\n            updateLike({\n              hotel_id,\n              user_id: loggedInUser.id,\n              addLike: newValue,\n            })\n          );\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    } else {\n      alert(\"로그인 후 이용가능합니다\");\n    }\n  };\n  \n\n  return (\n    <LikeWrapper>\n      {!isHotelOwner && (\n        <button onClick={handleButtonClick}>\n          {liked ? <HeartFill /> : <HeartOutline />}\n        </button>\n      )}\n    </LikeWrapper>\n  );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/banner/Banner.jsx",["439","440"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport {SliderWrap,Slider,SliderItem,SliderImage,PrevButton,NextButton,Indicator,Dot} from './BannerStyle';\n\nconst Banner = () => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const awsImages = [\n    process.env.REACT_APP_BANNER_PHOTO_STAIRS,\n    process.env.REACT_APP_BANNER_PHOTO_HOTELROOM2,\n    process.env.REACT_APP_BANNER_PHOTO_HOTELROOM,\n    process.env.REACT_APP_BANNER_PHOTO_POOL,\n    process.env.REACT_APP_BANNER_PHOTO_ROUNGE,\n    process.env.REACT_APP_BANNER_PHOTO_BANNERPHOTO,\n    process.env.REACT_APP_BANNER_PHOTO_ROUNGE2\n  ];\n\n  const moveToRight = () => {\n    setCurrentIndex((prev) => (prev + 1) % awsImages.length);\n  };\n  const moveToLeft = () => {\n    setCurrentIndex((prev) => (prev - 1 < 0 ? awsImages.length - 1 : prev - 1));\n  };\n\n  useEffect(() => {\n    const interval = setInterval(moveToRight, 3000);\n    return () => clearInterval(interval);\n  }, []);\n\n  return (\n    <>\n    <SliderWrap>\n      <Slider style={{ transform: `translateX(-${currentIndex * 100}%)` }}>\n        {awsImages.map((awsImages, index) => (\n          <SliderItem key={index}>\n            <SliderImage src={awsImages} alt={`slide-${index}`} />\n          </SliderItem>\n        ))}\n      </Slider>\n  \n      <PrevButton onClick={moveToLeft}>{\"<\"}</PrevButton>\n      <NextButton onClick={moveToRight}>{\">\"}</NextButton>\n  \n      <Indicator>\n        {awsImages.map((_, index) => (\n          <Dot key={index} $active={currentIndex === index} />\n        ))}\n      </Indicator>\n    </SliderWrap>\n    \n    </>\n  );\n\n};\n\nexport default Banner;\n","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/HotelPaymentStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/banner/BannerStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/ChatStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/payment/Payment.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/main/MainCategoryStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/main/MainNewsStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/authAction.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/map/MapStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/datepicker/DayPicker.jsx",["441"],[],"// import React , { useState } from 'react';\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import { enGB } from 'date-fns/esm/locale';\n\n// export default function DayPicker({ dateInput, adjustDate }) {\n\n//   const DATE_FORMAT = 'dd/MM/yyyy';\n//   const DATE_FORMAT_CALENDAR =  'MMM yyyy';\n\n//   const [DatesText, setDatesText] = useState(\"\");\n\n//     return (\n//       <>\n//         <p>{DatesText}</p>\n\n//         <DatePicker\n//           inline\n//           startDate={dateInput.startDate}\n//           endDate={dateInput.endDate}\n//           minDate={new Date()}\n//           dateFormat={DATE_FORMAT}\n//           dateFormatCalendar={DATE_FORMAT_CALENDAR}\n//           onChange={(dates) => {\n//             adjustDate(dates);\n\n//             // 선택된 날짜 범위가 있으면 보여주기\n//             if (dates[0] && dates[1]) {\n//               setDatesText(`${dates[0].toLocaleDateString()} - ${dates[1].toLocaleDateString()}`);\n//             }\n//           }}\n//           selectsRange \n//           locale={enGB} \n//           monthsShown={2}\n//         />\n//       </>\n//   );}\n\n\n\nimport React , { useState } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { enGB } from 'date-fns/esm/locale';\n\nexport default function DayPicker({ dateInput, adjustDate }) {\n\n  const DATE_FORMAT = 'dd/MM/yyyy';\n  const DATE_FORMAT_CALENDAR =  'MMM yyyy';\n\n  const [DatesText, setDatesText] = useState(\"\");\n\n    return (\n      <>\n        {/* <p style={{marginTop: \"10px\"}}>{DatesText}</p> */}\n\n        <DatePicker\n          inline\n          startDate={dateInput.startDate}\n          endDate={dateInput.endDate}\n          minDate={new Date()}\n          dateFormat={DATE_FORMAT}\n          dateFormatCalendar={DATE_FORMAT_CALENDAR}\n          onChange={(dates) => {\n            adjustDate(dates);\n\n            // 선택된 날짜 범위가 있으면 보여주기\n            if (dates[0] && dates[1]) {\n              setDatesText(`${dates[0].toLocaleDateString()} - ${dates[1].toLocaleDateString()}`);\n            }\n          }}\n          selectsRange \n          locale={enGB} \n          monthsShown={2}\n        />\n      </>\n  );}\n","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/search/SearchbarStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentForm.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/footer/FooterStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/like/LikeStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/HeaderStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/star/Star.jsx",["442","443"],[],"import React, { useState, useEffect } from 'react';\nimport { FaStar } from 'react-icons/fa';\nimport styled from 'styled-components';\n\nexport default function Star ({score=null, setScore=null, resetStar=null}) {\n    const starArray = [0, 1, 2, 3, 4];\n    const [clicked, setClicked] = useState([false, false, false, false, false]);\n\n    const handleStarClick  = index => {\n        let clickStates = [...clicked];\n        for (let i = 0; i < 5; i++) {\n            clickStates[i] = i <= index ? true : false\n        }\n        setClicked(clickStates);\n        console.log(clickStates);\n    }\n\n    useEffect(()=> {\n        if (setScore !== null) { // 별점 입력 모드일 때\n            let score = clicked.filter(Boolean).length;\n            setScore(score);\n            console.log(score);\n        }\n    },[clicked]);\n    \n    useEffect(() => {\n        if(resetStar && setScore !== null) { // 별점 입력 모드일 때\n            setClicked([false,false,false,false,false]); \n        }\n    },[resetStar]);\n\n\n    if (score !== null) { // 별점 표시\n        return (\n          <div>\n            {starArray.map((index)=> {\n              return (\n                <StarIcon \n                  key={index}\n                  filled={index < score}\n                />\n              );\n            })}\n          </div>   \n        );\n      } else { // 별점 입력\n        return (\n            <div>\n            {starArray.map((index)=> {\n                return (\n                    <StarIcon \n                        key={index}\n                        onClick={()=> handleStarClick(index)}\n                        filled={clicked[index]}\n                    />\n                )\n          })}\n            </div>\n        );\n      }\n}\n\n\nconst StarIcon = styled(FaStar) `\n    color: ${props => props.filled ? '#ffd700' : '#afb5b8'};\n    cursor: pointer;\n    font-size: 12px;\n`","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/search/SearchBarStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/layout/Layout.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/MyPageStyle.js",["444"],[],"import styled from \"styled-components\";\nimport Modal from 'react-modal';\nimport { FaRegHeart } from 'react-icons/fa';\nimport { FaRegCreditCard } from \"react-icons/fa\";\nimport { MdOutlineModeComment } from \"react-icons/md\";\nimport { HiOutlinePencilSquare } from \"react-icons/hi2\";\n\n\nexport const MypageLayout = styled.div`\n  padding: 5rem; \n  background-color: #f9f9f9;\n\n    h1{\n        margin-bottom: 2rem;\n    }\n`;\n\nexport const MypageInfo = styled.div`\n  border: 2px solid #e3e3e3;\n  border-radius: 1rem;\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nexport const InfoItemBox = styled.div`\n  padding: 0 20px;\n  display: flex;\n  flex-wrap: nowrap;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const InfoItem = styled.div`\n    margin: 0 10px;\n    padding: 30px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    /* margin: auto; */\n    flex-wrap: nowrap;\n    justify-content: center;\n\n    span {\n        white-space: nowrap;\n        align-items: center;\n        margin: 0 2rem 1rem 0;\n        font-size: 2rem;\n        font-weight: 500;\n        line-height: 2rem;\n      }\n\n      strong{\n        font-size: 23px;\n        font-wight: 700;\n      }\n`;\n\nexport const InfoBox = styled.div`\n  height: 40px;\n  background-color: #E5DCC5;\n`;\n\nexport const ActivitySelectBox = styled.div`\n  width: fit-content;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  margin: 20px 0;\n\n  h2 {\n    margin-bottom:2rem;\n    white-space: nowrap;\n    font-size: 20px;\n    font-weight: 700;\n  }\n\n  div{ \n    font-size: 20px;\n    font-weight: 500;\n    white-space: nowrap;\n  }\n`;\n\nexport const ActivitySelectItems = styled.div`\n  display: flex;\n  margin-right: 3rem;\n  border: 1px solid #eceef9;\n  border-radius: 40px;\n  background-color: #F7DBA7;\n`;\n\nexport const ActivitySelectItem = styled.div`\n  flex-grow: 1;\n\n  div{\n    flex-grow: 1;\n    text-align: center;\n    align-items: center;\n    display: flex;\n    padding: 9px 30px;\n    border-radius: 40px;\n  }\n\n  &:hover {\n    background-color: #F49D6E; \n    border-radius: 40px;\n    color: #fff;\n  }\n`;\n\nexport const HeartIcon = styled(FaRegHeart) `\n    margin-right: 5px;\n    background-color: #fff;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    padding: 4px;\n    font-size: 10px;\n    ${ActivitySelectItem}:hover & {\n        color: initial; \n    }\n    \n`\nexport const CreditCardIcon = styled(FaRegCreditCard) `\n    margin-right: 5px;\n    background-color: #fff;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    padding: 5px;\n    ${ActivitySelectItem}:hover & {\n        color: initial;\n    }\n`\nexport const CommentIcon = styled(MdOutlineModeComment) `\n    margin-right: 5px;\n    background-color: #fff;\n    width: 40px;\n    height:40px;\n    border-radius: 50%;\n    padding: 5px;\n    font-size: 5px;\n    ${ActivitySelectItem}:hover & {\n        color: initial;\n    }\n\n`\nexport const PencilIcon = styled(HiOutlinePencilSquare) `\n    margin-right: 5px;\n    background-color: #fff;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    padding: 5px;\n    font-size: 5px;\n    ${ActivitySelectItem}:hover & {\n        color: initial;\n    }\n\n`\nexport const ActivityContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 5rem 0;\n  background-color: #fff;\n\n  h2 {\n    padding: 1.5rem;\n    background-color: #E5DCC5;\n    color : #fff;\n  }\n\n`;\n\nexport const HotelCardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  overflow-x: auto;  \n`;\n\n\nexport const HotelDesc = styled.span`\n    padding: 30px 20px;\n    font-size: 15px;\n    font-weight: 700;\n`;\n\nexport const overlayStyle = {\n  backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  zIndex: 1000,\n};\n\nexport const contentStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"100%\",\n  height:\"110%\",\n  maxWidth: \"600px\",\n  maxHeight: \"80%\",\n  overflow: \"auto\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  outline: \"none\",\n  padding: \"20px\",\n};","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/HotelListStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/search/SearchBar.jsx",["445","446","447","448","449"],[],"import React, { useCallback, useState } from 'react';\nimport { GrSearch } from \"react-icons/gr\";\nimport _ from 'lodash';\nimport { SearchBarContainer, SearchIcon, SearchInput } from './SearchBarStyle';\n\nexport default function SearchBar({ onSearch }) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [inputValue, setInputValue] = useState('');\n  \n  const debouncedSave = useCallback(\n    _.debounce(nextValue => onSearch(nextValue), 1000),\n    [onSearch]\n  );\n  \n  return (\n    <SearchBarContainer>\n      <SearchInput  type=\"text\" placeholder='Search...' onChange={(event) => {\n        setInputValue(event.target.value);\n        debouncedSave(event.target.value);\n      }} />\n          <SearchIcon/>\n    </SearchBarContainer>  \n  )\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/LoginPageStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/MainPageStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/users/WithdrawalPart.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/ChangePasswordFormStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/MainHeader.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/slice/paymentSlice.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/HotelReservationStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/Sidebar.jsx",["450"],[],"import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useNavigate } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\nimport * as authActions from '../../../redux/authAction';\nimport {MenuIcon,\n        SubMenu,\n        MenuItem,\n      } from './SidebarStyle';\nimport { resetLikes } from \"../../../redux/slice/likeSlice\"; \n\nexport default function Sidebar() {\n  const [loggedInUser, setLoggedInUser] = useState(null);\n  const [activeMenus, setActiveMenus] = useState([]);\n  const isLoggedIn = useSelector((state) => state.auth?.isLoggedIn);\n  const userRole = useSelector((state) => state.auth?.userRole);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      const storedUser = localStorage.getItem('loggedInUser');\n      setLoggedInUser(JSON.parse(storedUser));\n      \n    } else {\n      setLoggedInUser(null);\n    }\n  }, [isLoggedIn]);\n\n\n  // 메뉴 활성화 상태를 토글하는 함수\n  const toggleMenu = (index) => {\n    if (activeMenus.includes(index)) {\n      setActiveMenus(activeMenus.filter((i) => i !== index));\n    } else {\n      setActiveMenus([...activeMenus, index]);\n    }\n  };\n\n  const handleLogout = () => {\n    dispatch(authActions.logout());\n    dispatch(resetLikes());\n    navigate(\"/\");\n  };\n\n\n  return (\n    <div>\n      <MenuItem>\n        {\n          [\n            {\n              name: 'My메뉴',\n              subMenuItems: [\n                ...(isLoggedIn ? [{ name: '로그아웃', func: handleLogout }, { name: '마이페이지', url: '/mypage' }] \n                              : [{ name: '로그인', url: '/login' }, { name: '회원가입', url: '/join' }]),\n                ...(isLoggedIn && userRole === 'hotel_admin' ? [{ name: '호텔 등록', url: '/uploadHotel' }] : []),\n              ],\n            },\n          ].map((menuItem, index) => (\n            <li key={index}>\n              <button\n                fold={activeMenus.includes(index)}\n                className={activeMenus.includes(index) ? 'active' : ''}\n                onClick={() => toggleMenu(index)}\n              >\n                <MenuIcon />\n              </button>\n              {activeMenus.includes(index) && (\n                <SubMenu> \n                  {menuItem.subMenuItems.map((subMenuItem, subIndex) => (\n                    <li key={`${index}-${subIndex}`}>\n                      {subMenuItem.url \n                        ? <Link to={subMenuItem.url}>{subMenuItem.name}</Link>\n                        : <button onClick={subMenuItem.func}>{subMenuItem.name}</button>\n                      }\n                    </li>\n                  ))}\n                </SubMenu>\n              )}\n            </li>\n          ))\n        }\n      </MenuItem>\n    </div>\n  );\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/shared/header/SidebarStyle.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/CommentPage.jsx",["451"],[],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from 'react-router-dom';\nimport { fetchComments } from '../redux/slice/commentSlice';\nimport CommentCard from '../components/hotel/comment/CommentCard';\n\nexport default function CommentPage() {\n  const { hotel_id } = useParams();\n  console.log(hotel_id)\n  \n  const allComments = useSelector((state) => state.comment.comments || {});\n  const comments = allComments[hotel_id] || [];\n  const dispatch = useDispatch();\n\n  useEffect(() =>{\n    dispatch(fetchComments(hotel_id));\n  },[hotel_id]);\n  \n    return (\n      <div>\n              <ul>\n                  {comments.map((comment) => (\n                      <CommentCard key={comment.id} comment={comment}/>\n                    ))\n                  }\n              </ul>\n      </div>\n);\n}","/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/CheckHotelAdminStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/pagestyles/IntroductionInputPageStyle.js",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/mypage/ActivitySelect.jsx",[],[],"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/mypage/MyPageInfo.jsx",[],[],{"ruleId":"452","severity":1,"message":"453","line":6,"column":10,"nodeType":"454","messageId":"455","endLine":6,"endColumn":26},{"ruleId":"452","severity":1,"message":"456","line":12,"column":8,"nodeType":"454","messageId":"455","endLine":12,"endColumn":12},{"ruleId":"452","severity":1,"message":"457","line":16,"column":7,"nodeType":"454","messageId":"455","endLine":16,"endColumn":13},{"ruleId":"452","severity":1,"message":"458","line":31,"column":13,"nodeType":"454","messageId":"455","endLine":31,"endColumn":21},{"ruleId":"452","severity":1,"message":"459","line":3,"column":8,"nodeType":"454","messageId":"455","endLine":3,"endColumn":14},{"ruleId":"452","severity":1,"message":"460","line":51,"column":9,"nodeType":"454","messageId":"455","endLine":51,"endColumn":11},{"ruleId":"461","severity":1,"message":"462","line":66,"column":5,"nodeType":"463","endLine":66,"endColumn":7,"suggestions":"464"},{"ruleId":"461","severity":1,"message":"465","line":126,"column":6,"nodeType":"463","endLine":126,"endColumn":37,"suggestions":"466"},{"ruleId":"461","severity":1,"message":"465","line":130,"column":6,"nodeType":"463","endLine":130,"endColumn":18,"suggestions":"467"},{"ruleId":"468","severity":1,"message":"469","line":136,"column":20,"nodeType":"470","messageId":"471","endLine":136,"endColumn":22},{"ruleId":"452","severity":1,"message":"472","line":4,"column":96,"nodeType":"454","messageId":"455","endLine":4,"endColumn":104},{"ruleId":"452","severity":1,"message":"473","line":106,"column":16,"nodeType":"454","messageId":"455","endLine":106,"endColumn":24},{"ruleId":"452","severity":1,"message":"474","line":17,"column":9,"nodeType":"454","messageId":"455","endLine":17,"endColumn":22},{"ruleId":"452","severity":1,"message":"475","line":26,"column":33,"nodeType":"454","messageId":"455","endLine":26,"endColumn":39},{"ruleId":"452","severity":1,"message":"458","line":22,"column":10,"nodeType":"454","messageId":"455","endLine":22,"endColumn":18},{"ruleId":"452","severity":1,"message":"476","line":22,"column":20,"nodeType":"454","messageId":"455","endLine":22,"endColumn":31},{"ruleId":"452","severity":1,"message":"477","line":30,"column":10,"nodeType":"454","messageId":"455","endLine":30,"endColumn":18},{"ruleId":"452","severity":1,"message":"478","line":30,"column":20,"nodeType":"454","messageId":"455","endLine":30,"endColumn":31},{"ruleId":"461","severity":1,"message":"479","line":71,"column":6,"nodeType":"463","endLine":71,"endColumn":8,"suggestions":"480"},{"ruleId":"452","severity":1,"message":"481","line":80,"column":9,"nodeType":"454","messageId":"455","endLine":80,"endColumn":35},{"ruleId":"452","severity":1,"message":"482","line":13,"column":8,"nodeType":"454","messageId":"455","endLine":13,"endColumn":12},{"ruleId":"461","severity":1,"message":"483","line":46,"column":7,"nodeType":"463","endLine":46,"endColumn":17,"suggestions":"484"},{"ruleId":"452","severity":1,"message":"485","line":24,"column":10,"nodeType":"454","messageId":"455","endLine":24,"endColumn":18},{"ruleId":"452","severity":1,"message":"486","line":29,"column":10,"nodeType":"454","messageId":"455","endLine":29,"endColumn":20},{"ruleId":"452","severity":1,"message":"487","line":29,"column":22,"nodeType":"454","messageId":"455","endLine":29,"endColumn":35},{"ruleId":"452","severity":1,"message":"488","line":30,"column":10,"nodeType":"454","messageId":"455","endLine":30,"endColumn":20},{"ruleId":"461","severity":1,"message":"489","line":32,"column":25,"nodeType":"454","endLine":32,"endColumn":36},{"ruleId":"452","severity":1,"message":"490","line":6,"column":3,"nodeType":"454","messageId":"455","endLine":6,"endColumn":16},{"ruleId":"452","severity":1,"message":"491","line":10,"column":3,"nodeType":"454","messageId":"455","endLine":10,"endColumn":7},{"ruleId":"452","severity":1,"message":"492","line":13,"column":9,"nodeType":"454","messageId":"455","endLine":13,"endColumn":19},{"ruleId":"452","severity":1,"message":"493","line":1,"column":28,"nodeType":"454","messageId":"455","endLine":1,"endColumn":34},{"ruleId":"461","severity":1,"message":"494","line":27,"column":6,"nodeType":"463","endLine":27,"endColumn":8,"suggestions":"495"},{"ruleId":"452","severity":1,"message":"496","line":51,"column":10,"nodeType":"454","messageId":"455","endLine":51,"endColumn":19},{"ruleId":"461","severity":1,"message":"497","line":24,"column":7,"nodeType":"463","endLine":24,"endColumn":16,"suggestions":"498"},{"ruleId":"461","severity":1,"message":"499","line":30,"column":7,"nodeType":"463","endLine":30,"endColumn":18,"suggestions":"500"},{"ruleId":"452","severity":1,"message":"501","line":2,"column":8,"nodeType":"454","messageId":"455","endLine":2,"endColumn":13},{"ruleId":"452","severity":1,"message":"485","line":2,"column":10,"nodeType":"454","messageId":"455","endLine":2,"endColumn":18},{"ruleId":"452","severity":1,"message":"486","line":7,"column":10,"nodeType":"454","messageId":"455","endLine":7,"endColumn":20},{"ruleId":"452","severity":1,"message":"487","line":7,"column":22,"nodeType":"454","messageId":"455","endLine":7,"endColumn":35},{"ruleId":"452","severity":1,"message":"488","line":8,"column":10,"nodeType":"454","messageId":"455","endLine":8,"endColumn":20},{"ruleId":"461","severity":1,"message":"489","line":10,"column":25,"nodeType":"454","endLine":10,"endColumn":36},{"ruleId":"452","severity":1,"message":"502","line":13,"column":10,"nodeType":"454","messageId":"455","endLine":13,"endColumn":22},{"ruleId":"461","severity":1,"message":"503","line":17,"column":5,"nodeType":"463","endLine":17,"endColumn":15,"suggestions":"504"},"no-unused-vars","'LanguageProvider' is defined but never used.","Identifier","unusedVar","'i18n' is defined but never used.","'socket' is assigned a value but never used.","'response' is assigned a value but never used.","'styled' is defined but never used.","'s3' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchHotelDetail'. Either include it or remove the dependency array.","ArrayExpression",["505"],"React Hook useEffect has a missing dependency: 'fetchHotels'. Either include it or remove the dependency array.",["506"],["507"],"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'ModalDiv' is defined but never used.","'useState' is defined but never used.","'paymentStatus' is assigned a value but never used.","'marker' is assigned a value but never used.","'setResponse' is assigned a value but never used.","'chatOpen' is assigned a value but never used.","'setChatOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activeChatRoomId', 'userId', and 'userRole'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setChatRooms' needs the current value of 'activeChatRoomId'.",["508"],"'renderSiteAdminChatButtons' is assigned a value but never used.","'Star' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userId'. Either include them or remove the dependency array.",["509"],"'GrSearch' is defined but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","'inputValue' is assigned a value but never used.","React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","'LeftContainer' is defined but never used.","'Logo' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'moveToRight'. Either include it or remove the dependency array.",["510"],"'DatesText' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setScore'. Either include it or remove the dependency array. If 'setScore' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["511"],"React Hook useEffect has a missing dependency: 'setScore'. Either include it or remove the dependency array.",["512"],"'Modal' is defined but never used.","'loggedInUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["513"],{"desc":"514","fix":"515"},{"desc":"516","fix":"517"},{"desc":"518","fix":"519"},{"desc":"520","fix":"521"},{"desc":"522","fix":"523"},{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},"Update the dependencies array to be: [fetchHotelDetail]",{"range":"532","text":"533"},"Update the dependencies array to be: [accommodationType, fetchHotels, searchTerm]",{"range":"534","text":"535"},"Update the dependencies array to be: [fetchHotels, searchTerm]",{"range":"536","text":"537"},"Update the dependencies array to be: [activeChatRoomId, userId, userRole]",{"range":"538","text":"539"},"Update the dependencies array to be: [dispatch, hotel_id, userId]",{"range":"540","text":"541"},"Update the dependencies array to be: [moveToRight]",{"range":"542","text":"543"},"Update the dependencies array to be: [clicked, setScore]",{"range":"544","text":"545"},"Update the dependencies array to be: [resetStar, setScore]",{"range":"546","text":"547"},"Update the dependencies array to be: [dispatch, hotel_id]",{"range":"548","text":"549"},[2111,2113],"[fetchHotelDetail]",[4458,4489],"[accommodationType, fetchHotels, searchTerm]",[4542,4554],"[fetchHotels, searchTerm]",[2325,2327],"[activeChatRoomId, userId, userRole]",[1663,1673],"[dispatch, hotel_id, userId]",[948,950],"[moveToRight]",[791,800],"[clicked, setScore]",[964,975],"[resetStar, setScore]",[597,607],"[dispatch, hotel_id]"]