{"ast":null,"code":"// // client/src/redux/authAction.js\n// import axios from 'axios';\n// import {\n//   login as loginAction,\n//   logout as logoutAction,\n//   withdrawal as withdrawalAction,\n// } from \"./slice/authSlice\";\n\n// const apiDeleteAccount = async(token) => {\n//   console.log(\"token in apiDeleteAccount: \", token);\n\n//   const config = {\n//     headers: { Authorization: `Bearer ${token}`}\n//   };\n\n//   try {\n//     const response = await axios.delete('/api/withdrawal', config);\n//     console.log(\"response in apiDeleteAccount: \", response);\n\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error message: \", error.message);\n//     console.error(\"Error stack: \", error.stack);\n//     throw error;\n//   }\n// };\n\n// const apiLogout = async(token) => {\n//   const config = {\n//     headers: { Authorization: `Bearer ${token}`}\n//   };\n//   try {\n//     const response = await axios.post('/api/logout',{},config);\n//     return response.data;\n//   }catch(error){\n//     console.error(error,\"여기서왜에러가가가가가가가\");\n//     throw error;\n//   }\n// };\n\n// export const login = (userRole,userId,token) => { \n//   return {\n//     type: loginAction.type,\n//     payload: { userRole,userId,token },\n//   };\n// };\n\n// export const logout = () => async (dispatch, getState) => {\n//   const { token } = getState().auth; // Redux state에서 token 가져오기\n\n// try {\n//   // 서버에 로그아웃 요청\n//   console.log(\"Calling apiDeleteAccount:::::::\");\n//   await apiLogout(token);\n//   dispatch({type: logoutAction.type});\n//   console.log(\"token in apiDeleteAccount:::::: \", token);\n\n// } catch (error) {\n//   console.error(error);\n// }\n// };\n\n// export const withdrawal = () => async (dispatch, getState) => {\n//   const { token } = getState().auth;\n//   console.log(\"token in withdrawal action: \", token);\n\n//   try {\n//     // 서버함수로 회원탈퇴\n//     await apiDeleteAccount(token);\n//     console.log(\"token in apiDeleteAccount: \", token);\n\n//     dispatch({type: withdrawalAction.type});\n//   } catch(error){\n//     console.error(error);\n//   }\n// }\n\n// export const setUserRole = (newUserRole) => {\n//   return {\n//     type: \"SET_USER_ROLE\",\n//     payload: newUserRole,\n//   };\n// };\n\nimport { login as loginAction, logout as logoutAction } from \"./slice/authSlice\";\nexport const login = (userRole, userId, token) => {\n  return {\n    type: loginAction.type,\n    payload: {\n      userRole,\n      userId,\n      token\n    }\n  };\n};\nexport const logout = () => {\n  return {\n    type: logoutAction.type\n  };\n};\nexport const setUserRole = newUserRole => {\n  return {\n    type: \"SET_USER_ROLE\",\n    payload: newUserRole\n  };\n};","map":{"version":3,"names":["login","loginAction","logout","logoutAction","userRole","userId","token","type","payload","setUserRole","newUserRole"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/redux/authAction.js"],"sourcesContent":["// // client/src/redux/authAction.js\n// import axios from 'axios';\n// import {\n//   login as loginAction,\n//   logout as logoutAction,\n//   withdrawal as withdrawalAction,\n// } from \"./slice/authSlice\";\n\n// const apiDeleteAccount = async(token) => {\n//   console.log(\"token in apiDeleteAccount: \", token);\n\n//   const config = {\n//     headers: { Authorization: `Bearer ${token}`}\n//   };\n\n//   try {\n//     const response = await axios.delete('/api/withdrawal', config);\n//     console.log(\"response in apiDeleteAccount: \", response);\n\n//     return response.data;\n//   } catch (error) {\n//     console.error(\"Error message: \", error.message);\n//     console.error(\"Error stack: \", error.stack);\n//     throw error;\n//   }\n// };\n\n// const apiLogout = async(token) => {\n//   const config = {\n//     headers: { Authorization: `Bearer ${token}`}\n//   };\n//   try {\n//     const response = await axios.post('/api/logout',{},config);\n//     return response.data;\n//   }catch(error){\n//     console.error(error,\"여기서왜에러가가가가가가가\");\n//     throw error;\n//   }\n// };\n\n// export const login = (userRole,userId,token) => { \n//   return {\n//     type: loginAction.type,\n//     payload: { userRole,userId,token },\n//   };\n// };\n\n// export const logout = () => async (dispatch, getState) => {\n//   const { token } = getState().auth; // Redux state에서 token 가져오기\n\n// try {\n//   // 서버에 로그아웃 요청\n//   console.log(\"Calling apiDeleteAccount:::::::\");\n//   await apiLogout(token);\n//   dispatch({type: logoutAction.type});\n//   console.log(\"token in apiDeleteAccount:::::: \", token);\n\n// } catch (error) {\n//   console.error(error);\n// }\n// };\n\n// export const withdrawal = () => async (dispatch, getState) => {\n//   const { token } = getState().auth;\n//   console.log(\"token in withdrawal action: \", token);\n\n//   try {\n//     // 서버함수로 회원탈퇴\n//     await apiDeleteAccount(token);\n//     console.log(\"token in apiDeleteAccount: \", token);\n\n//     dispatch({type: withdrawalAction.type});\n//   } catch(error){\n//     console.error(error);\n//   }\n// }\n\n// export const setUserRole = (newUserRole) => {\n//   return {\n//     type: \"SET_USER_ROLE\",\n//     payload: newUserRole,\n//   };\n// };\n\n\nimport { login as loginAction, logout as logoutAction } from \"./slice/authSlice\";\n\nexport const login = (userRole,userId,token) => {\n  return {\n    type: loginAction.type,\n    payload: { userRole,userId,token },\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: logoutAction.type,\n  };\n};\n\nexport const setUserRole = (newUserRole) => {\n  return {\n    type: \"SET_USER_ROLE\",\n    payload: newUserRole,\n  };\n};"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,KAAK,IAAIC,WAAW,EAAEC,MAAM,IAAIC,YAAY,QAAQ,mBAAmB;AAEhF,OAAO,MAAMH,KAAK,GAAGA,CAACI,QAAQ,EAACC,MAAM,EAACC,KAAK,KAAK;EAC9C,OAAO;IACLC,IAAI,EAAEN,WAAW,CAACM,IAAI;IACtBC,OAAO,EAAE;MAAEJ,QAAQ;MAACC,MAAM;MAACC;IAAM;EACnC,CAAC;AACH,CAAC;AAED,OAAO,MAAMJ,MAAM,GAAGA,CAAA,KAAM;EAC1B,OAAO;IACLK,IAAI,EAAEJ,YAAY,CAACI;EACrB,CAAC;AACH,CAAC;AAED,OAAO,MAAME,WAAW,GAAIC,WAAW,IAAK;EAC1C,OAAO;IACLH,IAAI,EAAE,eAAe;IACrBC,OAAO,EAAEE;EACX,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}