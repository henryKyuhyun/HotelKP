{"ast":null,"code":"var _jsxFileName = \"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelDetailPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useParams } from 'react-router-dom';\n// import Like from '../components/shared/like/Like';\n// import HotelPayment from '../components/hotel/HotelPayment';\n// import {HotelLayout,HotelContiner,HotelHeader,HotelPrice,HotelSubInfo,HotelInfo,HotelCommentInfo,Line,} from '../components/pagestyles/HotelDetailStyle'\n// import CommentContainer from '../components/hotel/comment/CommentContainer';\n// import { FaStar } from 'react-icons/fa';\n// import { BsPersonFill } from 'react-icons/bs';\n// import Map from '../components/map/Map';\n\n// export default function HotelDetailPage() {\n\n//   const {hotelId} = useParams();\n//   const [hotel,setHotel] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [mainImageIndex, setMainImageIndex] = useState(0);\n//   const [isShowMore, setIsShowMore] = useState(false);\n\n//   useEffect(() =>{\n//     fetchHotelDetail();\n//   },[]);\n\n//   const fetchHotelDetail = async() =>{\n//     try{\n//       const response = await axios.get(`/api/hotel/${hotelId}`);\n//       console.log(\"API response:\", response); \n//       setHotel(response.data);\n//     }catch(error){\n//       console.error(`Error fetching hotel detail : ${error}`);\n//       console.error(`Error response: ${error.response}`); \n//       setError('Faild to load hotel details');\n//     }\n//   };\n\n//   const processImages = (imagePath) => {\n//     if (imagePath) {\n//         if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n//             const parsedImages = JSON.parse(imagePath);\n//             return parsedImages.map((image) => {\n//                 // \"hotelImage/\" 문자열 뒤의 부분만 반환\n//                 const splitByWebPath = image.split(\"hotelImage/\");\n//                 if (splitByWebPath[1]) {\n//                     return splitByWebPath[1];\n//                 }\n\n//                 // 파일 시스템 경로에서 마지막 부분만 반환\n//                 const splitByFileSystemPath = image.split(\"\\\\\");\n//                 return splitByFileSystemPath[splitByFileSystemPath.length - 1];\n//             });\n//         } else {\n//              // 이 부분은 필요에 따라 유사하게 수정하세요.\n//             return [imagePath.split(\"hotelImage/\")[1]];\n//         }\n//     }\n//     return [];\n// };\n\n// // 대표 이미지 변경 함수\n//     const changeMainImage = (index) => {\n//       setMainImageIndex(index);\n//     };\n\n//   if(!hotel){\n//     return <h3>Loading</h3>\n//   }\n\n//   const imagePaths = processImages(hotel.hotelImages);\n\n//   return (\n//     <HotelLayout>\n//       <img\n//         src={`/hotelImage/${imagePaths[mainImageIndex]}`}\n//         alt={hotel.hotelName}\n//         style={{ width: \"100%\", height: \"auto\" }} \n//       />\n//       <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n//         {imagePaths.map((imagePath, index) => (\n//           <img\n//             key={index}\n//             src={`/hotelImage/${imagePath}`}\n//             alt={`${hotel.hotelName}-${index}`}\n//             onClick={() => changeMainImage(index)}\n//             style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n//           />\n//         ))}\n//       </div>\n\n//       <HotelContiner>\n//         <HotelHeader>\n//           <h1>{hotel.hotelName}</h1>\n//           <div>\n//             <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n//               {\n//                 (hotel.average_score === null ? 0 : hotel.average_score)\n//               }\n//             <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n//             <span>{hotel.user_id}</span>\n//             <HotelPrice>₩{hotel.price} /박</HotelPrice>\n//             <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n//           </div>\n//         </HotelHeader>\n\n//         <HotelSubInfo>\n//           <span>최대인원 {hotel.maxGuests}명</span>\n//           <span>{hotel.hotelSubInfo}</span>\n//         </HotelSubInfo>\n\n//         {/* <p>{hotel.hotelregion}</p> */}\n//         <HotelInfo>\n//           <h2>호텔 소개</h2>\n//           {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n//           {hotel.hotelInfo.length > 300 && (\n//           <button onClick={() => setIsShowMore(!isShowMore)}>\n//             {isShowMore ? \"접기\" : \"...더보기>\"}\n//           </button>\n//         )}\n//         </HotelInfo>\n\n//         {error && <p>{error}</p>}\n\n//         <HotelCommentInfo>\n//           <CommentContainer hotel_id={hotelId}/>\n//         </HotelCommentInfo>\n\n//         <Line />\n\n//         <HotelPayment hotel={hotel}/>\n\n//         <Map address={hotel.hotelAddress}/>\n\n//         <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n\n//       </HotelContiner>\n//     </HotelLayout>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport Like from '../components/shared/like/Like';\nimport HotelPayment from '../components/hotel/HotelPayment';\nimport { HotelLayout, HotelContiner, HotelHeader, HotelPrice, HotelSubInfo, HotelInfo, HotelCommentInfo, Line } from '../components/pagestyles/HotelDetailStyle';\nimport CommentContainer from '../components/hotel/comment/CommentContainer';\nimport { FaStar } from 'react-icons/fa';\nimport { BsPersonFill } from 'react-icons/bs';\nimport Map from '../components/map/Map';\nimport HotelCard from '../components/hotel/HotelCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HotelDetailPage() {\n  _s();\n  const {\n    hotelId\n  } = useParams();\n  const [hotel, setHotel] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [mainImageIndex, setMainImageIndex] = useState(0);\n  const [isShowMore, setIsShowMore] = useState(false);\n  useEffect(() => {\n    fetchHotelDetail();\n  }, []);\n  const fetchHotelDetail = async () => {\n    try {\n      const response = await axios.get(`/api/hotel/${hotelId}`);\n      console.log(\"API response:\", response);\n      setHotel(response.data);\n    } catch (error) {\n      console.error(`Error fetching hotel detail : ${error}`);\n      console.error(`Error response: ${error.response}`);\n      setError('Faild to load hotel details');\n    }\n  };\n  const processImages = imagePath => {\n    if (imagePath) {\n      if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n        const parsedImages = JSON.parse(imagePath);\n        return parsedImages.map(image => {\n          // \"hotelImage/\" 문자열 뒤의 부분만 반환\n          const splitByWebPath = image.split(\"hotelImage/\");\n          if (splitByWebPath[1]) {\n            return splitByWebPath[1];\n          }\n\n          // 파일 시스템 경로에서 마지막 부분만 반환\n          const splitByFileSystemPath = image.split(\"\\\\\");\n          return splitByFileSystemPath[splitByFileSystemPath.length - 1];\n        });\n      } else {\n        // 이 부분은 필요에 따라 유사하게 수정하세요.\n        return [imagePath.split(\"hotelImage/\")[1]];\n      }\n    }\n    return [];\n  };\n\n  // 대표 이미지 변경 함수\n  const changeMainImage = index => {\n    setMainImageIndex(index);\n  };\n  if (!hotel) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 12\n    }, this);\n  }\n  const imagePaths = processImages(hotel.hotelImages);\n  return /*#__PURE__*/_jsxDEV(HotelLayout, {\n    children: [hotels.map(hotel => /*#__PURE__*/_jsxDEV(HotelCard, {\n      hotel: hotel,\n      showEditButton: true,\n      onHotelSelect: handleHotelSelect\n      // average_score={true}\n    }, hotel.hotel_id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: imagePaths.map((imagePath, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/hotelImage/${imagePath}`,\n        alt: `${hotel.hotelName}-${index}`,\n        onClick: () => changeMainImage(index),\n        style: {\n          cursor: \"pointer\",\n          width: \"100px\",\n          height: \"100px\",\n          marginRight: \"10px\",\n          marginBottom: \"10px\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HotelContiner, {\n      children: [/*#__PURE__*/_jsxDEV(HotelHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hotel.hotelName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FaStar, {\n            color: \"ffd700\",\n            fontSize: \"18px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), hotel.average_score === null ? 0 : hotel.average_score, /*#__PURE__*/_jsxDEV(BsPersonFill, {\n            style: {\n              marginLeft: \"10px\"\n            },\n            fontSize: \"18px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: hotel.user_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HotelPrice, {\n            children: [\"\\u20A9\", hotel.price, \" /\\uBC15\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Like, {\n            hotel_id: hotelId,\n            hotel_owner_id: hotel.user_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelSubInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uCD5C\\uB300\\uC778\\uC6D0 \", hotel.maxGuests, \"\\uBA85\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: hotel.hotelSubInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD638\\uD154 \\uC18C\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300), hotel.hotelInfo.length > 300 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsShowMore(!isShowMore),\n          children: isShowMore ? \"접기\" : \"...더보기>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(HotelCommentInfo, {\n        children: /*#__PURE__*/_jsxDEV(CommentContainer, {\n          hotel_id: hotelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelPayment, {\n        hotel: hotel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        address: hotel.hotelAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/adminProfile/${hotel.user_id}`,\n        children: \"See the profile of this hotel's admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(HotelDetailPage, \"g8XnvUm4AWFHZ4KGAJTr9wGKjug=\", false, function () {\n  return [useParams];\n});\n_c = HotelDetailPage;\nvar _c;\n$RefreshReg$(_c, \"HotelDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useParams","Like","HotelPayment","HotelLayout","HotelContiner","HotelHeader","HotelPrice","HotelSubInfo","HotelInfo","HotelCommentInfo","Line","CommentContainer","FaStar","BsPersonFill","Map","HotelCard","jsxDEV","_jsxDEV","HotelDetailPage","_s","hotelId","hotel","setHotel","error","setError","mainImageIndex","setMainImageIndex","isShowMore","setIsShowMore","fetchHotelDetail","response","get","console","log","data","processImages","imagePath","trim","charAt","parsedImages","JSON","parse","map","image","splitByWebPath","split","splitByFileSystemPath","length","changeMainImage","index","children","fileName","_jsxFileName","lineNumber","columnNumber","imagePaths","hotelImages","hotels","showEditButton","onHotelSelect","handleHotelSelect","hotel_id","style","display","flexWrap","src","alt","hotelName","onClick","cursor","width","height","marginRight","marginBottom","color","fontSize","average_score","marginLeft","user_id","price","hotel_owner_id","maxGuests","hotelSubInfo","hotelInfo","slice","address","hotelAddress","to","_c","$RefreshReg$"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelDetailPage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useParams } from 'react-router-dom';\n// import Like from '../components/shared/like/Like';\n// import HotelPayment from '../components/hotel/HotelPayment';\n// import {HotelLayout,HotelContiner,HotelHeader,HotelPrice,HotelSubInfo,HotelInfo,HotelCommentInfo,Line,} from '../components/pagestyles/HotelDetailStyle'\n// import CommentContainer from '../components/hotel/comment/CommentContainer';\n// import { FaStar } from 'react-icons/fa';\n// import { BsPersonFill } from 'react-icons/bs';\n// import Map from '../components/map/Map';\n\n// export default function HotelDetailPage() {\n\n//   const {hotelId} = useParams();\n//   const [hotel,setHotel] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [mainImageIndex, setMainImageIndex] = useState(0);\n//   const [isShowMore, setIsShowMore] = useState(false);\n\n\n//   useEffect(() =>{\n//     fetchHotelDetail();\n//   },[]);\n\n//   const fetchHotelDetail = async() =>{\n//     try{\n//       const response = await axios.get(`/api/hotel/${hotelId}`);\n//       console.log(\"API response:\", response); \n//       setHotel(response.data);\n//     }catch(error){\n//       console.error(`Error fetching hotel detail : ${error}`);\n//       console.error(`Error response: ${error.response}`); \n//       setError('Faild to load hotel details');\n//     }\n//   };\n    \n//   const processImages = (imagePath) => {\n//     if (imagePath) {\n//         if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n//             const parsedImages = JSON.parse(imagePath);\n//             return parsedImages.map((image) => {\n//                 // \"hotelImage/\" 문자열 뒤의 부분만 반환\n//                 const splitByWebPath = image.split(\"hotelImage/\");\n//                 if (splitByWebPath[1]) {\n//                     return splitByWebPath[1];\n//                 }\n                \n//                 // 파일 시스템 경로에서 마지막 부분만 반환\n//                 const splitByFileSystemPath = image.split(\"\\\\\");\n//                 return splitByFileSystemPath[splitByFileSystemPath.length - 1];\n//             });\n//         } else {\n//              // 이 부분은 필요에 따라 유사하게 수정하세요.\n//             return [imagePath.split(\"hotelImage/\")[1]];\n//         }\n//     }\n//     return [];\n// };\n\n// // 대표 이미지 변경 함수\n//     const changeMainImage = (index) => {\n//       setMainImageIndex(index);\n//     };\n\n    \n//   if(!hotel){\n//     return <h3>Loading</h3>\n//   }\n\n//   const imagePaths = processImages(hotel.hotelImages);\n\n//   return (\n//     <HotelLayout>\n//       <img\n//         src={`/hotelImage/${imagePaths[mainImageIndex]}`}\n//         alt={hotel.hotelName}\n//         style={{ width: \"100%\", height: \"auto\" }} \n//       />\n//       <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n//         {imagePaths.map((imagePath, index) => (\n//           <img\n//             key={index}\n//             src={`/hotelImage/${imagePath}`}\n//             alt={`${hotel.hotelName}-${index}`}\n//             onClick={() => changeMainImage(index)}\n//             style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n//           />\n//         ))}\n//       </div>\n\n//       <HotelContiner>\n//         <HotelHeader>\n//           <h1>{hotel.hotelName}</h1>\n//           <div>\n//             <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n//               {\n//                 (hotel.average_score === null ? 0 : hotel.average_score)\n//               }\n//             <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n//             <span>{hotel.user_id}</span>\n//             <HotelPrice>₩{hotel.price} /박</HotelPrice>\n//             <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n//           </div>\n//         </HotelHeader>\n\n//         <HotelSubInfo>\n//           <span>최대인원 {hotel.maxGuests}명</span>\n//           <span>{hotel.hotelSubInfo}</span>\n//         </HotelSubInfo>\n\n//         {/* <p>{hotel.hotelregion}</p> */}\n//         <HotelInfo>\n//           <h2>호텔 소개</h2>\n//           {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n//           {hotel.hotelInfo.length > 300 && (\n//           <button onClick={() => setIsShowMore(!isShowMore)}>\n//             {isShowMore ? \"접기\" : \"...더보기>\"}\n//           </button>\n//         )}\n//         </HotelInfo>\n\n//         {error && <p>{error}</p>}\n        \n//         <HotelCommentInfo>\n//           <CommentContainer hotel_id={hotelId}/>\n//         </HotelCommentInfo>\n\n//         <Line />\n\n//         <HotelPayment hotel={hotel}/>\n\n//         <Map address={hotel.hotelAddress}/>\n\n\n//         <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n\n//       </HotelContiner>\n//     </HotelLayout>\n//   );\n// }\n\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport Like from '../components/shared/like/Like';\nimport HotelPayment from '../components/hotel/HotelPayment';\nimport {HotelLayout,HotelContiner,HotelHeader,HotelPrice,HotelSubInfo,HotelInfo,HotelCommentInfo,Line,} from '../components/pagestyles/HotelDetailStyle'\nimport CommentContainer from '../components/hotel/comment/CommentContainer';\nimport { FaStar } from 'react-icons/fa';\nimport { BsPersonFill } from 'react-icons/bs';\nimport Map from '../components/map/Map';\nimport HotelCard from '../components/hotel/HotelCard';\n\nexport default function HotelDetailPage() {\n\n  const {hotelId} = useParams();\n  const [hotel,setHotel] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [mainImageIndex, setMainImageIndex] = useState(0);\n  const [isShowMore, setIsShowMore] = useState(false);\n\n\n  useEffect(() =>{\n    fetchHotelDetail();\n  },[]);\n\n  const fetchHotelDetail = async() =>{\n    try{\n      const response = await axios.get(`/api/hotel/${hotelId}`);\n      console.log(\"API response:\", response); \n      setHotel(response.data);\n    }catch(error){\n      console.error(`Error fetching hotel detail : ${error}`);\n      console.error(`Error response: ${error.response}`); \n      setError('Faild to load hotel details');\n    }\n  };\n    \n  const processImages = (imagePath) => {\n    if (imagePath) {\n        if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n            const parsedImages = JSON.parse(imagePath);\n            return parsedImages.map((image) => {\n                // \"hotelImage/\" 문자열 뒤의 부분만 반환\n                const splitByWebPath = image.split(\"hotelImage/\");\n                if (splitByWebPath[1]) {\n                    return splitByWebPath[1];\n                }\n                \n                // 파일 시스템 경로에서 마지막 부분만 반환\n                const splitByFileSystemPath = image.split(\"\\\\\");\n                return splitByFileSystemPath[splitByFileSystemPath.length - 1];\n            });\n        } else {\n             // 이 부분은 필요에 따라 유사하게 수정하세요.\n            return [imagePath.split(\"hotelImage/\")[1]];\n        }\n    }\n    return [];\n};\n\n// 대표 이미지 변경 함수\n    const changeMainImage = (index) => {\n      setMainImageIndex(index);\n    };\n\n    \n  if(!hotel){\n    return <h3>Loading</h3>\n  }\n\n  const imagePaths = processImages(hotel.hotelImages);\n\n  return (\n    <HotelLayout>\n      \n      {hotels.map((hotel) => (\n        <HotelCard\n          key={hotel.hotel_id}\n          hotel={hotel}\n          showEditButton={true}\n          onHotelSelect={handleHotelSelect}\n          // average_score={true}\n        />\n      ))}\n      {error && <p>{error}</p>}\n\n\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n        {imagePaths.map((imagePath, index) => (\n          <img\n            key={index}\n            src={`/hotelImage/${imagePath}`}\n            alt={`${hotel.hotelName}-${index}`}\n            onClick={() => changeMainImage(index)}\n            style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n          />\n        ))}\n      </div>\n\n      <HotelContiner>\n        <HotelHeader>\n          <h1>{hotel.hotelName}</h1>\n          <div>\n            <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n              {\n                (hotel.average_score === null ? 0 : hotel.average_score)\n              }\n            <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n            <span>{hotel.user_id}</span>\n            <HotelPrice>₩{hotel.price} /박</HotelPrice>\n            <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n          </div>\n        </HotelHeader>\n\n        <HotelSubInfo>\n          <span>최대인원 {hotel.maxGuests}명</span>\n          <span>{hotel.hotelSubInfo}</span>\n        </HotelSubInfo>\n\n        {/* <p>{hotel.hotelregion}</p> */}\n        <HotelInfo>\n          <h2>호텔 소개</h2>\n          {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n          {hotel.hotelInfo.length > 300 && (\n          <button onClick={() => setIsShowMore(!isShowMore)}>\n            {isShowMore ? \"접기\" : \"...더보기>\"}\n          </button>\n        )}\n        </HotelInfo>\n\n        {error && <p>{error}</p>}\n        \n        <HotelCommentInfo>\n          <CommentContainer hotel_id={hotelId}/>\n        </HotelCommentInfo>\n\n        <Line />\n\n        <HotelPayment hotel={hotel}/>\n\n        <Map address={hotel.hotelAddress}/>\n\n\n        <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n\n      </HotelContiner>\n    </HotelLayout>\n  );\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAAQC,WAAW,EAACC,aAAa,EAACC,WAAW,EAACC,UAAU,EAACC,YAAY,EAACC,SAAS,EAACC,gBAAgB,EAACC,IAAI,QAAQ,2CAA2C;AACxJ,OAAOC,gBAAgB,MAAM,8CAA8C;AAC3E,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,GAAG,MAAM,uBAAuB;AACvC,OAAOC,SAAS,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAExC,MAAM;IAACC;EAAO,CAAC,GAAGpB,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACqB,KAAK,EAACC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EACvC,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,cAAc,EAAEC,iBAAiB,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC8B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EAGnDD,SAAS,CAAC,MAAK;IACbiC,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAU;IACjC,IAAG;MACD,MAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,GAAG,CAAE,cAAaX,OAAQ,EAAC,CAAC;MACzDY,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,QAAQ,CAAC;MACtCR,QAAQ,CAACQ,QAAQ,CAACI,IAAI,CAAC;IACzB,CAAC,QAAMX,KAAK,EAAC;MACXS,OAAO,CAACT,KAAK,CAAE,iCAAgCA,KAAM,EAAC,CAAC;MACvDS,OAAO,CAACT,KAAK,CAAE,mBAAkBA,KAAK,CAACO,QAAS,EAAC,CAAC;MAClDN,QAAQ,CAAC,6BAA6B,CAAC;IACzC;EACF,CAAC;EAED,MAAMW,aAAa,GAAIC,SAAS,IAAK;IACnC,IAAIA,SAAS,EAAE;MACX,IAAI,OAAOA,SAAS,KAAK,QAAQ,IAAIA,SAAS,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;QACrE,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAAC;QAC1C,OAAOG,YAAY,CAACG,GAAG,CAAEC,KAAK,IAAK;UAC/B;UACA,MAAMC,cAAc,GAAGD,KAAK,CAACE,KAAK,CAAC,aAAa,CAAC;UACjD,IAAID,cAAc,CAAC,CAAC,CAAC,EAAE;YACnB,OAAOA,cAAc,CAAC,CAAC,CAAC;UAC5B;;UAEA;UACA,MAAME,qBAAqB,GAAGH,KAAK,CAACE,KAAK,CAAC,IAAI,CAAC;UAC/C,OAAOC,qBAAqB,CAACA,qBAAqB,CAACC,MAAM,GAAG,CAAC,CAAC;QAClE,CAAC,CAAC;MACN,CAAC,MAAM;QACF;QACD,OAAO,CAACX,SAAS,CAACS,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9C;IACJ;IACA,OAAO,EAAE;EACb,CAAC;;EAED;EACI,MAAMG,eAAe,GAAIC,KAAK,IAAK;IACjCvB,iBAAiB,CAACuB,KAAK,CAAC;EAC1B,CAAC;EAGH,IAAG,CAAC5B,KAAK,EAAC;IACR,oBAAOJ,OAAA;MAAAiC,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACzB;EAEA,MAAMC,UAAU,GAAGpB,aAAa,CAACd,KAAK,CAACmC,WAAW,CAAC;EAEnD,oBACEvC,OAAA,CAACd,WAAW;IAAA+C,QAAA,GAETO,MAAM,CAACf,GAAG,CAAErB,KAAK,iBAChBJ,OAAA,CAACF,SAAS;MAERM,KAAK,EAAEA,KAAM;MACbqC,cAAc,EAAE,IAAK;MACrBC,aAAa,EAAEC;MACf;IAAA,GAJKvC,KAAK,CAACwC,QAAQ;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKpB,CACF,CAAC,EACD/B,KAAK,iBAAIN,OAAA;MAAAiC,QAAA,EAAI3B;IAAK;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGxBrC,OAAA;MAAK6C,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAd,QAAA,EAC/CK,UAAU,CAACb,GAAG,CAAC,CAACN,SAAS,EAAEa,KAAK,kBAC/BhC,OAAA;QAEEgD,GAAG,EAAG,eAAc7B,SAAU,EAAE;QAChC8B,GAAG,EAAG,GAAE7C,KAAK,CAAC8C,SAAU,IAAGlB,KAAM,EAAE;QACnCmB,OAAO,EAAEA,CAAA,KAAMpB,eAAe,CAACC,KAAK,CAAE;QACtCa,KAAK,EAAE;UAAEO,MAAM,EAAE,SAAS;UAAEC,KAAK,EAAE,OAAO;UAAEC,MAAM,EAAE,OAAO;UAAEC,WAAW,EAAE,MAAM;UAAEC,YAAY,EAAE;QAAO;MAAE,GAJpGxB,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENrC,OAAA,CAACb,aAAa;MAAA8C,QAAA,gBACZjC,OAAA,CAACZ,WAAW;QAAA6C,QAAA,gBACVjC,OAAA;UAAAiC,QAAA,EAAK7B,KAAK,CAAC8C;QAAS;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BrC,OAAA;UAAAiC,QAAA,gBACEjC,OAAA,CAACL,MAAM;YAAC8D,KAAK,EAAC,QAAQ;YAACC,QAAQ,EAAC;UAAM;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,EAEnCjC,KAAK,CAACuD,aAAa,KAAK,IAAI,GAAG,CAAC,GAAGvD,KAAK,CAACuD,aAAa,eAE3D3D,OAAA,CAACJ,YAAY;YAACiD,KAAK,EAAE;cAAEe,UAAU,EAAE;YAAO,CAAE;YAACF,QAAQ,EAAC;UAAM;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eAC9DrC,OAAA;YAAAiC,QAAA,EAAO7B,KAAK,CAACyD;UAAO;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5BrC,OAAA,CAACX,UAAU;YAAA4C,QAAA,GAAC,QAAC,EAAC7B,KAAK,CAAC0D,KAAK,EAAC,UAAG;UAAA;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC1CrC,OAAA,CAAChB,IAAI;YAAC4D,QAAQ,EAAEzC,OAAQ;YAAC4D,cAAc,EAAE3D,KAAK,CAACyD;UAAQ;YAAA3B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAEdrC,OAAA,CAACV,YAAY;QAAA2C,QAAA,gBACXjC,OAAA;UAAAiC,QAAA,GAAM,2BAAK,EAAC7B,KAAK,CAAC4D,SAAS,EAAC,QAAC;QAAA;UAAA9B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpCrC,OAAA;UAAAiC,QAAA,EAAO7B,KAAK,CAAC6D;QAAY;UAAA/B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eAGfrC,OAAA,CAACT,SAAS;QAAA0C,QAAA,gBACRjC,OAAA;UAAAiC,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACb3B,UAAU,GAAGN,KAAK,CAAC8D,SAAS,GAAG9D,KAAK,CAAC8D,SAAS,CAACC,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAC5D/D,KAAK,CAAC8D,SAAS,CAACpC,MAAM,GAAG,GAAG,iBAC7B9B,OAAA;UAAQmD,OAAO,EAAEA,CAAA,KAAMxC,aAAa,CAAC,CAACD,UAAU,CAAE;UAAAuB,QAAA,EAC/CvB,UAAU,GAAG,IAAI,GAAG;QAAS;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU,CAAC,EAEX/B,KAAK,iBAAIN,OAAA;QAAAiC,QAAA,EAAI3B;MAAK;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAExBrC,OAAA,CAACR,gBAAgB;QAAAyC,QAAA,eACfjC,OAAA,CAACN,gBAAgB;UAACkD,QAAQ,EAAEzC;QAAQ;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eAEnBrC,OAAA,CAACP,IAAI;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAERrC,OAAA,CAACf,YAAY;QAACmB,KAAK,EAAEA;MAAM;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAE7BrC,OAAA,CAACH,GAAG;QAACuE,OAAO,EAAEhE,KAAK,CAACiE;MAAa;QAAAnC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAGnCrC,OAAA,CAAClB,IAAI;QAACwF,EAAE,EAAG,iBAAgBlE,KAAK,CAACyD,OAAQ,EAAE;QAAA5B,QAAA,EAAC;MAAqC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAElB;AAACnC,EAAA,CAxIuBD,eAAe;EAAA,QAEnBlB,SAAS;AAAA;AAAAwF,EAAA,GAFLtE,eAAe;AAAA,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}