{"ast":null,"code":"var _jsxFileName = \"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postComment } from '../../../redux/slice/commentSlice';\nimport { CardFormLayout, CardForm, CardFormInput, CommentButton } from './CommentStyle';\nimport Star from '../../shared/star/Star';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentForm({\n  hotel_id,\n  onSubmitSuccess\n}) {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [resetStar, setResetStar] = useState(false);\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  const dispatch = useDispatch();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (content.trim().length === 0) return;\n    if (isLoggedIn) {\n      try {\n        await dispatch(postComment({\n          hotel_id,\n          user_id: loggedInUser.id,\n          content,\n          score\n        }));\n        setContent(\"\");\n        setScore(0);\n        setResetStar(!resetStar);\n        alert(\"댓글이 성공적으로 생성되었습니다.\");\n        if (onSubmitSuccess) {\n          onSubmitSuccess();\n        }\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    } else {\n      alert(\"로그인 후 이용가능합니다\");\n      setContent('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CardFormLayout, {\n    children: /*#__PURE__*/_jsxDEV(CardForm, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Star, {\n        setScore: setScore,\n        resetStar: resetStar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(CardFormInput, {\n          type: \"text\",\n          value: content,\n          onChange: e => setContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommentButton, {\n          type: \"submit\",\n          children: \"\\uD6C4\\uAE30 \\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n_s(CommentForm, \"yASsMzxiPIRJFcaZjaREwQVpBZg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","postComment","CardFormLayout","CardForm","CardFormInput","CommentButton","Star","jsxDEV","_jsxDEV","CommentForm","hotel_id","onSubmitSuccess","_s","content","setContent","score","setScore","resetStar","setResetStar","loggedInUser","JSON","parse","localStorage","getItem","isLoggedIn","state","auth","dispatch","handleSubmit","e","preventDefault","trim","length","user_id","id","alert","error","console","log","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { postComment } from '../../../redux/slice/commentSlice';\nimport {\n  CardFormLayout,\n  CardForm,\n  CardFormInput,\n  CommentButton\n}from './CommentStyle';\nimport Star from '../../shared/star/Star';\n\n\nexport default function CommentForm({hotel_id, onSubmitSuccess}) {\n    const [content, setContent] = useState(\"\");\n    const [score, setScore] = useState(0);\n    const [resetStar, setResetStar] = useState(false);\n\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n    const dispatch = useDispatch();\n  \n    const handleSubmit = async(e)=>{\n      e.preventDefault();\n  \n      if(content.trim().length === 0) return;\n      \n      if(isLoggedIn){\n        try{\n          await dispatch(postComment({hotel_id , user_id: loggedInUser.id , content, score}));\n          setContent(\"\");\n          setScore(0);\n          setResetStar(!resetStar);\n          alert(\"댓글이 성공적으로 생성되었습니다.\");\n          \n          if(onSubmitSuccess){\n              onSubmitSuccess();\n          }\n    \n        }catch(error){\n          console.log(\"error\",error);\n        }\n      }else{\n        alert(\"로그인 후 이용가능합니다\");\n        setContent('');\n      }\n    };\n    \n    return (\n      <CardFormLayout>\n      <CardForm onSubmit={handleSubmit}>\n          <Star setScore = {setScore} resetStar={resetStar}/>\n          <div>\n            <CardFormInput type=\"text\" value={content} onChange={(e) => setContent(e.target.value)} />\n            <CommentButton type=\"submit\">후기 등록</CommentButton>\n          </div>\n      </CardForm>\n    </CardFormLayout>\n    );\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}