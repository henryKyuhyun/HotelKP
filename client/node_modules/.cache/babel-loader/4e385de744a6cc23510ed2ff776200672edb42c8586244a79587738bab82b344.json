{"ast":null,"code":"var _jsxFileName = \"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentContainer.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { fetchComments } from '../../../redux/slice/commentSlice';\n// import CommentCard from './CommentCard';\n// import CommentForm from './CommentForm';\n// import {\n//     CommentLayout,\n//     CommentHeader,\n//     CommentTitle,\n//     FormAndLinkContainer,\n//     LinkButton,\n// }from './CommentStyle';\n// import Star from '../../shared/star/Star';\n\n// export default function CommentContainer({hotel_id}) {\n//     // const comments = useSelector((state) => state.comment || []);\n//     const dispatch = useDispatch();\n//     const allComments = useSelector((state) => state.comment.comments || {});\n//     const comments = allComments[hotel_id] || [];\n//     useEffect(() =>{\n//         dispatch(fetchComments(hotel_id));\n//     },[hotel_id]);\n\n//     const handleNewComment = () => {\n//         dispatch(fetchComments(hotel_id));\n//     };\n\n//     return (\n//         <CommentLayout>\n//             {comments.length === 0 ?\n//                 <>\n//                 <h1>후기가 아직 없습니다</h1>\n//                 <CommentForm hotel_id={hotel_id} onSubmitSuccess={handleNewComment} />\n//                 </>\n\n//             :\n//             <>\n//                 <CommentHeader>\n//                     <CommentTitle>후기 {comments.length}개</CommentTitle>\n//                     {comments.length > 5 &&\n//                         <LinkButton to={{pathname: `/comments/${hotel_id}`,state: { hotel_id }}}>후기 전체보기</LinkButton>\n//                     }\n//                 </CommentHeader>\n//                 <ul>\n//                     {comments.slice(0, 5).map((comment) => (\n//                         <CommentCard key={comment.id} comment={comment}/>\n//                     ))\n//                     }\n//                 </ul>\n\n//                 <FormAndLinkContainer>\n//                     <CommentForm hotel_id={hotel_id} onSubmitSuccess={handleNewComment} />\n//                 </FormAndLinkContainer>\n//             </>\n//             }\n//         </CommentLayout>\n\n//     );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchComments } from '../../../redux/slice/commentSlice';\nimport CommentCard from './CommentCard';\nimport CommentForm from './CommentForm';\nimport { CommentLayout, CommentHeader, CommentTitle, FormAndLinkContainer, LinkButton } from './CommentStyle';\nimport Star from '../../shared/star/Star';\nimport { fetchUserPayment } from '../../../redux/slice/paymentSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CommentContainer({\n  hotel_id\n}) {\n  _s();\n  // const comments = useSelector((state) => state.comment || []);\n  const dispatch = useDispatch();\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n  const userId = loggedInUser.id;\n  const allComments = useSelector(state => state.comment.comments || {});\n  const comments = allComments[hotel_id] || [];\n  const userPayment = useSelector(state => state.payment.userPayment || []);\n  const paymentHotel = userPayment.find(pay => {\n    return pay.hotel_id === Number(hotel_id);\n  });\n  let checkOutTime;\n  if (paymentHotel) {\n    checkOutTime = new Date(paymentHotel.check_out);\n  }\n  const currentTime = new Date();\n  useEffect(() => {\n    dispatch(fetchComments(hotel_id));\n    dispatch(fetchUserPayment(userId));\n  }, [hotel_id]);\n  const handleNewComment = () => {\n    dispatch(fetchComments(hotel_id));\n  };\n  return /*#__PURE__*/_jsxDEV(CommentLayout, {\n    children: [comments.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uD6C4\\uAE30\\uAC00 \\uC544\\uC9C1 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), paymentHotel && checkOutTime < currentTime ? /*#__PURE__*/_jsxDEV(CommentForm, {\n        hotel_id: hotel_id,\n        onSubmitSuccess: handleNewComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 63\n      }, this) : null]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CommentTitle, {\n          children: [\"\\uD6C4\\uAE30 \", comments.length, \"\\uAC1C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), comments.length > 5 && /*#__PURE__*/_jsxDEV(LinkButton, {\n          to: {\n            pathname: `/comments/${hotel_id}`,\n            state: {\n              hotel_id\n            }\n          },\n          children: \"\\uD6C4\\uAE30 \\uC804\\uCCB4\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.slice(0, 5).map(comment => /*#__PURE__*/_jsxDEV(CommentCard, {\n          comment: comment\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(FormAndLinkContainer, {\n      children: paymentHotel && checkOutTime < currentTime ? /*#__PURE__*/_jsxDEV(CommentForm, {\n        hotel_id: hotel_id,\n        onSubmitSuccess: handleNewComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 63\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(CommentContainer, \"XwdmFro4A4MdUiFexp2eQNTY61E=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = CommentContainer;\nvar _c;\n$RefreshReg$(_c, \"CommentContainer\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchComments","CommentCard","CommentForm","CommentLayout","CommentHeader","CommentTitle","FormAndLinkContainer","LinkButton","Star","fetchUserPayment","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentContainer","hotel_id","_s","dispatch","loggedInUser","JSON","parse","localStorage","getItem","userId","id","allComments","state","comment","comments","userPayment","payment","paymentHotel","find","pay","Number","checkOutTime","Date","check_out","currentTime","handleNewComment","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onSubmitSuccess","to","pathname","slice","map","_c","$RefreshReg$"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/components/hotel/comment/CommentContainer.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { fetchComments } from '../../../redux/slice/commentSlice';\n// import CommentCard from './CommentCard';\n// import CommentForm from './CommentForm';\n// import {\n//     CommentLayout,\n//     CommentHeader,\n//     CommentTitle,\n//     FormAndLinkContainer,\n//     LinkButton,\n// }from './CommentStyle';\n// import Star from '../../shared/star/Star';\n\n\n// export default function CommentContainer({hotel_id}) {\n//     // const comments = useSelector((state) => state.comment || []);\n//     const dispatch = useDispatch();\n//     const allComments = useSelector((state) => state.comment.comments || {});\n//     const comments = allComments[hotel_id] || [];\n//     useEffect(() =>{\n//         dispatch(fetchComments(hotel_id));\n//     },[hotel_id]);\n    \n//     const handleNewComment = () => {\n//         dispatch(fetchComments(hotel_id));\n//     };\n\n//     return (\n//         <CommentLayout>\n//             {comments.length === 0 ?\n//                 <>\n//                 <h1>후기가 아직 없습니다</h1>\n//                 <CommentForm hotel_id={hotel_id} onSubmitSuccess={handleNewComment} />\n//                 </>\n                \n//             :\n//             <>\n//                 <CommentHeader>\n//                     <CommentTitle>후기 {comments.length}개</CommentTitle>\n//                     {comments.length > 5 &&\n//                         <LinkButton to={{pathname: `/comments/${hotel_id}`,state: { hotel_id }}}>후기 전체보기</LinkButton>\n//                     }\n//                 </CommentHeader>\n//                 <ul>\n//                     {comments.slice(0, 5).map((comment) => (\n//                         <CommentCard key={comment.id} comment={comment}/>\n//                     ))\n//                     }\n//                 </ul>\n\n//                 <FormAndLinkContainer>\n//                     <CommentForm hotel_id={hotel_id} onSubmitSuccess={handleNewComment} />\n//                 </FormAndLinkContainer>\n//             </>\n//             }\n//         </CommentLayout>\n        \n//     );\n// }\n\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchComments } from '../../../redux/slice/commentSlice';\nimport CommentCard from './CommentCard';\nimport CommentForm from './CommentForm';\nimport {\n    CommentLayout,\n    CommentHeader,\n    CommentTitle,\n    FormAndLinkContainer,\n    LinkButton,\n}from './CommentStyle';\nimport Star from '../../shared/star/Star';\nimport {fetchUserPayment} from '../../../redux/slice/paymentSlice';\n\n\nexport default function CommentContainer({hotel_id}) {\n    // const comments = useSelector((state) => state.comment || []);\n    const dispatch = useDispatch();\n    const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n    const userId = loggedInUser.id;\n\n    const allComments = useSelector((state) => state.comment.comments || {});\n    const comments = allComments[hotel_id] || [];\n    const userPayment = useSelector((state) => state.payment.userPayment || []);\n    const paymentHotel = userPayment.find(pay => {\n        return pay.hotel_id === Number(hotel_id);\n    });\n    let checkOutTime;\n    if (paymentHotel) {\n        checkOutTime = new Date(paymentHotel.check_out);\n    }\n    const currentTime = new Date();\n\n    useEffect(() =>{\n        dispatch(fetchComments(hotel_id));\n        dispatch(fetchUserPayment(userId));\n    },[hotel_id]);\n\n    const handleNewComment = () => {\n        dispatch(fetchComments(hotel_id));\n    };\n    \n\n    return (\n        <CommentLayout>\n            {comments.length === 0 ?\n                <>\n                <h1>후기가 아직 없습니다</h1>\n                {paymentHotel && checkOutTime < currentTime ? <CommentForm hotel_id={hotel_id} onSubmitSuccess={handleNewComment} /> : null}\n                </>\n                \n            :\n            <>\n                <CommentHeader>\n                    <CommentTitle>후기 {comments.length}개</CommentTitle>\n                    {comments.length > 5 &&\n                        <LinkButton to={{pathname: `/comments/${hotel_id}`,state: { hotel_id }}}>후기 전체보기</LinkButton>\n                    }\n                </CommentHeader>\n                <ul>\n                    {comments.slice(0, 5).map((comment) => (\n                        <CommentCard key={comment.id} comment={comment}/>\n                    ))\n                    }\n                </ul>\n            </>\n            }\n            <FormAndLinkContainer>\n                {paymentHotel && checkOutTime < currentTime ? <CommentForm hotel_id={hotel_id} onSubmitSuccess={handleNewComment} /> : null}\n            </FormAndLinkContainer>\n\n        </CommentLayout>\n        \n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}