{"ast":null,"code":"var _jsxFileName = \"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/Mypage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { fetchUserLikes } from \"../redux/slice/likeSlice\"; \n// import HotelCard from '../components/hotel/HotelCard';\n// import ChangePasswordForm from './ChangePasswordForm';\n// import { useNavigate } from \"react-router-dom\";\n// import { fetchMyHotels } from \"../redux/hotelActions\";\n// import IntroductionPage from './IntroductionPage';\n// import HotelReservation from '../components/hotel/HotelReservation';\n// import { fetchUserComments } from '../redux/slice/commentSlice';\n// import Modal from 'react-modal';\n// import CommentCard from '../components/hotel/comment/CommentCard';\n// import { MypageLayout,\n//         MypageInfo,\n//         InfoItem,\n//         InfoItemBox,\n//         InfoBox,\n//         ActivitySelectBox,\n//         ActivitySelectItems,\n//         ActivitySelectItem,\n//         HeartIcon,\n//         CreditCardIcon,\n//         CommentIcon,\n//         PencilIcon,\n//         ActivityContainer,\n//         HotelCardContainer,\n//         HotelDesc,\n//         } from \"../components/pagestyles/MyPageStyle\";\n// import MainHeader from '../components/shared/header/MainHeader';\n// import { IntroBtn } from '../components/pagestyles/IntroductionInputPageStyle';\n// import { HeaderContainer } from '../components/shared/header/HeaderStyle';\n// import WithdrawalPart from '../components/hotel/users/WithdrawalPart';\n\n// export default function Mypage() {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const [userRole, setUserRole] = useState(\"\");\n//   const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n//   const userComments = useSelector(state => state.comment.comments['user']); \n//   const myHotels = useSelector((state) => state.hotels.myHotels);\n//   const userPayment = useSelector((state) => state.payment.userPayment) || [];\n//   const adminPayment = useSelector((state) => state.payment.adminPayment) || [];\n//   const likes = useSelector((state) => state.like.likes);\n//   const myHotelList = Object.keys(myHotels).map((hotel_id) => myHotels[hotel_id]);\n//   const likeHotels = Object.keys(likes).map((hotel_id) => likes[hotel_id]);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   useEffect(() => {\n//     if (loggedInUser) {\n//       const newUserRole = loggedInUser.userRole;\n//       setUserRole(newUserRole);\n//     }\n//   }, [loggedInUser,]);\n\n//   useEffect(() => {\n//     if (loggedInUser?.id) { \n//       dispatch(fetchMyHotels(loggedInUser.id));\n//       dispatch(fetchUserComments({user_id:loggedInUser.id}));\n//       dispatch(fetchUserLikes(loggedInUser.id));\n//     }\n//   }, [loggedInUser?.id, dispatch]);\n\n//   const handleEditButtonClick = (hotel_id) => {\n//     navigate(`/editHotel/${hotel_id}`);\n//   };\n\n//   const scrollTo = (id) => {\n//     const element = document.getElementById(id);\n//     element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n//   };\n\n//   const openModal = () => {\n//     setIsModalOpen(true);\n//   }\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   }\n\n//     return (\n//       <MypageLayout>\n//         <MainHeader bgColor=\"#f9f9f9\"/>\n//         <HeaderContainer>\n//         <h1>마이페이지</h1>\n//         <IntroBtn onClick={openModal}>자기소개 등록하기</IntroBtn>\n//         </HeaderContainer>\n//         <Modal\n//           isOpen={isModalOpen}\n//           onRequestClose={closeModal}\n//           style={{\n//             overlay: {\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n//               zIndex: 1000,\n//             },\n//             content: {\n//               position: \"absolute\",\n//               top: \"50%\",\n//               left: \"50%\",\n//               transform: \"translate(-50%, -50%)\",\n//               width: \"100%\",\n//               height:\"110%\",\n//               maxWidth: \"600px\",\n//               maxHeight: \"80%\",\n//               overflow: \"auto\",\n//               border: \"none\",\n//               borderRadius: \"8px\",\n//               outline: \"none\",\n//               padding: \"20px\",\n//             },\n//           }}\n//           contentLabel=\"Hotel Admin Profile Input Modal\"\n//           >\n//         {userRole === 'hotel_admin' && <IntroductionPage/ >}\n//         </Modal>\n\n//         <MypageInfo>\n//           <InfoItemBox>\n//             <InfoItem>\n//               <span>찜하기</span>\n//               <div>\n//                 <strong>{likeHotels.length}</strong>\n//                 <span>개</span>\n//               </div>\n//             </InfoItem>   \n//             <InfoItem>\n//               <span>결제하기</span>\n//               <div>\n//                 <strong>{userRole === 'user' ? userPayment.length : adminPayment.length}</strong>\n//                 <span>회</span>\n//               </div>\n//             </InfoItem>          \n//             <InfoItem>\n//               <span>할인</span>\n//               <div>\n//                 <strong>0</strong>\n//                 <span>개</span>\n//               </div>\n//             </InfoItem>\n\n//           </InfoItemBox>\n//           <InfoBox/>                \n//         </MypageInfo>\n\n//         <ActivitySelectBox>\n//           <h2>나의 활동</h2>\n//           <ActivitySelectItems>\n\n//             <ActivitySelectItem onClick={() => scrollTo('likedHotels')}>\n//               <div>\n//                 <HeartIcon/>\n//                 좋아한\n//               </div>\n//             </ActivitySelectItem>\n\n//             <ActivitySelectItem onClick={() => scrollTo('reservationHotels')}>\n//             <div>\n//             <CreditCardIcon />\n//               결제한\n//             </div>\n//             </ActivitySelectItem>\n\n//             {userRole === 'hotel_admin' && (\n//               <ActivitySelectItem onClick={() => scrollTo('hotelLists')}>\n//               <div>\n//                 <CommentIcon />\n//                 등록한\n//               </div>\n\n//             </ActivitySelectItem>\n//             )}\n\n//             <ActivitySelectItem onClick={() => scrollTo('hotelComments')}>\n//               <div>\n//                 <PencilIcon/>\n//                 작성한\n//               </div>\n//             </ActivitySelectItem>\n//           <ActivitySelectItem>\n//             <div>\n//             <PencilIcon/>\n//             <ChangePasswordForm />\n//             </div> \n//           </ActivitySelectItem>\n\n//           </ActivitySelectItems>\n//         </ActivitySelectBox>\n\n//         <ActivityContainer id=\"likedHotels\">\n//           <h2>관심 호텔</h2>\n//           <HotelCardContainer>\n//             {likeHotels.length > 0 ? (\n//               likeHotels.map((hotel) => <HotelCard key={hotel.hotel_id} hotel={hotel} />)\n//             ) : (\n//               <HotelDesc>관심 호텔을 추가해보세요</HotelDesc>\n//             )}\n//           </HotelCardContainer>\n//         </ActivityContainer>\n\n//         <ActivityContainer id=\"reservationHotels\">\n//           <h2>호텔 예약</h2>\n//           <HotelReservation/>\n//         </ActivityContainer>\n\n//         {myHotelList.length > 0 && (\n//           <ActivityContainer id=\"hotelLists\">\n//             <h2>호텔 목록</h2>\n//             <HotelCardContainer>\n//               {myHotelList.map((hotel) => (\n//                 <HotelCard\n//                   hotel={hotel}\n//                   showEditButton={userRole === 'hotel_admin'}\n//                   onEditButtonClick={handleEditButtonClick}\n//                 />\n//               ))}\n//             </HotelCardContainer>\n//           </ActivityContainer>\n//         )}\n\n//         <ActivityContainer id=\"hotelComments\">\n//           <h2>나의 후기</h2>\n//           {userComments && userComments.length > 0 ? (\n//             userComments.map((comment) => (\n//               <CommentCard key={comment.id} comment={comment} />\n//             ))\n//           ) : (\n//             <HotelDesc>아직 작성한 후기가 없습니다</HotelDesc>\n//           )}\n//         </ActivityContainer>\n\n//         <WithdrawalPart />\n//       </MypageLayout>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUserLikes } from \"../redux/slice/likeSlice\";\nimport HotelCard from '../components/hotel/HotelCard';\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchMyHotels } from \"../redux/hotelActions\";\nimport IntroductionPage from './IntroductionPage';\nimport HotelReservation from '../components/hotel/HotelReservation';\nimport { fetchUserComments } from '../redux/slice/commentSlice';\nimport Modal from 'react-modal';\nimport CommentCard from '../components/hotel/comment/CommentCard';\nimport { MypageLayout, HotelCardContainer, HotelDesc, ActivityContainer, overlayStyle, contentStyle } from \"../components/pagestyles/MyPageStyle\";\nimport MainHeader from '../components/shared/header/MainHeader';\nimport { IntroBtn } from '../components/pagestyles/IntroductionInputPageStyle';\nimport { HeaderContainer } from '../components/shared/header/HeaderStyle';\nimport WithdrawalPart from '../components/hotel/users/WithdrawalPart';\nimport MypageInfo from '../components/mypage/MypageInfo';\nimport ActivitySelect from '../components/mypage/ActivitySelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mypage() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [userRole, setUserRole] = useState(\"\");\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n  const userComments = useSelector(state => state.comment.comments['user']);\n  const myHotels = useSelector(state => state.hotels.myHotels);\n  const userPayment = useSelector(state => state.payment.userPayment) || [];\n  const adminPayment = useSelector(state => state.payment.adminPayment) || [];\n  const likes = useSelector(state => state.like.likes);\n  const myHotelList = Object.keys(myHotels).map(hotel_id => myHotels[hotel_id]);\n  const likeHotels = Object.keys(likes).map(hotel_id => likes[hotel_id]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    if (loggedInUser) {\n      const newUserRole = loggedInUser.userRole;\n      setUserRole(newUserRole);\n    }\n  }, [loggedInUser]);\n  useEffect(() => {\n    if (loggedInUser !== null && loggedInUser !== void 0 && loggedInUser.id) {\n      dispatch(fetchMyHotels(loggedInUser.id));\n      dispatch(fetchUserComments({\n        user_id: loggedInUser.id\n      }));\n      dispatch(fetchUserLikes(loggedInUser.id));\n    }\n  }, [loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id, dispatch]);\n  const handleEditButtonClick = hotel_id => {\n    navigate(`/editHotel/${hotel_id}`);\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(MypageLayout, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      bgColor: \"#f9f9f9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(HeaderContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 11\n      }, this), userRole === 'hotel_admin' && /*#__PURE__*/_jsxDEV(IntroBtn, {\n        onClick: openModal,\n        children: \"\\uC790\\uAE30\\uC18C\\uAC1C \\uB4F1\\uB85D\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onRequestClose: closeModal,\n      style: {\n        overlay: overlayStyle,\n        content: contentStyle\n      },\n      contentLabel: \"Hotel Admin Profile Input Modal\",\n      children: userRole === 'hotel_admin' && /*#__PURE__*/_jsxDEV(IntroductionPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MypageInfo, {\n      likeHotels: likeHotels,\n      userRole: userRole,\n      userPayment: userPayment,\n      adminPayment: adminPayment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ActivitySelect, {\n      userRole: userRole\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ActivityContainer, {\n      id: \"likedHotels\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uAD00\\uC2EC \\uD638\\uD154\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HotelCardContainer, {\n        children: likeHotels.length > 0 ? likeHotels.map(hotel => /*#__PURE__*/_jsxDEV(HotelCard, {\n          hotel: hotel\n        }, hotel.hotel_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 41\n        }, this)) : /*#__PURE__*/_jsxDEV(HotelDesc, {\n          children: \"\\uAD00\\uC2EC \\uD638\\uD154\\uC744 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ActivityContainer, {\n      id: \"reservationHotels\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD638\\uD154 \\uC608\\uC57D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(HotelReservation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 9\n    }, this), myHotelList.length > 0 && /*#__PURE__*/_jsxDEV(ActivityContainer, {\n      id: \"hotelLists\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD638\\uD154 \\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(HotelCardContainer, {\n        children: myHotelList.map(hotel => /*#__PURE__*/_jsxDEV(HotelCard, {\n          hotel: hotel,\n          showEditButton: userRole === 'hotel_admin',\n          onEditButtonClick: handleEditButtonClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ActivityContainer, {\n      id: \"hotelComments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB098\\uC758 \\uD6C4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }, this), userComments && userComments.length > 0 ? userComments.map(comment => /*#__PURE__*/_jsxDEV(CommentCard, {\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(HotelDesc, {\n        children: \"\\uC544\\uC9C1 \\uC791\\uC131\\uD55C \\uD6C4\\uAE30\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(WithdrawalPart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 7\n  }, this);\n}\n_s(Mypage, \"dv5SBziDnmTTY/SCWKbhfDTwLwY=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Mypage;\nvar _c;\n$RefreshReg$(_c, \"Mypage\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","fetchUserLikes","HotelCard","useNavigate","fetchMyHotels","IntroductionPage","HotelReservation","fetchUserComments","Modal","CommentCard","MypageLayout","HotelCardContainer","HotelDesc","ActivityContainer","overlayStyle","contentStyle","MainHeader","IntroBtn","HeaderContainer","WithdrawalPart","MypageInfo","ActivitySelect","jsxDEV","_jsxDEV","Mypage","_s","dispatch","navigate","userRole","setUserRole","loggedInUser","JSON","parse","localStorage","getItem","userComments","state","comment","comments","myHotels","hotels","userPayment","payment","adminPayment","likes","like","myHotelList","Object","keys","map","hotel_id","likeHotels","isModalOpen","setIsModalOpen","newUserRole","id","user_id","handleEditButtonClick","openModal","closeModal","children","bgColor","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onRequestClose","style","overlay","content","contentLabel","length","hotel","showEditButton","onEditButtonClick","_c","$RefreshReg$"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/Mypage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useSelector, useDispatch } from \"react-redux\";\n// import { fetchUserLikes } from \"../redux/slice/likeSlice\"; \n// import HotelCard from '../components/hotel/HotelCard';\n// import ChangePasswordForm from './ChangePasswordForm';\n// import { useNavigate } from \"react-router-dom\";\n// import { fetchMyHotels } from \"../redux/hotelActions\";\n// import IntroductionPage from './IntroductionPage';\n// import HotelReservation from '../components/hotel/HotelReservation';\n// import { fetchUserComments } from '../redux/slice/commentSlice';\n// import Modal from 'react-modal';\n// import CommentCard from '../components/hotel/comment/CommentCard';\n// import { MypageLayout,\n//         MypageInfo,\n//         InfoItem,\n//         InfoItemBox,\n//         InfoBox,\n//         ActivitySelectBox,\n//         ActivitySelectItems,\n//         ActivitySelectItem,\n//         HeartIcon,\n//         CreditCardIcon,\n//         CommentIcon,\n//         PencilIcon,\n//         ActivityContainer,\n//         HotelCardContainer,\n//         HotelDesc,\n//         } from \"../components/pagestyles/MyPageStyle\";\n// import MainHeader from '../components/shared/header/MainHeader';\n// import { IntroBtn } from '../components/pagestyles/IntroductionInputPageStyle';\n// import { HeaderContainer } from '../components/shared/header/HeaderStyle';\n// import WithdrawalPart from '../components/hotel/users/WithdrawalPart';\n\n// export default function Mypage() {\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n//   const [userRole, setUserRole] = useState(\"\");\n//   const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n//   const userComments = useSelector(state => state.comment.comments['user']); \n//   const myHotels = useSelector((state) => state.hotels.myHotels);\n//   const userPayment = useSelector((state) => state.payment.userPayment) || [];\n//   const adminPayment = useSelector((state) => state.payment.adminPayment) || [];\n//   const likes = useSelector((state) => state.like.likes);\n//   const myHotelList = Object.keys(myHotels).map((hotel_id) => myHotels[hotel_id]);\n//   const likeHotels = Object.keys(likes).map((hotel_id) => likes[hotel_id]);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   useEffect(() => {\n//     if (loggedInUser) {\n//       const newUserRole = loggedInUser.userRole;\n//       setUserRole(newUserRole);\n//     }\n//   }, [loggedInUser,]);\n  \n//   useEffect(() => {\n//     if (loggedInUser?.id) { \n//       dispatch(fetchMyHotels(loggedInUser.id));\n//       dispatch(fetchUserComments({user_id:loggedInUser.id}));\n//       dispatch(fetchUserLikes(loggedInUser.id));\n//     }\n//   }, [loggedInUser?.id, dispatch]);\n\n//   const handleEditButtonClick = (hotel_id) => {\n//     navigate(`/editHotel/${hotel_id}`);\n//   };\n\n//   const scrollTo = (id) => {\n//     const element = document.getElementById(id);\n//     element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n//   };\n\n//   const openModal = () => {\n//     setIsModalOpen(true);\n//   }\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   }\n  \n//     return (\n//       <MypageLayout>\n//         <MainHeader bgColor=\"#f9f9f9\"/>\n//         <HeaderContainer>\n//         <h1>마이페이지</h1>\n//         <IntroBtn onClick={openModal}>자기소개 등록하기</IntroBtn>\n//         </HeaderContainer>\n//         <Modal\n//           isOpen={isModalOpen}\n//           onRequestClose={closeModal}\n//           style={{\n//             overlay: {\n//               backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n//               zIndex: 1000,\n//             },\n//             content: {\n//               position: \"absolute\",\n//               top: \"50%\",\n//               left: \"50%\",\n//               transform: \"translate(-50%, -50%)\",\n//               width: \"100%\",\n//               height:\"110%\",\n//               maxWidth: \"600px\",\n//               maxHeight: \"80%\",\n//               overflow: \"auto\",\n//               border: \"none\",\n//               borderRadius: \"8px\",\n//               outline: \"none\",\n//               padding: \"20px\",\n//             },\n//           }}\n//           contentLabel=\"Hotel Admin Profile Input Modal\"\n//           >\n//         {userRole === 'hotel_admin' && <IntroductionPage/ >}\n//         </Modal>\n\n//         <MypageInfo>\n//           <InfoItemBox>\n//             <InfoItem>\n//               <span>찜하기</span>\n//               <div>\n//                 <strong>{likeHotels.length}</strong>\n//                 <span>개</span>\n//               </div>\n//             </InfoItem>   \n//             <InfoItem>\n//               <span>결제하기</span>\n//               <div>\n//                 <strong>{userRole === 'user' ? userPayment.length : adminPayment.length}</strong>\n//                 <span>회</span>\n//               </div>\n//             </InfoItem>          \n//             <InfoItem>\n//               <span>할인</span>\n//               <div>\n//                 <strong>0</strong>\n//                 <span>개</span>\n//               </div>\n//             </InfoItem>\n    \n//           </InfoItemBox>\n//           <InfoBox/>                \n//         </MypageInfo>\n\n//         <ActivitySelectBox>\n//           <h2>나의 활동</h2>\n//           <ActivitySelectItems>\n\n//             <ActivitySelectItem onClick={() => scrollTo('likedHotels')}>\n//               <div>\n//                 <HeartIcon/>\n//                 좋아한\n//               </div>\n//             </ActivitySelectItem>\n\n//             <ActivitySelectItem onClick={() => scrollTo('reservationHotels')}>\n//             <div>\n//             <CreditCardIcon />\n//               결제한\n//             </div>\n//             </ActivitySelectItem>\n\n//             {userRole === 'hotel_admin' && (\n//               <ActivitySelectItem onClick={() => scrollTo('hotelLists')}>\n//               <div>\n//                 <CommentIcon />\n//                 등록한\n//               </div>\n\n//             </ActivitySelectItem>\n//             )}\n\n//             <ActivitySelectItem onClick={() => scrollTo('hotelComments')}>\n//               <div>\n//                 <PencilIcon/>\n//                 작성한\n//               </div>\n//             </ActivitySelectItem>\n//           <ActivitySelectItem>\n//             <div>\n//             <PencilIcon/>\n//             <ChangePasswordForm />\n//             </div> \n//           </ActivitySelectItem>\n\n//           </ActivitySelectItems>\n//         </ActivitySelectBox>\n\n//         <ActivityContainer id=\"likedHotels\">\n//           <h2>관심 호텔</h2>\n//           <HotelCardContainer>\n//             {likeHotels.length > 0 ? (\n//               likeHotels.map((hotel) => <HotelCard key={hotel.hotel_id} hotel={hotel} />)\n//             ) : (\n//               <HotelDesc>관심 호텔을 추가해보세요</HotelDesc>\n//             )}\n//           </HotelCardContainer>\n//         </ActivityContainer>\n\n//         <ActivityContainer id=\"reservationHotels\">\n//           <h2>호텔 예약</h2>\n//           <HotelReservation/>\n//         </ActivityContainer>\n\n//         {myHotelList.length > 0 && (\n//           <ActivityContainer id=\"hotelLists\">\n//             <h2>호텔 목록</h2>\n//             <HotelCardContainer>\n//               {myHotelList.map((hotel) => (\n//                 <HotelCard\n//                   hotel={hotel}\n//                   showEditButton={userRole === 'hotel_admin'}\n//                   onEditButtonClick={handleEditButtonClick}\n//                 />\n//               ))}\n//             </HotelCardContainer>\n//           </ActivityContainer>\n//         )}\n\n//         <ActivityContainer id=\"hotelComments\">\n//           <h2>나의 후기</h2>\n//           {userComments && userComments.length > 0 ? (\n//             userComments.map((comment) => (\n//               <CommentCard key={comment.id} comment={comment} />\n//             ))\n//           ) : (\n//             <HotelDesc>아직 작성한 후기가 없습니다</HotelDesc>\n//           )}\n//         </ActivityContainer>\n\n//         <WithdrawalPart />\n//       </MypageLayout>\n//   );\n// }\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchUserLikes } from \"../redux/slice/likeSlice\"; \nimport HotelCard from '../components/hotel/HotelCard';\nimport { useNavigate } from \"react-router-dom\";\nimport { fetchMyHotels } from \"../redux/hotelActions\";\nimport IntroductionPage from './IntroductionPage';\nimport HotelReservation from '../components/hotel/HotelReservation';\nimport { fetchUserComments } from '../redux/slice/commentSlice';\nimport Modal from 'react-modal';\nimport CommentCard from '../components/hotel/comment/CommentCard';\nimport { MypageLayout,\n        HotelCardContainer,\n        HotelDesc,\n        ActivityContainer,\n        overlayStyle,\n        contentStyle \n        } from \"../components/pagestyles/MyPageStyle\";\nimport MainHeader from '../components/shared/header/MainHeader';\nimport { IntroBtn } from '../components/pagestyles/IntroductionInputPageStyle';\nimport { HeaderContainer } from '../components/shared/header/HeaderStyle';\nimport WithdrawalPart from '../components/hotel/users/WithdrawalPart';\nimport MypageInfo from '../components/mypage/MypageInfo';\nimport ActivitySelect from '../components/mypage/ActivitySelect';\n\nexport default function Mypage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [userRole, setUserRole] = useState(\"\");\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n  const userComments = useSelector(state => state.comment.comments['user']); \n  const myHotels = useSelector((state) => state.hotels.myHotels);\n  const userPayment = useSelector((state) => state.payment.userPayment) || [];\n  const adminPayment = useSelector((state) => state.payment.adminPayment) || [];\n  const likes = useSelector((state) => state.like.likes);\n  const myHotelList = Object.keys(myHotels).map((hotel_id) => myHotels[hotel_id]);\n  const likeHotels = Object.keys(likes).map((hotel_id) => likes[hotel_id]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    if (loggedInUser) {\n      const newUserRole = loggedInUser.userRole;\n      setUserRole(newUserRole);\n    }\n  }, [loggedInUser,]);\n  \n  useEffect(() => {\n    if (loggedInUser?.id) { \n      dispatch(fetchMyHotels(loggedInUser.id));\n      dispatch(fetchUserComments({user_id:loggedInUser.id}));\n      dispatch(fetchUserLikes(loggedInUser.id));\n    }\n  }, [loggedInUser?.id, dispatch]);\n\n  const handleEditButtonClick = (hotel_id) => {\n    navigate(`/editHotel/${hotel_id}`);\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  }\n  const closeModal = () => {\n    setIsModalOpen(false);\n  }\n  \n    return (\n      <MypageLayout>\n        <MainHeader bgColor=\"#f9f9f9\"/>\n        <HeaderContainer>\n          <h1>마이페이지</h1>\n          {userRole === 'hotel_admin' &&  <IntroBtn onClick={openModal}>자기소개 등록하기</IntroBtn>}\n        </HeaderContainer>\n\n        <Modal\n          isOpen={isModalOpen}\n          onRequestClose={closeModal}\n          style={{\n            overlay: overlayStyle,\n            content: contentStyle,\n          }}\n          contentLabel=\"Hotel Admin Profile Input Modal\"\n        >\n          {userRole === 'hotel_admin' && <IntroductionPage />}\n        </Modal>\n\n        <MypageInfo likeHotels={likeHotels} userRole={userRole} userPayment={userPayment} adminPayment={adminPayment}/>\n        <ActivitySelect userRole={userRole}/>\n\n        <ActivityContainer id=\"likedHotels\">\n          <h2>관심 호텔</h2>\n          <HotelCardContainer>\n            {likeHotels.length > 0 ? (\n              likeHotels.map((hotel) => <HotelCard key={hotel.hotel_id} hotel={hotel} />)\n            ) : (\n              <HotelDesc>관심 호텔을 추가해보세요</HotelDesc>\n            )}\n          </HotelCardContainer>\n        </ActivityContainer>\n\n        <ActivityContainer id=\"reservationHotels\">\n          <h2>호텔 예약</h2>\n          <HotelReservation/>\n        </ActivityContainer>\n\n        {myHotelList.length > 0 && (\n          <ActivityContainer id=\"hotelLists\">\n            <h2>호텔 목록</h2>\n            <HotelCardContainer>\n              {myHotelList.map((hotel) => (\n                <HotelCard\n                  hotel={hotel}\n                  showEditButton={userRole === 'hotel_admin'}\n                  onEditButtonClick={handleEditButtonClick}\n                />\n              ))}\n            </HotelCardContainer>\n          </ActivityContainer>\n        )}\n\n        <ActivityContainer id=\"hotelComments\">\n          <h2>나의 후기</h2>\n          {userComments && userComments.length > 0 ? (\n            userComments.map((comment) => (\n              <CommentCard key={comment.id} comment={comment} />\n            ))\n          ) : (\n            <HotelDesc>아직 작성한 후기가 없습니다</HotelDesc>\n          )}\n        </ActivityContainer>\n\n        <WithdrawalPart />\n      </MypageLayout>\n  );\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAKA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,0BAA0B;AACzD,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}