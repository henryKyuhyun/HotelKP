{"ast":null,"code":"var _jsxFileName = \"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/ChangePasswordForm.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ChangePWBtn, DivisionLine, ModalDiv, PStyled, StyledModal } from '../components/pagestyles/ChangePasswordFormStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\"); // 이 부분은 모달 팝업을 위한 설정입니다. 여기서 '#root'는 앱의 루트 요소의 ID입니다.\n\nexport default function ChangePasswordForm() {\n  _s();\n  const [oldPassword, setOldPassord] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmNewPassword) {\n      alert('새로운 비밀번호 일치하지 않습니다.');\n      return;\n    }\n    try {\n      const token = sessionStorage.getItem('accessToken');\n      const response = await axios.post(\"http://localhost:4000/api/change-password\", {\n        oldPassword,\n        newPassword\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        alert(response.data.message);\n      }\n    } catch (error) {\n      if (error.response.status === 401) {\n        alert(error.response.data.message);\n      } else {\n        alert('서버오류입니다!!!!!');\n      }\n    }\n    setModalIsOpen(false); // 비밀번호 변경이 완료되면 모달 팝업을 닫습니다.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ChangePWBtn, {\n      onClick: () => setModalIsOpen(true),\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), \" \", /*#__PURE__*/_jsxDEV(StyledModal, {\n      isOpen: modalIsOpen,\n      onRequestClose: () => setModalIsOpen(false),\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(PStyled, {\n          children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC \\uBCC0\\uACBD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"oldPassword\",\n          children: \"\\uD604\\uC7AC \\uD328\\uC2A4\\uC6CC\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"oldPassword\",\n          value: oldPassword,\n          placeholder: \"\\uD604\\uC7AC \\uD328\\uC2A4\\uC6CC\\uB4DC\",\n          onChange: e => setOldPassord(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DivisionLine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newPassword\",\n          children: \"\\uBCC0\\uACBD \\uD328\\uC2A4\\uC6CC\\uB4DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"newPassword\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmNewPassword\",\n          children: \"\\uD328\\uC2A4\\uC6CC\\uB4DC \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmNewPassword\",\n          value: confirmNewPassword,\n          onChange: e => setConfirmNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uBCC0\\uACBD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n}\n_s(ChangePasswordForm, \"N/ydV1h66AGp4FFT3TKqlF+MGPA=\");\n_c = ChangePasswordForm;\n;\nvar _c;\n$RefreshReg$(_c, \"ChangePasswordForm\");","map":{"version":3,"names":["axios","React","useState","Modal","ChangePWBtn","DivisionLine","ModalDiv","PStyled","StyledModal","jsxDEV","_jsxDEV","setAppElement","ChangePasswordForm","_s","oldPassword","setOldPassord","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","modalIsOpen","setModalIsOpen","handleSubmit","e","preventDefault","alert","token","sessionStorage","getItem","response","post","headers","Authorization","status","data","message","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onRequestClose","onSubmit","htmlFor","type","id","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/ChangePasswordForm.jsx"],"sourcesContent":["import axios from 'axios';\nimport React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport { ChangePWBtn, DivisionLine, ModalDiv, PStyled, StyledModal } from '../components/pagestyles/ChangePasswordFormStyle';\n\nModal.setAppElement(\"#root\"); // 이 부분은 모달 팝업을 위한 설정입니다. 여기서 '#root'는 앱의 루트 요소의 ID입니다.\n\nexport default function ChangePasswordForm () {\n\n  const [oldPassword, setOldPassord] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n\n  const handleSubmit = async(e)=>{\n    e.preventDefault();\n\n    if(newPassword !== confirmNewPassword){\n      alert('새로운 비밀번호 일치하지 않습니다.');\n      return;\n    }\n    try{\n      const token = sessionStorage.getItem('accessToken');\n\n      const response = await axios.post(\"http://localhost:4000/api/change-password\", {\n        oldPassword,\n        newPassword\n      },\n      {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n\n      if(response.status===200){\n        alert(response.data.message);\n      }\n    }catch(error){\n      if(error.response.status ===401){\n        alert(error.response.data.message);\n      }else{\n        alert('서버오류입니다!!!!!')\n      }\n    }\n    setModalIsOpen(false); // 비밀번호 변경이 완료되면 모달 팝업을 닫습니다.\n\n  }\n\nreturn (\n  <div>\n    <ChangePWBtn onClick={() => setModalIsOpen(true)}>비밀번호 변경</ChangePWBtn> {/* 이 버튼을 클릭하면 모달 팝업이 열립니다. */}\n    <StyledModal isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)} > {/* 모달 팝업의 열림 상태와 닫기 요청을 처리합니다. */}\n      <form onSubmit={handleSubmit}>\n        <PStyled>패스워드 변경</PStyled>\n        <label htmlFor=\"oldPassword\">현재 패스워드</label>\n        <input type=\"password\" id='oldPassword' value={oldPassword}  placeholder='현재 패스워드' onChange={(e) =>setOldPassord(e.target.value)} />\n\n        <DivisionLine></DivisionLine>\n        <label htmlFor=\"newPassword\">변경 패스워드</label>\n        <input type=\"password\" id='newPassword' value={newPassword} onChange={(e)=> setNewPassword(e.target.value)} />\n        \n        <label htmlFor=\"confirmNewPassword\">패스워드 확인</label>\n        <input type=\"password\" id=\"confirmNewPassword\" value={confirmNewPassword} onChange={(e) => setConfirmNewPassword(e.target.value)} />\n        <button type=\"submit\">비밀번호 변경</button>\n      </form>\n    </StyledModal>\n  </div>\n);\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}