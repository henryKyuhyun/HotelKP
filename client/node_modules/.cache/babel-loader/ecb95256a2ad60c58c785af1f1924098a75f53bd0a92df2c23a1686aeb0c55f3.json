{"ast":null,"code":"var _jsxFileName = \"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from '../../src/components/shared/header/Header';\nimport Footer from '../components/shared/footer/Footer';\nimport styled from \"styled-components\";\nimport { MainContiner, MainLayout } from '../components/pagestyles/MainPageStyles';\nimport MainCategory from '../components/main/MainCategory';\nimport MainNews from '../components/main/MainNews';\nimport Chat from '../components/chat/Chat';\nimport Banner from '../components/shared/banner/Banner';\nimport axios from 'axios';\nimport HotelCard from '../components/hotel/HotelCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainPage() {\n  _s();\n  const [hotelList, setHotelList] = useState([]);\n  const [isChatOpen, setIsChatOpen] = useState(false); // 채팅 창의 상태를 관리하는 새로운 상태\n\n  useEffect(() => {\n    axios.get('/api/hotelList').then(response => {\n      console.log(response.data, \"반응값보자\");\n      setHotelList(response.data);\n    }).catch(error => {\n      console.error('There was an error', error);\n      alert('데이터를 불러오는 데 실패하였습니다. 잠시 후 다시 시도해주세요.'); // 사용자에게 알림\n    });\n  }, []);\n  const handleChatOpen = () => setIsChatOpen(true); // 채팅 창을 열어주는 함수\n  const handleChatClose = () => setIsChatOpen(false); // 채팅 창을 닫아주는 함수\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: [/*#__PURE__*/_jsxDEV(MainContiner, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Banner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MainCategory, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MainNews, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleChatOpen,\n        children: \"\\uCC44\\uD305\\uCC3D \\uC5F4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), \"  // '\\uCC44\\uD305\\uCC3D \\uC5F4\\uAE30' \\uBC84\\uD2BC\", isChatOpen &&\n      /*#__PURE__*/\n      // 채팅 창의 상태에 따라 Chat 컴포넌트를 조건부 렌더링\n      _jsxDEV(Chat, {\n        handleChatClose: handleChatClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this) // Chat 컴포넌트에 채팅 창을 닫는 함수를 prop으로 전달\n      , /*#__PURE__*/_jsxDEV(\"div\", {\n        children: hotelList.map((hotel, index) => /*#__PURE__*/_jsxDEV(HotelCard, {\n          hotel: hotel\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(MainPage, \"+EyRK+FdwkwNySFhS10ttu1SV10=\");\n_c = MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Header","Footer","styled","MainContiner","MainLayout","MainCategory","MainNews","Chat","Banner","axios","HotelCard","jsxDEV","_jsxDEV","MainPage","_s","hotelList","setHotelList","isChatOpen","setIsChatOpen","get","then","response","console","log","data","catch","error","alert","handleChatOpen","handleChatClose","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","hotel","index","_c","$RefreshReg$"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/MainPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from '../../src/components/shared/header/Header';\nimport Footer from '../components/shared/footer/Footer';\nimport styled from \"styled-components\";\nimport { MainContiner, MainLayout } from '../components/pagestyles/MainPageStyles';\nimport MainCategory from '../components/main/MainCategory';\nimport MainNews from '../components/main/MainNews';\nimport Chat from '../components/chat/Chat';\nimport Banner from '../components/shared/banner/Banner';\nimport axios from 'axios';\nimport HotelCard from '../components/hotel/HotelCard';\n\n\nexport default function MainPage() {\n\n    const [hotelList, setHotelList] = useState([]);\n    const [isChatOpen, setIsChatOpen] = useState(false);  // 채팅 창의 상태를 관리하는 새로운 상태\n\n    useEffect(() => {\n        axios.get('/api/hotelList')\n            .then(response => {\n                console.log(response.data,\"반응값보자\");\n                setHotelList(response.data);\n            })\n            .catch(error => {\n                console.error('There was an error', error);\n                alert('데이터를 불러오는 데 실패하였습니다. 잠시 후 다시 시도해주세요.');  // 사용자에게 알림\n            });\n    },[])\n    \n    const handleChatOpen = () => setIsChatOpen(true);  // 채팅 창을 열어주는 함수\n    const handleChatClose = () => setIsChatOpen(false);  // 채팅 창을 닫아주는 함수\n\n    return (\n        <MainLayout>\n            <MainContiner>\n                <Header/>\n                <div>\n                <Banner/>\n                </div>\n                <MainCategory />\n                {/* <Sidebar/> */}\n                <MainNews />\n            </MainContiner>\n\n            <div>\n            \n            <button onClick={handleChatOpen}>채팅창 열기</button>  // '채팅창 열기' 버튼\n                {isChatOpen && (  // 채팅 창의 상태에 따라 Chat 컴포넌트를 조건부 렌더링\n                    <Chat handleChatClose={handleChatClose} />  // Chat 컴포넌트에 채팅 창을 닫는 함수를 prop으로 전달\n                )}\n                \n                {/* <Chat/> */}\n                <div>\n                    {hotelList.map((hotel, index) => (\n                    <HotelCard key={index} hotel={hotel} />\n                    ))}\n                </div>\n\n                <Footer/>\n            </div>\n        </MainLayout>\n    );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}