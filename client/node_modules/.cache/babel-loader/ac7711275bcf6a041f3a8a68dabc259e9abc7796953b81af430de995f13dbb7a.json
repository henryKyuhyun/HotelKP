{"ast":null,"code":"var _jsxFileName = \"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelDetailPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useParams } from 'react-router-dom';\n// import Like from '../components/shared/like/Like';\n// import HotelPayment from '../components/hotel/HotelPayment';\n// import {HotelLayout,HotelContiner,HotelHeader,HotelPrice,HotelSubInfo,HotelInfo,HotelCommentInfo,Line,} from '../components/pagestyles/HotelDetailStyle'\n// import CommentContainer from '../components/hotel/comment/CommentContainer';\n// import { FaStar } from 'react-icons/fa';\n// import { BsPersonFill } from 'react-icons/bs';\n// import Map from '../components/map/Map';\n\n// export default function HotelDetailPage() {\n\n//   const {hotelId} = useParams();\n//   const [hotel,setHotel] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [mainImageIndex, setMainImageIndex] = useState(0);\n//   const [isShowMore, setIsShowMore] = useState(false);\n\n//   useEffect(() =>{\n//     fetchHotelDetail();\n//   },[]);\n\n//   const fetchHotelDetail = async() =>{\n//     try{\n//       const response = await axios.get(`/api/hotel/${hotelId}`);\n//       console.log(\"API response:\", response); \n//       setHotel(response.data);\n//     }catch(error){\n//       console.error(`Error fetching hotel detail : ${error}`);\n//       console.error(`Error response: ${error.response}`); \n//       setError('Faild to load hotel details');\n//     }\n//   };\n\n//   const processImages = (imagePath) => {\n//     if (imagePath) {\n//         if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n//             const parsedImages = JSON.parse(imagePath);\n//             return parsedImages.map((image) => {\n//                 // \"hotelImage/\" 문자열 뒤의 부분만 반환\n//                 const splitByWebPath = image.split(\"hotelImage/\");\n//                 if (splitByWebPath[1]) {\n//                     return splitByWebPath[1];\n//                 }\n\n//                 // 파일 시스템 경로에서 마지막 부분만 반환\n//                 const splitByFileSystemPath = image.split(\"\\\\\");\n//                 return splitByFileSystemPath[splitByFileSystemPath.length - 1];\n//             });\n//         } else {\n//              // 이 부분은 필요에 따라 유사하게 수정하세요.\n//             return [imagePath.split(\"hotelImage/\")[1]];\n//         }\n//     }\n//     return [];\n// };\n\n// // 대표 이미지 변경 함수\n//     const changeMainImage = (index) => {\n//       setMainImageIndex(index);\n//     };\n\n//   if(!hotel){\n//     return <h3>Loading</h3>\n//   }\n\n//   const imagePaths = processImages(hotel.hotelImages);\n\n//   return (\n//     <HotelLayout>\n//       <img\n//         src={`/hotelImage/${imagePaths[mainImageIndex]}`}\n//         alt={hotel.hotelName}\n//         style={{ width: \"100%\", height: \"auto\" }} \n//       />\n//       <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n//         {imagePaths.map((imagePath, index) => (\n//           <img\n//             key={index}\n//             src={`/hotelImage/${imagePath}`}\n//             alt={`${hotel.hotelName}-${index}`}\n//             onClick={() => changeMainImage(index)}\n//             style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n//           />\n//         ))}\n//       </div>\n\n//       <HotelContiner>\n//         <HotelHeader>\n//           <h1>{hotel.hotelName}</h1>\n//           <div>\n//             <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n//               {\n//                 (hotel.average_score === null ? 0 : hotel.average_score)\n//               }\n//             <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n//             <span>{hotel.user_id}</span>\n//             <HotelPrice>₩{hotel.price} /박</HotelPrice>\n//             <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n//           </div>\n//         </HotelHeader>\n\n//         <HotelSubInfo>\n//           <span>최대인원 {hotel.maxGuests}명</span>\n//           <span>{hotel.hotelSubInfo}</span>\n//         </HotelSubInfo>\n\n//         {/* <p>{hotel.hotelregion}</p> */}\n//         <HotelInfo>\n//           <h2>호텔 소개</h2>\n//           {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n//           {hotel.hotelInfo.length > 300 && (\n//           <button onClick={() => setIsShowMore(!isShowMore)}>\n//             {isShowMore ? \"접기\" : \"...더보기>\"}\n//           </button>\n//         )}\n//         </HotelInfo>\n\n//         {error && <p>{error}</p>}\n\n//         <HotelCommentInfo>\n//           <CommentContainer hotel_id={hotelId}/>\n//         </HotelCommentInfo>\n\n//         <Line />\n\n//         <HotelPayment hotel={hotel}/>\n\n//         <Map address={hotel.hotelAddress}/>\n\n//         <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n\n//       </HotelContiner>\n//     </HotelLayout>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport Like from '../components/shared/like/Like';\nimport HotelPayment from '../components/hotel/HotelPayment';\nimport { HotelLayout, HotelContiner, HotelHeader, HotelPrice, HotelSubInfo, HotelInfo, HotelCommentInfo, Line } from '../components/pagestyles/HotelDetailStyle';\nimport CommentContainer from '../components/hotel/comment/CommentContainer';\nimport { FaStar } from 'react-icons/fa';\nimport { BsPersonFill } from 'react-icons/bs';\nimport Map from '../components/map/Map';\nimport AWS from 'aws-adk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HotelDetailPage() {\n  _s();\n  const {\n    hotelId\n  } = useParams();\n  const [hotel, setHotel] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [mainImageIndex, setMainImageIndex] = useState(0);\n  const [isShowMore, setIsShowMore] = useState(false);\n  AWS.config.update({\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n  });\n  const s3 = new AWS.S3();\n  useEffect(() => {\n    fetchHotelDetail();\n  }, []);\n  const fetchHotelDetail = async () => {\n    try {\n      const response = await axios.get(`/api/hotel/${hotelId}`);\n      console.log(\"API response:\", response);\n      setHotel(response.data);\n    } catch (error) {\n      console.error(`Error fetching hotel detail : ${error}`);\n      console.error(`Error response: ${error.response}`);\n      setError('Faild to load hotel details');\n    }\n  };\n  const processImages = imagePath => {\n    if (imagePath) {\n      if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n        const parsedImages = JSON.parse(imagePath);\n        return parsedImages.map(image => {\n          return `https://your-bucket-name.s3.${AWS.config.region}.amazonaws.com/${image}`;\n        });\n      } else {\n        // 이 부분은 필요에 따라 유사하게 수정하세요.\n        return [`https://your-bucket-name.s3.${AWS.config.region}.amazonaws.com/${imagePath}`];\n      }\n    }\n    return [];\n  };\n\n  // 대표 이미지 변경 함수\n  const changeMainImage = index => {\n    setMainImageIndex(index);\n  };\n  if (!hotel) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 12\n    }, this);\n  }\n  const imagePaths = processImages(hotel.hotelImages);\n  return /*#__PURE__*/_jsxDEV(HotelLayout, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: imagePaths[mainImageIndex],\n      alt: hotel.hotelName,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: imagePaths.map((imagePath, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `/hotelImage/${imagePath}`,\n        alt: `${hotel.hotelName}-${index}`,\n        onClick: () => changeMainImage(index),\n        style: {\n          cursor: \"pointer\",\n          width: \"100px\",\n          height: \"100px\",\n          marginRight: \"10px\",\n          marginBottom: \"10px\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HotelContiner, {\n      children: [/*#__PURE__*/_jsxDEV(HotelHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hotel.hotelName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(FaStar, {\n            color: \"ffd700\",\n            fontSize: \"18px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), hotel.average_score === null ? 0 : hotel.average_score, /*#__PURE__*/_jsxDEV(BsPersonFill, {\n            style: {\n              marginLeft: \"10px\"\n            },\n            fontSize: \"18px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: hotel.user_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HotelPrice, {\n            children: [\"\\u20A9\", hotel.price, \" /\\uBC15\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Like, {\n            hotel_id: hotelId,\n            hotel_owner_id: hotel.user_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelSubInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uCD5C\\uB300\\uC778\\uC6D0 \", hotel.maxGuests, \"\\uBA85\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: hotel.hotelSubInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD638\\uD154 \\uC18C\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300), hotel.hotelInfo.length > 300 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsShowMore(!isShowMore),\n          children: isShowMore ? \"접기\" : \"...더보기>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(HotelCommentInfo, {\n        children: /*#__PURE__*/_jsxDEV(CommentContainer, {\n          hotel_id: hotelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelPayment, {\n        hotel: hotel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        address: hotel.hotelAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/adminProfile/${hotel.user_id}`,\n        children: \"See the profile of this hotel's admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n_s(HotelDetailPage, \"g8XnvUm4AWFHZ4KGAJTr9wGKjug=\", false, function () {\n  return [useParams];\n});\n_c = HotelDetailPage;\nvar _c;\n$RefreshReg$(_c, \"HotelDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useParams","Like","HotelPayment","HotelLayout","HotelContiner","HotelHeader","HotelPrice","HotelSubInfo","HotelInfo","HotelCommentInfo","Line","CommentContainer","FaStar","BsPersonFill","Map","AWS","jsxDEV","_jsxDEV","HotelDetailPage","_s","hotelId","hotel","setHotel","error","setError","mainImageIndex","setMainImageIndex","isShowMore","setIsShowMore","config","update","region","process","env","AWS_REGION","accessKeyId","AWS_ACCESS_KEY_ID","secretAccessKey","AWS_SECRET_ACCESS_KEY","s3","S3","fetchHotelDetail","response","get","console","log","data","processImages","imagePath","trim","charAt","parsedImages","JSON","parse","map","image","changeMainImage","index","children","fileName","_jsxFileName","lineNumber","columnNumber","imagePaths","hotelImages","src","alt","hotelName","style","width","height","display","flexWrap","onClick","cursor","marginRight","marginBottom","color","fontSize","average_score","marginLeft","user_id","price","hotel_id","hotel_owner_id","maxGuests","hotelSubInfo","hotelInfo","slice","length","address","hotelAddress","to","_c","$RefreshReg$"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelDetailPage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useParams } from 'react-router-dom';\n// import Like from '../components/shared/like/Like';\n// import HotelPayment from '../components/hotel/HotelPayment';\n// import {HotelLayout,HotelContiner,HotelHeader,HotelPrice,HotelSubInfo,HotelInfo,HotelCommentInfo,Line,} from '../components/pagestyles/HotelDetailStyle'\n// import CommentContainer from '../components/hotel/comment/CommentContainer';\n// import { FaStar } from 'react-icons/fa';\n// import { BsPersonFill } from 'react-icons/bs';\n// import Map from '../components/map/Map';\n\n// export default function HotelDetailPage() {\n\n//   const {hotelId} = useParams();\n//   const [hotel,setHotel] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [mainImageIndex, setMainImageIndex] = useState(0);\n//   const [isShowMore, setIsShowMore] = useState(false);\n\n\n//   useEffect(() =>{\n//     fetchHotelDetail();\n//   },[]);\n\n//   const fetchHotelDetail = async() =>{\n//     try{\n//       const response = await axios.get(`/api/hotel/${hotelId}`);\n//       console.log(\"API response:\", response); \n//       setHotel(response.data);\n//     }catch(error){\n//       console.error(`Error fetching hotel detail : ${error}`);\n//       console.error(`Error response: ${error.response}`); \n//       setError('Faild to load hotel details');\n//     }\n//   };\n    \n//   const processImages = (imagePath) => {\n//     if (imagePath) {\n//         if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n//             const parsedImages = JSON.parse(imagePath);\n//             return parsedImages.map((image) => {\n//                 // \"hotelImage/\" 문자열 뒤의 부분만 반환\n//                 const splitByWebPath = image.split(\"hotelImage/\");\n//                 if (splitByWebPath[1]) {\n//                     return splitByWebPath[1];\n//                 }\n                \n//                 // 파일 시스템 경로에서 마지막 부분만 반환\n//                 const splitByFileSystemPath = image.split(\"\\\\\");\n//                 return splitByFileSystemPath[splitByFileSystemPath.length - 1];\n//             });\n//         } else {\n//              // 이 부분은 필요에 따라 유사하게 수정하세요.\n//             return [imagePath.split(\"hotelImage/\")[1]];\n//         }\n//     }\n//     return [];\n// };\n\n// // 대표 이미지 변경 함수\n//     const changeMainImage = (index) => {\n//       setMainImageIndex(index);\n//     };\n\n    \n//   if(!hotel){\n//     return <h3>Loading</h3>\n//   }\n\n//   const imagePaths = processImages(hotel.hotelImages);\n\n//   return (\n//     <HotelLayout>\n//       <img\n//         src={`/hotelImage/${imagePaths[mainImageIndex]}`}\n//         alt={hotel.hotelName}\n//         style={{ width: \"100%\", height: \"auto\" }} \n//       />\n//       <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n//         {imagePaths.map((imagePath, index) => (\n//           <img\n//             key={index}\n//             src={`/hotelImage/${imagePath}`}\n//             alt={`${hotel.hotelName}-${index}`}\n//             onClick={() => changeMainImage(index)}\n//             style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n//           />\n//         ))}\n//       </div>\n\n//       <HotelContiner>\n//         <HotelHeader>\n//           <h1>{hotel.hotelName}</h1>\n//           <div>\n//             <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n//               {\n//                 (hotel.average_score === null ? 0 : hotel.average_score)\n//               }\n//             <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n//             <span>{hotel.user_id}</span>\n//             <HotelPrice>₩{hotel.price} /박</HotelPrice>\n//             <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n//           </div>\n//         </HotelHeader>\n\n//         <HotelSubInfo>\n//           <span>최대인원 {hotel.maxGuests}명</span>\n//           <span>{hotel.hotelSubInfo}</span>\n//         </HotelSubInfo>\n\n//         {/* <p>{hotel.hotelregion}</p> */}\n//         <HotelInfo>\n//           <h2>호텔 소개</h2>\n//           {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n//           {hotel.hotelInfo.length > 300 && (\n//           <button onClick={() => setIsShowMore(!isShowMore)}>\n//             {isShowMore ? \"접기\" : \"...더보기>\"}\n//           </button>\n//         )}\n//         </HotelInfo>\n\n//         {error && <p>{error}</p>}\n        \n//         <HotelCommentInfo>\n//           <CommentContainer hotel_id={hotelId}/>\n//         </HotelCommentInfo>\n\n//         <Line />\n\n//         <HotelPayment hotel={hotel}/>\n\n//         <Map address={hotel.hotelAddress}/>\n\n\n//         <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n\n//       </HotelContiner>\n//     </HotelLayout>\n//   );\n// }\n\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams } from 'react-router-dom';\nimport Like from '../components/shared/like/Like';\nimport HotelPayment from '../components/hotel/HotelPayment';\nimport {HotelLayout,HotelContiner,HotelHeader,HotelPrice,HotelSubInfo,HotelInfo,HotelCommentInfo,Line,} from '../components/pagestyles/HotelDetailStyle'\nimport CommentContainer from '../components/hotel/comment/CommentContainer';\nimport { FaStar } from 'react-icons/fa';\nimport { BsPersonFill } from 'react-icons/bs';\nimport Map from '../components/map/Map';\nimport AWS from 'aws-adk';\n\nexport default function HotelDetailPage() {\n\n  const {hotelId} = useParams();\n  const [hotel,setHotel] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [mainImageIndex, setMainImageIndex] = useState(0);\n  const [isShowMore, setIsShowMore] = useState(false);\n\n  AWS.config.update({\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n  })\n  const s3 = new AWS.S3();\n\n  useEffect(() =>{\n    fetchHotelDetail();\n  },[]);\n\n  const fetchHotelDetail = async() =>{\n    try{\n      const response = await axios.get(`/api/hotel/${hotelId}`);\n      console.log(\"API response:\", response); \n      setHotel(response.data);\n    }catch(error){\n      console.error(`Error fetching hotel detail : ${error}`);\n      console.error(`Error response: ${error.response}`); \n      setError('Faild to load hotel details');\n    }\n  };\n    \n  const processImages = (imagePath) => {\n    if (imagePath) {\n        if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n          \n            const parsedImages = JSON.parse(imagePath);\n            return parsedImages.map((image) => {\n              return `https://your-bucket-name.s3.${AWS.config.region}.amazonaws.com/${image}`;\n            });\n        } else {\n             // 이 부분은 필요에 따라 유사하게 수정하세요.\n            return [`https://your-bucket-name.s3.${AWS.config.region}.amazonaws.com/${imagePath}`];\n            }\n    }\n    return [];\n};\n\n// 대표 이미지 변경 함수\n    const changeMainImage = (index) => {\n      setMainImageIndex(index);\n    };\n\n    \n  if(!hotel){\n    return <h3>Loading</h3>\n  }\n\n  const imagePaths = processImages(hotel.hotelImages);\n\n  return (\n    <HotelLayout>\n      <img\n      src={imagePaths[mainImageIndex]}\n      alt={hotel.hotelName}\n        style={{ width: \"100%\", height: \"auto\" }} \n      />\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n        {imagePaths.map((imagePath, index) => (\n          <img\n            key={index}\n            src={`/hotelImage/${imagePath}`}\n            alt={`${hotel.hotelName}-${index}`}\n            onClick={() => changeMainImage(index)}\n            style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n          />\n        ))}\n      </div>\n\n      <HotelContiner>\n        <HotelHeader>\n          <h1>{hotel.hotelName}</h1>\n          <div>\n            <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n              {\n                (hotel.average_score === null ? 0 : hotel.average_score)\n              }\n            <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n            <span>{hotel.user_id}</span>\n            <HotelPrice>₩{hotel.price} /박</HotelPrice>\n            <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n          </div>\n        </HotelHeader>\n        <HotelSubInfo>\n          <span>최대인원 {hotel.maxGuests}명</span>\n          <span>{hotel.hotelSubInfo}</span>\n        </HotelSubInfo>\n\n        {/* <p>{hotel.hotelregion}</p> */}\n        <HotelInfo>\n          <h2>호텔 소개</h2>\n          {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n          {hotel.hotelInfo.length > 300 && (\n          <button onClick={() => setIsShowMore(!isShowMore)}>\n            {isShowMore ? \"접기\" : \"...더보기>\"}\n          </button>\n        )}\n        </HotelInfo>\n\n        {error && <p>{error}</p>}\n      \n        <HotelCommentInfo>\n          <CommentContainer hotel_id={hotelId}/>\n        </HotelCommentInfo>\n        <Line />\n        <HotelPayment hotel={hotel}/>\n        <Map address={hotel.hotelAddress}/>\n        <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n      </HotelContiner>\n    </HotelLayout>\n  );\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAGA;;AAEA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAAQC,WAAW,EAACC,aAAa,EAACC,WAAW,EAACC,UAAU,EAACC,YAAY,EAACC,SAAS,EAACC,gBAAgB,EAACC,IAAI,QAAQ,2CAA2C;AACxJ,OAAOC,gBAAgB,MAAM,8CAA8C;AAC3E,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,GAAG,MAAM,uBAAuB;AACvC,OAAOC,GAAG,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAExC,MAAM;IAACC;EAAO,CAAC,GAAGpB,SAAS,CAAC,CAAC;EAC7B,MAAM,CAACqB,KAAK,EAACC,QAAQ,CAAC,GAAGzB,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}