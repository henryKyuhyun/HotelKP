{"ast":null,"code":"var _jsxFileName = \"/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelDetailPage.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useParams } from 'react-router-dom';\n// import Like from '../components/shared/like/Like';\n// import HotelPayment from '../components/hotel/HotelPayment';\n// import {HotelLayout,HotelContiner,HotelHeader,HotelPrice,HotelSubInfo,HotelInfo,HotelCommentInfo,Line,} from '../components/pagestyles/HotelDetailStyle'\n// import CommentContainer from '../components/hotel/comment/CommentContainer';\n// import { FaStar } from 'react-icons/fa';\n// import { BsPersonFill } from 'react-icons/bs';\n// import Map from '../components/map/Map';\n// import AWS from 'aws-sdk';\n\n// export default function HotelDetailPage() {\n\n//   const {hotelId} = useParams();\n//   const [hotel,setHotel] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [mainImageIndex, setMainImageIndex] = useState(0);\n//   const [isShowMore, setIsShowMore] = useState(false);\n\n//   AWS.config.update({\n//     region: process.env.AWS_REGION,\n//     accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n//     secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n//   })\n//   const s3 = new AWS.S3();\n\n//   useEffect(() =>{\n//     fetchHotelDetail();\n//   },[]);\n\n//   const fetchHotelDetail = async() =>{\n//     try{\n//       const response = await axios.get(`/api/hotel/${hotelId}`);\n//       console.log(\"API response:\", response); \n//       setHotel(response.data);\n//     }catch(error){\n//       console.error(`Error fetching hotel detail : ${error}`);\n//       console.error(`Error response: ${error.response}`); \n//       setError('Faild to load hotel details');\n//     }\n//   };\n\n//   const processImages = (imagePath) => {\n//     if (imagePath) {\n//       if (typeof imagePath === 'string' && imagePath.trim().charAt(0) === '[') {\n//         const parsedImages = JSON.parse(imagePath);\n//         if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n//           // return parsedImages.map((image) => image.replace('hotelImage/', '')); 이부분은 local 에서 이미지를 불러올때 필요한거\n//           return parsedImages;\n//         }\n//       } else {\n//         console.log(\"imagePath!!!\",imagePath);\n\n//         return [imagePath];\n//       }\n//     }\n//     return [];\n//   };\n\n// // 대표 이미지 변경 함수\n//     const changeMainImage = (index) => {\n//       setMainImageIndex(index);\n//     };\n\n//   if(!hotel){\n//     return <h3>Loading</h3>\n//   }\n\n//   const imagePaths = processImages(hotel.hotelImages);\n\n//   return (\n//     <HotelLayout>\n//       <img\n//       src={imagePaths[mainImageIndex]}\n//       alt={hotel.hotelName}\n//       style={{ width: \"100%\", height: \"auto\" }} \n//       />\n//       <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n//         {imagePaths.map((imagePath, index) => (\n//           <img\n//             key={index}\n//             src={imagePath} // 변경된 부분\n//             alt={`${hotel.hotelName}-${index}`}\n//             onClick={() => changeMainImage(index)}\n//             style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n//             />\n//         ))}\n//       </div>\n\n//       <HotelContiner>\n//         <HotelHeader>\n//           <h1>{hotel.hotelName}</h1>\n//           <div>\n//             <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n//               {\n//                 (hotel.average_score === null ? 0 : hotel.average_score)\n//               }\n//             <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n//             <span>{hotel.user_id}</span>\n//             <HotelPrice>₩{hotel.price} /박</HotelPrice>\n//             <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n//           </div>\n//         </HotelHeader>\n//         <HotelSubInfo>\n//           <span>최대인원 {hotel.maxGuests}명</span>\n//           <span>{hotel.hotelSubInfo}</span>\n//         </HotelSubInfo>\n\n//         {/* <p>{hotel.hotelregion}</p> */}\n//         <HotelInfo>\n//           <h2>호텔 소개</h2>\n//           {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n//           {hotel.hotelInfo.length > 300 && (\n//           <button onClick={() => setIsShowMore(!isShowMore)}>\n//             {isShowMore ? \"접기\" : \"...더보기>\"}\n//           </button>\n//         )}\n//         </HotelInfo>\n\n//         {error && <p>{error}</p>}\n\n//         <HotelCommentInfo>\n//           <CommentContainer hotel_id={hotelId}/>\n//         </HotelCommentInfo>\n//         <Line />\n//         <HotelPayment hotel={hotel}/>\n//         <Map address={hotel.hotelAddress}/>\n//         <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n//       </HotelContiner>\n//     </HotelLayout>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport Like from '../components/shared/like/Like';\nimport HotelPayment from '../components/hotel/HotelPayment';\nimport { HotelLayout, HotelContiner, HotelHeader, HotelPrice, HotelSubInfo, HotelInfo, HotelCommentInfo, Line, CancelButton, HeaderLeft, HeaderRight } from '../components/pagestyles/HotelDetailStyle';\nimport CommentContainer from '../components/hotel/comment/CommentContainer';\nimport { FaStar } from 'react-icons/fa';\nimport { BsPersonFill } from 'react-icons/bs';\nimport Map from '../components/map/Map';\nimport { useDispatch } from 'react-redux';\nimport { deleteHotel } from '../redux/hotelActions';\nimport MainHeader from '../components/shared/header/MainHeader';\nimport AWS from 'aws-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HotelDetailPage() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n  const userId = loggedInUser.id;\n  const {\n    hotelId\n  } = useParams();\n  const [hotel, setHotel] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [mainImageIndex, setMainImageIndex] = useState(0);\n  const [isShowMore, setIsShowMore] = useState(false);\n  console.log('hahal', hotel);\n  console.log('haha2', userId);\n  AWS.config.update({\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n  });\n  const s3 = new AWS.S3();\n  useEffect(() => {\n    fetchHotelDetail();\n  }, []);\n  const fetchHotelDetail = async () => {\n    try {\n      const response = await axios.get(`/api/hotel/${hotelId}`);\n      console.log(\"API response:\", response);\n      setHotel(response.data);\n    } catch (error) {\n      console.error(`Error fetching hotel detail : ${error}`);\n      console.error(`Error response: ${error.response}`);\n      setError('Faild to load hotel details');\n    }\n  };\n\n  //   const processImages = (imagePath) => {\n  //     if (imagePath) {\n  //         if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n  //             const parsedImages = JSON.parse(imagePath);\n  //             return parsedImages.map((image) => {\n  //                 // \"hotelImage/\" 문자열 뒤의 부분만 반환\n  //                 const splitByWebPath = image.split(\"hotelImage/\");\n  //                 if (splitByWebPath[1]) {\n  //                     return splitByWebPath[1];\n  //                 }\n\n  //                 // 파일 시스템 경로에서 마지막 부분만 반환\n  //                 const splitByFileSystemPath = image.split(\"\\\\\");\n  //                 return splitByFileSystemPath[splitByFileSystemPath.length - 1];\n  //             });\n  //         } else {\n  //             return [imagePath.split(\"hotelImage/\")[1]];\n  //         }\n  //     }\n  //     return [];\n  // };\n\n  const processImages = imagePath => {\n    if (imagePath) {\n      if (typeof imagePath === 'string' && imagePath.trim().charAt(0) === '[') {\n        const parsedImages = JSON.parse(imagePath);\n        if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n          // return parsedImages.map((image) => image.replace('hotelImage/', '')); 이부분은 local 에서 이미지를 불러올때 필요한거\n          return parsedImages;\n        }\n      } else {\n        console.log(\"imagePath!!!\", imagePath);\n        return [imagePath];\n      }\n    }\n    return [];\n  };\n\n  // 대표 이미지 변경 함수\n  const changeMainImage = index => {\n    setMainImageIndex(index);\n  };\n  const deleteMyHotel = () => {\n    if (window.confirm(\"호텔을 삭제하시겠습니까?\")) {\n      dispatch(deleteHotel({\n        hotel_id: hotelId\n      }));\n      navigate(\"/\");\n    }\n  };\n  if (!hotel) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 12\n    }, this);\n  }\n  const imagePaths = processImages(hotel.hotelImages);\n  return /*#__PURE__*/_jsxDEV(HotelLayout, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      bgColor: \"fff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      // src={`/hotelImage/${imagePaths[mainImageIndex]}`}\n      src: imagePaths[mainImageIndex],\n      alt: hotel.hotelName,\n      style: {\n        width: \"100%\",\n        height: \"auto\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\"\n      },\n      children: imagePaths.map((imagePath, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        // src={`/hotelImage/${imagePath}`}\n        src: imagePath // 변경된 부분\n        ,\n        alt: `${hotel.hotelName}-${index}`,\n        onClick: () => changeMainImage(index),\n        style: {\n          cursor: \"pointer\",\n          width: \"100px\",\n          height: \"100px\",\n          marginRight: \"10px\",\n          marginBottom: \"10px\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HotelContiner, {\n      children: [/*#__PURE__*/_jsxDEV(HotelHeader, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: hotel.hotelName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(HeaderLeft, {\n            children: [/*#__PURE__*/_jsxDEV(FaStar, {\n              color: \"ffd700\",\n              fontSize: \"18px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), hotel.average_score === null ? 0 : hotel.average_score, /*#__PURE__*/_jsxDEV(BsPersonFill, {\n              style: {\n                marginLeft: \"10px\"\n              },\n              fontSize: \"18px\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: hotel.user_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HotelPrice, {\n              children: [\"\\u20A9\", hotel.price, \" /\\uBC15\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Like, {\n              hotel_id: hotelId,\n              hotel_owner_id: hotel.user_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(HeaderRight, {\n            children: userId === hotel.user_id ? /*#__PURE__*/_jsxDEV(CancelButton, {\n              onClick: deleteMyHotel,\n              children: \" \\uC0AD\\uC81C\\uD558\\uAE30 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 45\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelSubInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uCD5C\\uB300\\uC778\\uC6D0 \", hotel.maxGuests, \"\\uBA85\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: hotel.hotelSubInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD638\\uD154 \\uC18C\\uAC1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300), hotel.hotelInfo.length > 300 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsShowMore(!isShowMore),\n          children: isShowMore ? \"접기\" : \"...더보기>\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(HotelCommentInfo, {\n        children: /*#__PURE__*/_jsxDEV(CommentContainer, {\n          hotel_id: hotelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HotelPayment, {\n        hotel: hotel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        address: hotel.hotelAddress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/adminProfile/${hotel.user_id}`,\n        children: \"See the profile of this hotel's admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(HotelDetailPage, \"+t6NwfMBMPrJLY+di9dGaSNjQUo=\", false, function () {\n  return [useDispatch, useNavigate, useParams];\n});\n_c = HotelDetailPage;\nvar _c;\n$RefreshReg$(_c, \"HotelDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Link","useParams","useNavigate","Like","HotelPayment","HotelLayout","HotelContiner","HotelHeader","HotelPrice","HotelSubInfo","HotelInfo","HotelCommentInfo","Line","CancelButton","HeaderLeft","HeaderRight","CommentContainer","FaStar","BsPersonFill","Map","useDispatch","deleteHotel","MainHeader","AWS","jsxDEV","_jsxDEV","HotelDetailPage","_s","dispatch","navigate","loggedInUser","JSON","parse","localStorage","getItem","userId","id","hotelId","hotel","setHotel","error","setError","mainImageIndex","setMainImageIndex","isShowMore","setIsShowMore","console","log","config","update","region","process","env","AWS_REGION","accessKeyId","AWS_ACCESS_KEY_ID","secretAccessKey","AWS_SECRET_ACCESS_KEY","s3","S3","fetchHotelDetail","response","get","data","processImages","imagePath","trim","charAt","parsedImages","Array","isArray","length","changeMainImage","index","deleteMyHotel","window","confirm","hotel_id","children","fileName","_jsxFileName","lineNumber","columnNumber","imagePaths","hotelImages","bgColor","src","alt","hotelName","style","width","height","display","flexWrap","map","onClick","cursor","marginRight","marginBottom","color","fontSize","average_score","marginLeft","user_id","price","hotel_owner_id","maxGuests","hotelSubInfo","hotelInfo","slice","address","hotelAddress","to","_c","$RefreshReg$"],"sources":["/Users/kyuhyunpark/Desktop/HotelByKaaPaaa/HotelKP/client/src/pages/HotelDetailPage.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { Link, useParams } from 'react-router-dom';\n// import Like from '../components/shared/like/Like';\n// import HotelPayment from '../components/hotel/HotelPayment';\n// import {HotelLayout,HotelContiner,HotelHeader,HotelPrice,HotelSubInfo,HotelInfo,HotelCommentInfo,Line,} from '../components/pagestyles/HotelDetailStyle'\n// import CommentContainer from '../components/hotel/comment/CommentContainer';\n// import { FaStar } from 'react-icons/fa';\n// import { BsPersonFill } from 'react-icons/bs';\n// import Map from '../components/map/Map';\n// import AWS from 'aws-sdk';\n\n// export default function HotelDetailPage() {\n\n//   const {hotelId} = useParams();\n//   const [hotel,setHotel] = useState(null);\n//   const [error, setError] = useState(\"\");\n//   const [mainImageIndex, setMainImageIndex] = useState(0);\n//   const [isShowMore, setIsShowMore] = useState(false);\n\n//   AWS.config.update({\n//     region: process.env.AWS_REGION,\n//     accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n//     secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n//   })\n//   const s3 = new AWS.S3();\n\n//   useEffect(() =>{\n//     fetchHotelDetail();\n//   },[]);\n\n//   const fetchHotelDetail = async() =>{\n//     try{\n//       const response = await axios.get(`/api/hotel/${hotelId}`);\n//       console.log(\"API response:\", response); \n//       setHotel(response.data);\n//     }catch(error){\n//       console.error(`Error fetching hotel detail : ${error}`);\n//       console.error(`Error response: ${error.response}`); \n//       setError('Faild to load hotel details');\n//     }\n//   };\n    \n//   const processImages = (imagePath) => {\n//     if (imagePath) {\n//       if (typeof imagePath === 'string' && imagePath.trim().charAt(0) === '[') {\n//         const parsedImages = JSON.parse(imagePath);\n//         if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n//           // return parsedImages.map((image) => image.replace('hotelImage/', '')); 이부분은 local 에서 이미지를 불러올때 필요한거\n//           return parsedImages;\n//         }\n//       } else {\n//         console.log(\"imagePath!!!\",imagePath);\n\n//         return [imagePath];\n//       }\n//     }\n//     return [];\n//   };\n\n// // 대표 이미지 변경 함수\n//     const changeMainImage = (index) => {\n//       setMainImageIndex(index);\n//     };\n\n    \n//   if(!hotel){\n//     return <h3>Loading</h3>\n//   }\n\n//   const imagePaths = processImages(hotel.hotelImages);\n\n//   return (\n//     <HotelLayout>\n//       <img\n//       src={imagePaths[mainImageIndex]}\n//       alt={hotel.hotelName}\n//       style={{ width: \"100%\", height: \"auto\" }} \n//       />\n//       <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n//         {imagePaths.map((imagePath, index) => (\n//           <img\n//             key={index}\n//             src={imagePath} // 변경된 부분\n//             alt={`${hotel.hotelName}-${index}`}\n//             onClick={() => changeMainImage(index)}\n//             style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n//             />\n//         ))}\n//       </div>\n\n//       <HotelContiner>\n//         <HotelHeader>\n//           <h1>{hotel.hotelName}</h1>\n//           <div>\n//             <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n//               {\n//                 (hotel.average_score === null ? 0 : hotel.average_score)\n//               }\n//             <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n//             <span>{hotel.user_id}</span>\n//             <HotelPrice>₩{hotel.price} /박</HotelPrice>\n//             <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n//           </div>\n//         </HotelHeader>\n//         <HotelSubInfo>\n//           <span>최대인원 {hotel.maxGuests}명</span>\n//           <span>{hotel.hotelSubInfo}</span>\n//         </HotelSubInfo>\n\n//         {/* <p>{hotel.hotelregion}</p> */}\n//         <HotelInfo>\n//           <h2>호텔 소개</h2>\n//           {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n//           {hotel.hotelInfo.length > 300 && (\n//           <button onClick={() => setIsShowMore(!isShowMore)}>\n//             {isShowMore ? \"접기\" : \"...더보기>\"}\n//           </button>\n//         )}\n//         </HotelInfo>\n\n//         {error && <p>{error}</p>}\n      \n//         <HotelCommentInfo>\n//           <CommentContainer hotel_id={hotelId}/>\n//         </HotelCommentInfo>\n//         <Line />\n//         <HotelPayment hotel={hotel}/>\n//         <Map address={hotel.hotelAddress}/>\n//         <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n//       </HotelContiner>\n//     </HotelLayout>\n//   );\n// }\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport Like from '../components/shared/like/Like';\nimport HotelPayment from '../components/hotel/HotelPayment';\nimport {HotelLayout,\n        HotelContiner,\n        HotelHeader,\n        HotelPrice,\n        HotelSubInfo,\n        HotelInfo,\n        HotelCommentInfo,\n        Line, \n        CancelButton,\n        HeaderLeft,\n        HeaderRight} from '../components/pagestyles/HotelDetailStyle'        \nimport CommentContainer from '../components/hotel/comment/CommentContainer';\nimport { FaStar } from 'react-icons/fa';\nimport { BsPersonFill } from 'react-icons/bs';\nimport Map from '../components/map/Map';\nimport { useDispatch } from 'react-redux';\nimport { deleteHotel } from '../redux/hotelActions';\nimport MainHeader from '../components/shared/header/MainHeader';\nimport AWS from 'aws-sdk';\n\n\nexport default function HotelDetailPage() {\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const loggedInUser = JSON.parse(localStorage.getItem(\"loggedInUser\"));\n  const userId = loggedInUser.id;\n\n  const {hotelId} = useParams();\n  const [hotel,setHotel] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [mainImageIndex, setMainImageIndex] = useState(0);\n  const [isShowMore, setIsShowMore] = useState(false);\n\n  console.log('hahal', hotel);\n  console.log('haha2', userId);\n\n\n  AWS.config.update({\n    region: process.env.AWS_REGION,\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY\n  })\n  const s3 = new AWS.S3();\n\n  useEffect(() =>{\n    fetchHotelDetail();\n  },[]);\n\n  const fetchHotelDetail = async() =>{\n    try{\n      const response = await axios.get(`/api/hotel/${hotelId}`);\n      console.log(\"API response:\", response); \n      setHotel(response.data);\n    }catch(error){\n      console.error(`Error fetching hotel detail : ${error}`);\n      console.error(`Error response: ${error.response}`); \n      setError('Faild to load hotel details');\n    }\n  };\n    \n//   const processImages = (imagePath) => {\n//     if (imagePath) {\n//         if (typeof imagePath === \"string\" && imagePath.trim().charAt(0) === \"[\") {\n//             const parsedImages = JSON.parse(imagePath);\n//             return parsedImages.map((image) => {\n//                 // \"hotelImage/\" 문자열 뒤의 부분만 반환\n//                 const splitByWebPath = image.split(\"hotelImage/\");\n//                 if (splitByWebPath[1]) {\n//                     return splitByWebPath[1];\n//                 }\n                \n//                 // 파일 시스템 경로에서 마지막 부분만 반환\n//                 const splitByFileSystemPath = image.split(\"\\\\\");\n//                 return splitByFileSystemPath[splitByFileSystemPath.length - 1];\n//             });\n//         } else {\n//             return [imagePath.split(\"hotelImage/\")[1]];\n//         }\n//     }\n//     return [];\n// };\n\nconst processImages = (imagePath) => {\n  if (imagePath) {\n    if (typeof imagePath === 'string' && imagePath.trim().charAt(0) === '[') {\n      const parsedImages = JSON.parse(imagePath);\n      if (Array.isArray(parsedImages) && parsedImages.length > 0) {\n        // return parsedImages.map((image) => image.replace('hotelImage/', '')); 이부분은 local 에서 이미지를 불러올때 필요한거\n        return parsedImages;\n      }\n    } else {\n      console.log(\"imagePath!!!\",imagePath);\n\n      return [imagePath];\n    }\n  }\n  return [];\n};\n\n// 대표 이미지 변경 함수\n  const changeMainImage = (index) => {\n    setMainImageIndex(index);\n  };\n\n  const deleteMyHotel = () => {\n    if (window.confirm(\"호텔을 삭제하시겠습니까?\")) {\n      dispatch(deleteHotel({hotel_id:hotelId}));\n      navigate(\"/\");\n    }\n  }\n\n    \nif(!hotel){\n    return <h3>Loading</h3>\n  }\n\n  const imagePaths = processImages(hotel.hotelImages);\n\n  return (\n    <HotelLayout>\n      <MainHeader bgColor=\"fff\"/>\n      <img\n        // src={`/hotelImage/${imagePaths[mainImageIndex]}`}\n        src={imagePaths[mainImageIndex]}\n        alt={hotel.hotelName}\n        style={{ width: \"100%\", height: \"auto\" }} \n      />\n      <div style={{ display: \"flex\", flexWrap: \"wrap\" }}> \n      {imagePaths.map((imagePath, index) => (\n          <img\n            key={index}\n            // src={`/hotelImage/${imagePath}`}\n            src={imagePath} // 변경된 부분\n            alt={`${hotel.hotelName}-${index}`}\n            onClick={() => changeMainImage(index)}\n            style={{ cursor: \"pointer\", width: \"100px\", height: \"100px\", marginRight: \"10px\", marginBottom: \"10px\" }}\n          />\n        ))}\n      </div>\n\n      <HotelContiner>\n        <HotelHeader>\n          <h1>{hotel.hotelName}</h1>\n          <div>\n            <HeaderLeft>\n              <FaStar color=\"ffd700\" fontSize=\"18px\"/>\n                {\n                  (hotel.average_score === null ? 0 : hotel.average_score)\n                }\n              <BsPersonFill style={{ marginLeft: \"10px\" }} fontSize=\"18px\"/>\n              <span>{hotel.user_id}</span>\n              <HotelPrice>₩{hotel.price} /박</HotelPrice>\n              <Like hotel_id={hotelId} hotel_owner_id={hotel.user_id}/>\n            </HeaderLeft>\n            <HeaderRight>\n              {\n                (userId === hotel.user_id ? <CancelButton onClick={deleteMyHotel}> 삭제하기 </CancelButton>: null)\n              }\n            </HeaderRight>\n          </div>\n        </HotelHeader>\n\n        <HotelSubInfo>\n          <span>최대인원 {hotel.maxGuests}명</span>\n          <span>{hotel.hotelSubInfo}</span>\n        </HotelSubInfo>\n\n        {/* <p>{hotel.hotelregion}</p> */}\n        <HotelInfo>\n          <h2>호텔 소개</h2>\n          {isShowMore ? hotel.hotelInfo : hotel.hotelInfo.slice(0, 300)}\n          {hotel.hotelInfo.length > 300 && (\n          <button onClick={() => setIsShowMore(!isShowMore)}>\n            {isShowMore ? \"접기\" : \"...더보기>\"}\n          </button>\n        )}\n        </HotelInfo>\n\n        {error && <p>{error}</p>}\n        \n        <HotelCommentInfo>\n          <CommentContainer hotel_id={hotelId}/>\n        </HotelCommentInfo>\n\n        <Line />\n\n        <HotelPayment hotel={hotel}/>\n\n        <Map address={hotel.hotelAddress}/>\n\n\n        <Link to={`/adminProfile/${hotel.user_id}`}>See the profile of this hotel's admin</Link>\n\n      </HotelContiner>\n    </HotelLayout>\n  );\n}"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AAC/D,OAAOC,IAAI,MAAM,gCAAgC;AACjD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAAQC,WAAW,EACXC,aAAa,EACbC,WAAW,EACXC,UAAU,EACVC,YAAY,EACZC,SAAS,EACTC,gBAAgB,EAChBC,IAAI,EACJC,YAAY,EACZC,UAAU,EACVC,WAAW,QAAO,2CAA2C;AACrE,OAAOC,gBAAgB,MAAM,8CAA8C;AAC3E,SAASC,MAAM,QAAQ,gBAAgB;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,GAAG,MAAM,uBAAuB;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,OAAOC,UAAU,MAAM,wCAAwC;AAC/D,OAAOC,GAAG,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,eAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}